CLASS UpgradeSpawner : ACTOR { 
Default {
	
	-COUNTITEM;
	+DONTGIB;
}
States
{
	
	Spawn:
 		TNT1 A 1 A_Jump(256, "SpawnLMG", "SpawnQuadSSG", "SpawnAutoshotgunUpgrade", "SpawnMinigunUpgrade", "SpawnDragonBreathUpgrade", "SpawnPulseCannon", "SpawnRifleUpgrade", "SpawnUnmakerUpgrade", "SpawnM2Upgrade");
		TNT1 A 0;
	ReplaceVanilla:
		TNT1 A 0 A_SpawnItemEx("AmmoSuply",0,0,0,0,0,0,0,288);
	Stop;
		
	BackpackSpawn:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("CombatBackpack",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnLMG:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("LMG",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnQuadSSG:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("Quad_SSG",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnAutoshotgunUpgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("AutoshotgunUpgrade",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnMinigunUpgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("MinigunUpgrade",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnDragonBreathUpgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("PumpshotgunUpgrade",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnPulseCannon:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("PulseCannonUpgrade",0,0,0,0,0,0,0,288);
	Stop;
		
		
	SpawnRifleUpgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("RifleUpgrade",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnUnmakerUpgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("Unmaker",0,0,0,0,0,0,0,288);
	Stop;
		
	SpawnM2Upgrade:
		TNT1 A 0;
 		//TNT1 A 0 A_SpawnItemEx("M2Upgrade",0,0,0,0,0,0,0,288);
	Stop;
}
}

CLASS ExplosivesCrate: CustomInventory { 
Default {
	Scale 0.92;
	-COUNTITEM;
	+DONTGIB;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.pickupsound "misc/rockboxa";
	Inventory.PickupMessage "You found an explosive ordinance crate!";
}
States
{
	Spawn:
		100M B 2;
		Loop;
		
	Pickup:
		TNT1 A 0 A_GiveInventory("HighExplosiveGrenadeRounds",5);
		TNT1 A 0 A_GiveInventory("SpecialGrenadeRounds", 6) ;
		TNT1 A 0 A_GiveInventory("RocketAmmo", 6);
		TNT1 A 20;
		Stop;
		
}
}

CLASS PowerDoubleDamage : PowerDamage { 
Default {
	Damagefactor "normal", 3;
}
}

CLASS DoubleSphere : PowerupGiver { 
Default {
	-COUNTITEM;
	+DONTGIB;
	+Floatbob;
	+NOGRAVITY;
	+INVENTORY.AUTOACTIVATE;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.MaxAmount 0;
	Powerup.Type "PowerDoubleDamage";
	Powerup.Duration -30;
	Translation "0:255=%[0,0,0]:[1,0,1]";
	Powerup.Color "255, 0, 255, 0.150";
	Inventory.PickupSound "DDMGPU";
	Inventory.PickupMessage "You got the Doom sphere. Your arsenal craves blood...";
}
States
{
Spawn:
 	TNT1 AA 0;
	DDMG AAABBBCCCDDD 2 Bright A_SpawnItem("PurpleFlareMedium",0,30);
	Goto Spawn+2;
	
ReplaceTraditional:
	TNT1 A 1;
	Stop;
	
Pickup:
	TNT1 AAAAAAAAAAAAA 0 a_spawnprojectile("CasingSmoke", 0, 0, random(0, 360), 2, random(0, 360));
	TNT1 A 0 A_Print("You got the Demon Damage sphere. You're arsenal craves blood...");
	Stop;
}
}


CLASS RageSphere : PowerupGiver { 
Default {

-COUNTITEM;
+DONTGIB;
+INVENTORY.AUTOACTIVATE;
+INVENTORY.ALWAYSPICKUP;
+INVENTORY.BIGPOWERUP;
Inventory.MaxAmount 0;
Powerup.Duration -45;
Powerup.Color "255, 0, 0", 0.125;
Inventory.PickupMessage "You got the Rage Sphere. Your fingers tremble with energy...";
Powerup.Type "PowerDoubleFiringSpeed";
Inventory.PickupSound "DEM";
}
States
{

Spawn:
 	TNT1 AA 0;
	BLDS ABCDCB 6 Bright;
	Goto Spawn+2;
	
ReplaceTraditional:
	TNT1 A 1;
	Stop;
	
Pickup:
	TNT1 A 0 A_Print("You got the Rage Sphere. Your fingers tremble with energy...");
	Stop;
}
}

CLASS HasteSphere : PowerupGiver replaces RageSphere { 
Default {

inventory.pickupmessage "You got the Haste Sphere. Your body trembles with energy...";
inventory.maxamount 0;
powerup.duration -30;
powerup.color "FF FF 00", 0.1;
powerup.type "powerSpeed";
-COUNTITEM;
+FloatBob;
+INVENTORY.AUTOACTIVATE;
+INVENTORY.ALWAYSPICKUP;
Inventory.PickupSound "DEM";
}
States
{
Spawn:
 	TNT1 AA 0;
	HAST AAABBBCCC 2 A_SpawnItem("YellowFlareMedium",0,30);
	Goto Spawn+2;
	
ReplaceTraditional:
	TNT1 A 1;
	Stop;
	
Pickup:
	TNT1 AAAAAAAAAAAAA 0 a_spawnprojectile("CasingSmoke", 0, 0, random(0, 360), 2, random(0, 360));
	TNT1 A 0 A_Print("You got the Haste Sphere. Your body trembles with energy...");
	Stop;
}
}


CLASS TimeSphere : PowerupGiver { 
Default {
	-CountItem;
	+NoGravity;
	+DONTGIB;
	+FloatBob;
	+Inventory.AutoActivate;
	+Inventory.AlwaysPickup;
	Inventory.MaxAmount 0;
	Inventory.pickupsound "TIMESPH";
	Powerup.Type "powerTimeFreezer";
	Powerup.Color "GoldMap";
	Powerup.Duration -10;
}
States
{
Spawn:
 	TNT1 AA 0;
	TIME AAABBBCCCDDD 2 Bright;
	Goto SPawn+2;
	
ReplaceTraditional:
	TNT1 A 1;
	Stop;
	
Pickup:
	TNT1 AAAAAAAAAAAAA 0 a_spawnprojectile("CasingSmoke", 0, 0, random(0, 360), 2, random(0, 360));
	TNT1 A 0 A_Print("You've found a Time Sphere!");
	Stop;
	
}
}
CLASS TimeFreezer : TimeSphere {}

CLASS DoElecPod: Inventory { 
Default {	
	Inventory.maxamount 1;
}
}

//Electric Pods
CLASS ElecPod : CustomInventory { 
Default {
	Inventory.Amount 1;
	Inventory.MaxAmount 5;
	Inventory.PickupSound "PLSDRAW";
	Inventory.PickupMessage "Picked up an Electric Pod Container.";
	Inventory.Icon "ELPDP";
	Tag "Fires out bouncing electric mines.";
	+inventory.INVBAR;
	+FLOORCLIP;
	+DONTGIB;
	+COUNTITEM;
	Scale 0.65;
}
States
{
	Spawn:
		ELPD A -1;
		Stop;
	Use:
		TNT1 A 0 A_GiveInventory("DoElecPod", 1);
		TNT1 A 0 A_GiveInventory("ElecPod", 1);//Weird work around I'm doing because I don't have time to put a lot of thought into things. DON'T JUDGE ME.
		// ELPD A 0 A_ThrowGrenade("ElectricPodSet",4,16,3,0)
		Stop;
} 
}

CLASS ElectricPodSet : ACTOR {//Buffed these guys considerably
Default {
	
	Radius 3;
	Height 5;
	Speed 20;
	+MISSILE;
	+DROPOFF;
	+DONTGIB;
	+CANBOUNCEWATER;
	DONTHURTSHOOTER;
	Scale 0.65;
}
States
{
	Spawn:
		TNT1 A 0 A_PlaySound("PLSCHARG");
		ELPD A 100 Bright;
	Death:
		ELPD A 30 Bright;
		TNT1 A 0 A_PlaySound("PLSULT");
		TNT1 A 0 A_SpawnItemEx("PodExplosion",0,0,0,0,0,0,0,32) ;
		TNT1 A 0 A_AlertMonsters ;
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 0);
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 90);
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 180);
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 270);
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 0);
		TNT1 A 3 A_SpawnItemEx("ElecPodMine", 25, -9, 28, 0, 0, 0, 0);
		Stop;
} 
}


CLASS ElecPodMine : ACTOR { 
Default {
	
	Radius 6;
	Height 6;
	Speed 11;
	Gravity 0.5;
	PROJECTILE;
	-NOGRAVITY;
	+DOOMBOUNCE;
	+DROPOFF;
	+GRENADETRAIL;
	+THRUACTORS;
	-SHOOTABLE;
	+NOTARGET;
	+CANBOUNCEWATER;
	BounceSound "minejump";
	BounceType "Hexen";
	BounceCount 25;
}
States
{
	Spawn:   
		EPDP AAA 20 Bright;
		TNT1 A 0 ThrustThingZ(0,20,0,0);
		TNT1 A 0 ThrustThing(random(0,360), 8, 0, 0);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 0);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 10);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 20);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 30);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 40);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 50);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 60);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 70);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 80);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 90);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 100);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 110);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 120);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 130);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 140);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 150);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 160);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 170);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 180);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 190);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 200);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 210);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 220);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 230);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 240);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 250);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 260);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 270);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 280);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 290);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 300);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 310);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 320);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 330);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 340);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 350);
		EPDP A 0 a_spawnprojectile("MineElectricity", 0, 0, 360) ;
		Goto Spawn+2;
	Death:
		TNT1 A 0 A_SpawnItemEx("PodExplosionSmall",0,0,0,0,0,0,0,32);
		Stop;
}
}

CLASS MineElectricity : ACTOR { 
Default {
	
	Speed 12;
	Damage 4;
	Damagetype "plasma";
	PROJECTILE;
	RENDERSTYLE "Translucent";
	+NOEXTREMEDEATH;
	Scale 0.3;
	SeeSound "Sparks/Spawn";
}
States
{
	Spawn:
		PDEL ABABABABAB 1 Bright A_SetTranslucent(0.5);
		Stop;
	Death:
		PDEL A 2 Bright A_SetTranslucent(0.2);
		Stop;
}
}

CLASS Electricity : ACTOR { 
Default {
	
	Speed 12;
	Damagefunction(random(0,1));
	Damagetype "plasma";
	PROJECTILE;
	RENDERSTYLE "Translucent";
	+NOEXTREMEDEATH;
	Scale 0.3;
	SeeSound "Sparks/Spawn";
}
States
{
	Spawn:
		PDEL ABABABABAB 1 Bright A_SetTranslucent(0.5);
		Stop;
	Death:
		PDEL A 2 Bright A_SetTranslucent(0.2);
		Stop;
}
}

CLASS PodExplosion  : ACTOR { //Does no damage.
Default {
	
	Projectile;
	Radius 6;
	Height 6;
	Speed 0;
	RenderStyle "Add";
	Alpha 0.99;
	Scale 1;
}
States
{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0 A_PlaySound("podbigxp");
		PEXP ABCDEFGHIJ 1;
		TNT1 A 3 Bright;
		Stop;
}
}

CLASS PodExplosionSmall  : ACTOR { //Used for the mines. Does no damage.
Default {
	
	Projectile;
	Radius 4;
	Height 4;
	Speed 0;
	RenderStyle "Add";
	Alpha 0.99;
	Scale 0.4;
}
States
{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0 A_PlaySound("pdprjxp");
		PEXP ABCDEFGHIJ 1;
		TNT1 A 3 Bright;
		Stop;
}
}

CLASS DoSwarmPod: Inventory { 
Default {
	
	Inventory.maxamount 1;
}
}

//Swarmers
CLASS Swarmers : CustomInventory { 
Default {
	Inventory.Amount 1;
	Inventory.MaxAmount 5;
	Inventory.PickupSound "SHPODGET";
	Inventory.PickupMessage "Picked up a Swarmer Pod.";
	Inventory.Icon "ISHDA0";
	Tag "Swarmers - Releases razor sharp mites to slice through enemies.";
	Scale 0.6;
	+inventory.INVBAR;
	+FLOORCLIP;
	+DONTGIB;
	+COUNTITEM;
}
States
{
	Spawn:
		SHDD A -1;
		Stop;
	Use:
		TNT1 A 0 A_GiveInventory("DoSwarmPod", 1);
		TNT1 A 0 A_GiveInventory("Swarmers", 1);
		//TNT1 A 0 A_ThrowGrenade("SwarmerPodSet",4,16,3,0)
		Stop;
} 
}

CLASS SwarmerPodSet : ACTOR { 
Default {
	
	Radius 3;
	Height 5;
	Speed 22;
	+MISSILE;
	+DROPOFF;
	+CANBOUNCEWATER;
	+BOUNCEONWALLS;
	+THRUACTORS;
	DONTHURTSHOOTER;
	BounceType "Doom";
	BounceCount 2;
	WallBounceFactor 0.25;
	BounceFactor 0.25;
	Scale 0.89;
}
States
{
	Spawn:
		SHDD A 1 Bright;
		Loop;
	Death:
		SHDD A 1 Bright;
		TNT1 A 0 A_SpawnItem("SwarmerPodActive",1,0,0);
		Stop;
} 
}

CLASS SwarmerPodActive : ACTOR { 
Default {
	
	Radius 3;
	Height 5;
	Speed 12;
	Reactiontime 2;
	PROJECTILE;
	+THRUACTORS;
	-SHOOTABLE;
	+BRIGHT;
	Scale 0.89;
}
States
{
	Spawn:   
		TNT1 A 0;
		SHDD A 1;
		TNT1 A 0 A_CountDown;
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_PlaySound("SHPODEXP");
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("SwarmerMite",0,0,0,0,0,0,0,SXF_ABSOLUTEPOSITION);
		TNT1 A 0 A_SpawnItem("SPodExplosion",0,0,0);
		Stop;
}
}

CLASS SwarmerMite : ACTOR { 
Default {
	
	Radius 2;
	Height 2;
	Speed 12;
	PROJECTILE;
	Reactiontime 180;
	Scale 0.25;
	+THRUACTORS;
	-SHOOTABLE;
	+NOGRAVITY;
	+NOTARGET;
	-SEEKERMISSILE;
	+STEPMISSILE;
	+CANBOUNCEWATER;
	+BRIGHT;
	+USEBOUNCESTATE;
	+DROPOFF;
	BounceType "Hexen";
	WallBounceFactor 1.5;
	WallBounceSound "SHDPHIT";
	BounceCount 100;
}
States
{
	Spawn:   
		TNT1 A 0;
		TNT1 A 0 {self.bNOGRAVITY = false;}
		TNT1 A 0 {self.bUSEBOUNCESTATE = false;}
		SPMT AA 2;
		TNT1 A 0 {self.bUSEBOUNCESTATE = true;}
		SPMT A 1 ThrustThingZ(0,6,0,0);
		SPMT A 1 ThrustThing(random(0,360), 3, 0, 0);
		TNT1 A 0 ThrustThing(random(0,360), 1, 0, 0);
		TNT1 A 0 A_CountDown;
		SPMT BC 1;
		TNT1 A 0 A_CountDown;
		TNT1 A 0 ThrustThing(random(0,360), 1, 0, 0);
		TNT1 A 0 A_PlaySound("SHDPFLY",5,0.2,1);
		TNT1 A 0 A_Jump(150,8);
		TNT1 A 0 ThrustThingZ(random(3,6), 0, 0, 0);
		SPMT BC 1;
		TNT1 A 0 ThrustThingZ(random(3,6), 0, 0, 0);
		TNT1 A 0 A_CountDown;
		SPMT BC 1;
		TNT1 A 0 A_CountDown;
		TNT1 A 0 ThrustThingZ(random(3,6), 0, 0, 0);
		TNT1 A 0 ThrustThing(random(0,360), 3, 0, 0);
		SPMT BC 1;
		TNT1 A 0 A_SpawnItem("ShredderDMG",0,0,0);
		TNT1 A 0 A_CountDown;
		Goto Spawn+8 ;
	Bounce:
		TNT1 A 0;
		TNT1 A 0 A_Jump(255,"Rise","Seeker");
		Goto Spawn+8;
	Rise:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("SHDPFLY",5,0.2,1);
		SPMT BCBC 1 ThrustThingZ(0,2,0,0);
		Goto Spawn+8;
	Seeker:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("SHDPFLY",5,0.2,1);
		TNT1 A 0 {self.bSEEKERMISSILE = true;}
		TNT1 AAA 0 A_SeekerMissile(12,20,SMF_LOOK,256|SMF_PRECISE,40);
		TNT1 A 0 A_SpawnItem("ShredderDMG",0,0,0);
		SPMT BCBCBCBC 1 A_SeekerMissile(12,20,SMF_LOOK,256|SMF_PRECISE,40);
		TNT1 A 0 {self.bSEEKERMISSILE = false;}
		Goto Spawn+8;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("SHDPDIE",5,0.6,0);
		TNT1 A 0 A_SpawnItem("SMiteExplosion",0,0,0);
		Stop;
}
}

CLASS ShredderDMG : ACTOR { //Spawn as the "mites" travel to damage enemies.
Default {
	
	Speed 2;
	Radius 15;
	Height 8;
	Damagefunction(2*random(1,3));
	Damagetype "cut";
	PROJECTILE;
	+BLOODSPLATTER;
	+RIPPER;
}
States
{
	Spawn:
		TNT1 A 1;
		Stop;
	Death:
		TNT1 A 0;
		Stop;
}
}

CLASS SPodExplosion : ACTOR { 
Default {
	
	PROJECTILE;
	+BRIGHT;
	Radius 4;
	Height 4;
	Speed 0;
	RenderStyle "Add";
	Alpha 0.6;
	Scale 0.8;
}
States
{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("SHPODEXP");
		SHXP ABC 1;
		SHXP D 2 A_SetScale(2.1);
		SHXP E 2 A_SetTranslucent(0.4);
		TNT1 A 0 A_SetScale(1.4);
		SHXP F 2 A_SetTranslucent(0.2);
		Stop;
}
}

CLASS SMiteExplosion : ACTOR { 
Default {
	
	PROJECTILE;
	+BRIGHT;
	Radius 4;
	Height 4;
	Speed 0;
	RenderStyle "Add";
	Alpha 0.8;
	Scale 0.4;
}
States
{
	Spawn:
		TNT1 A 0;
		Goto Death;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("SHPODEXP",5,0.6,0);
		MTXP ABCDEFGHIJ 1;
		Stop;
}
}

CLASS Beacon : CustomInventory { 
Default {
	+COUNTITEM;
	+DONTGIB;
	+INVENTORY.INVBAR;
	Inventory.MaxAmount 3;
	Inventory.Icon "BEACB0";
	Inventory.PickupSound "ZSpecOps/Sight";
	Inventory.PickupMessage "You picked up a UAC Distress beacon!";
}
States
{
	Spawn:
		B3AC AABBCCDDEEDDCCBB 1 BRIGHT;
		Loop;
		
	Use:
		TNT1 A 1 A_SpawnItemEx("ActiveBeacon", 56, 0, 8, 0, 0, 0, 0, 1);
		Stop;
}
}

CLASS ActiveBeacon : ACTOR { 
Default {
	
	-SOLID;
	-SHOOTABLE;
}
States
{
	Spawn:
		TNT1 A 0 A_Playsound("MRNWT",9);
		BEAC A 100;
		BEAC A 0 a_spawnprojectile("TeleportFog", 0, 0, 0, 0, 0);
		//BEAC A 0 A_SpawnItemEx("RandomPBMarine",0,0,0,0,0,0,0,288);
		BEAC A 100;
		BEAC A 0 a_spawnprojectile("TeleportFog", 0, 0, 0, 0, 0);
		//BEAC A 0 A_SpawnItemEx("RandomPBMarine",0,0,0,0,0,0,0,288);
		BEAC A 100;
		BEAC A 0 a_spawnprojectile("TeleportFog", 0, 0, 0, 0, 0);
		//BEAC A 0 A_SpawnItemEx("RandomPBMarine", 0, 0, 8, 0, 0, 0, 0, 1);
		BEAC A 105;
		goto Death;
	Death:
		TNT1 A 1 a_spawnprojectile("TeleportFog", 0, 0, 0, 0, 0);
		stop;
}
}

CLASS SentryGun: SwitchableDecoration { 
Default {
	
	obituary "%o was ventilated by an auto-sentry.";
	health 300;
	radius 20;
	height 56;
	mass 100000;
	speed 0;
	DamageFactor "Blood", 0.0; DamageFactor "BlueBlood", 0.0; DamageFactor "GreenBlood", 0.0;
	DamageFactor "BlueBloodSplasher", 0.0;
	DamageFactor "BlueSuperBloodSplasher", 0.0;
	DamageFactor "bloodsplasher", 0.0;    DamageFactor "tinybloodsplasher", 0.0;
    DamageFactor "superbloodsplasher", 0.0;    DamageFactor "smallbloodsplasher", 0.0;
	DamageFactor "Fatality", 5.0;
	DamageFactor "Shrapnel", 0.4;
	MaxTargetRange 2048;
	attacksound "weapons/minigunfire2";
	MONSTER;
	+FLOORCLIP;
	+FRIENDLY;
	+NOBLOOD;
	+USESPECIAL;
	Activation THINGSPEC_Activate;
	+QUICKTORETALIATE;
	+LOOKALLAROUND;
	+NEVERRESPAWN;
	+STANDSTILL;
	+MISSILEMORE;
	+MISSILEEVENMORE;
}
states
{
	Spawn:
		//TNT1 A 0 A_GiveInventory("TargetIsAMarine", 1);
		SENT AAAAAAAAAA 1 A_Look;
		TNT1 A 0 A_SetAngle(angle + 45);
		SENT A 0 A_PlaySound("SENSCAN");
		SENT AAAAAAAAAA 1 A_Look;
		TNT1 A 0 A_SetAngle(angle - 45);
		SENT AAAAAAAAAA 1 A_Look;
		TNT1 A 0 A_SetAngle(angle - 45);
		SENT A 0 A_PlaySound("SENSCAN");
		SENT AAAAAAAAAA 1 A_Look;
		TNT1 A 0 A_SetAngle(angle + 45);
		loop;
	ForgetTarget:
		TNT1 A 0 A_ClearTarget;
	See:
		SENT AAAAAAAAAAAAAAAA 1 A_Chase;
		SENT A 0 A_PlaySound("SENSCAN");
		loop;
		
		
	Active:
		TNT1 A 2;
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 {self.bSHOOTABLE = false;}
		TNT1 A 0 {self.bSOLID = false;}
		//TNT1 A 0 A_SpawnItem("Ally")
		//TNT1 A 0 A_GiveToTarget("SentryBox", 1)
		TNT1 A 0 A_SpawnItemEx("SentryBox",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0;
		Stop;
		
	Missile:
		SENT A 0 A_PlaySound("SENSEE", 2);
		SENT AAAAAAAAAAAA 1 A_FaceTarget;
	MissileContinue:
		//TNT1 A 0 A_JumpIfInTargetInventory("TargetIsAMarine", 1, "ForgetTarget");
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, 6);
		SENT A 1 bright a_spawnprojectile("SentryTracer1", 42, 6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, -6);
		SENT A 1 bright a_spawnprojectile("SentryTracer2", 42, -6, random(-4, 4), 0);//A_CPosAttack
		
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, 6);
		SENT A 1 bright a_spawnprojectile("SentryTracer3", 42, 6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, -6);
		SENT A 1 bright a_spawnprojectile("SentryTracer1", 42, -6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, 6);
		SENT A 1 bright a_spawnprojectile("SentryTracer2", 42, 6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, -6);
		SENT A 1 bright a_spawnprojectile("SentryTracer3", 42, -6, random(-4, 4), 0);//A_CPosAttack
		
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, 6);
		SENT A 1 bright a_spawnprojectile("SentryTracer1", 42, 6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 2 A_FaceTarget;
		TNT1 A 0 A_Playsound("weapons/gatlingfire");
		TNT1 A 0 a_spawnprojectile("MarineMuzzle1", 42, -6);
		SENT A 1 bright a_spawnprojectile("SentryTracer2", 42, -6, random(-4, 4), 0);//A_CPosAttack
		
		SENT A 0 A_MonsterRefire(32, "See");
		Goto MissileContinue;
		
	Death:
		SENT C 1 A_PlaySound("Sentry/Death", 5);
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 {self.bUSESPECIAL = false;}
		SENT C 0 A_PlaySound("weapons/rocklx", 6);
		TNT1 A 0
		{
			for(int i = 0; i < 4; i++)
			{
				A_PlaySound("FAREXPL");
				A_PlaySound("Explosion", 1);
				a_spawnprojectile("CasingSmoke", 0, 0, random(0, 360), 2, random(0, 360));
				a_spawnprojectile("ExplosionSmoke", 0, 0, random(0, 360), 2, random(0, 360));
				A_SpawnItemEx("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
				a_spawnprojectile("ExplosionFlames", 0, 0, random(0, 360), 2, random(0, 360));
			}
		}
		SENT CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 8 a_spawnprojectile("ExplosionSmoke", 24, 0, random(0, 180), 2, random(0, 180));
		SENT C -1;
	FadeOut:
		SENT C 2 A_FadeOut(0.1);
		loop;
}
}

CLASS SentryBox : CustomInventory { 
Default {
	+COUNTITEM;
	+INVENTORY.INVBAR;
	+DONTGIB;
	Inventory.MaxAmount 3;
	Inventory.Icon "SENBB0";
	Inventory.PickupSound "CHAINSTA";
	Inventory.PickupMessage "You picked up a sentry gun!";
}
States
{
	Spawn:
		S3NB AABBCCDDEEDDCCBB 1 BRIGHT;
		Loop;
	Use:
		TNT1 A 1 A_SpawnItemEx("SentryGun", 56, 0, 8, 0, 0, 0, 0, 1);
		Stop;
}
}

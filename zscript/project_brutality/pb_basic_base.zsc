//base class for all projectile in pb
class pb_projectile_base : fastprojectile
{
//storing interpolation data for effect event
vector3 prev_pos;

eventhandler effects;

override void tick()
{
	super.tick();
	prev_pos = prev;
}

}


//base for weapons attack hich use continuos ray
class pb_in_line_attack : pb_projectile_base
{
vector3 start_pos;
}


//body base
class pb_dismembered_monster_base : actor
{}

//gore and blood base, obvious
class pb_blood_and_gore_base : actor
{
default
{
	speed 1;
	bouncetype "doom";
}

//function which check if floor teture name match with function arguments
//return true if something match
static bool check_floor_texture(actor caller = null,
string one = "", string two = "", string three = "", string four = "", string five = "")
{
	if(caller == null) {return false;}
	if(one == "") {return false;}

	string test = TexMan.GetName(caller.floorpic);
	test.ToUpper();

	int number = -1;
	one.ToUpper();
	number = test.indexof(one);
	if(number > -1) {return true;}

	two.ToUpper();
	number = test.indexof(two);
	if(number > -1) {return true;}

	three.ToUpper();
	number = test.indexof(three);
	if(number > -1) {return true;}

	four.ToUpper();
	number = test.indexof(four);
	if(number > -1) {return true;}

	five.ToUpper();
	number = test.indexof(five);
	if(number > -1) {return true;}

	return false;
}

protected virtual void pb_move_gore(actor inflictor = null, int dam = 0)
{
	if(inflictor == null) return;

	vector3 move_dir = vec3to(inflictor).unit();
	move_dir *= -1;
	if(move_dir.z >= -0.4)
	{
		move_dir *= 2;
		move_dir +=(0, 0, random(move_dir.z, 5) );
		vel = move_dir;
	}
	else
	{
		move_dir *= 2;
		vel = move_dir;	
	}
}

override int DamageMobj(Actor inflictor, Actor source,int damage,Name mod,int Flags,Double angle)
{
	if(inflictor)
	{
		pb_move_gore(inflictor, damage);
	}
	else
	{
		pb_move_gore(source, damage);
	}
	return super.DamageMobj(inflictor, source, damage, mod, flags ,angle);
}

}





class pb_decoration_base : actor {}






CLASS Gibs_General : ACTOR
{ 
Default
{
	radius 1;
	height 1;
	mass 1;
	damage 0;
	+MISSILE;
	+NOBLOCKMAP;
	+CLIENTSIDEONLY;
	+NOGRAVITY;
	+DROPOFF;
	+NOTELEPORT;
	+FORCEXYBILLBOARD;
	+NOTDMATCH;
	+GHOST;
	radius 1;
	height 1;
	mass 1;
	damage 0;
	}
}

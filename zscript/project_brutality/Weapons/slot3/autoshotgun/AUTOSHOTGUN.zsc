// --------------------------------------------------------------------------
//
// Auto-Shotgun
//
// --------------------------------------------------------------------------

CLASS AutoshotgunDrumMag: Inventory { 
Default {
	
	inventory.maxamount 1;
}
}


CLASS PBAutoShotgunHasUnloaded: Inventory { 
Default {
	
	Inventory.maxamount 1;
}
}

CLASS PBAutoShotgunWasEmpty: Inventory { 
Default {
	
	Inventory.maxamount 1;
}
}


CLASS pb_AutoShotgun : weapon_slot_3_proto_class
{
protected bool drum_upgrade, empty_magazine;

Default {
	Weapon.SlotNumber 3;
	Weapon.slotpriority 0.2;
	Weapon.SelectionOrder 1300;

	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive1 5;
	Weapon.AmmoGive2 0;
	+FLOORCLIP;
	+DONTGIB;
	Scale 1.0;
	Weapon.AmmoType1 "pb_Shells";
	Weapon.AmmoType2 "AutoShotgunAmmo";
	Inventory.PickupMessage "$You've found the Auto Shotgun!(Slot 3)";
	Inventory.PickupSound "weapons/sgpump";

	Obituary "$OB_MPSHOTGUN";
	AttackSound "None";
	Tag "Autoshotgun";
	+WEAPON.NOALERT;
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
}
States
{
	Spawn:
		AUSC A -1;
	Stop;


	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 AA 1 A_Raise;
	Wait;

	Ready:
		TNT1 A 0
		{
			if(invoker.drum_upgrade == true)
			{
				invoker.set_weapon_state("drum_select");
				return;
			}
		}
		AUSS ABC 1;
		AUSS D 1 A_PlaySound("H4SGCOCK");
	default_ready:
		AUSG A 1 a_weaponready;
	loop;
	
	drum_select:
		TNT1 A 0 
		{
			if(invoker.empty_magazine)
			{
				invoker.set_weapon_state("drum_empty");
				return;
			}
		}
		A9SS ABCD 1;
		TNT1 A 0 A_PlaySound("H4SGCOCK");
	Drum_Ready:
		A9SG A 1 A_weaponready;
	loop;


	Fire:
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",1,1);
	Goto Reload;
		tnt1 a 0
		{
			if(invoker.drum_upgrade == true)
			{
				invoker.set_weapon_state("drum_fire");
				return;
			}
		}
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_PlaySound("Weapons/AutoShotgun", 1);
		TNT1 A 0;
		TNT1 A 0;//A_Recoil(1)
		TNT1 A 0 a_fireprojectile("YellowFlareSpawn",0,0,0,0);
		TNT1 AAAAA 0 a_fireprojectile("Tracer", Random(-5, 5), 0, -1, Random(-5, 5));
		AUSF A 1 BRIGHT A_FireBullets(frandom(5.84,6.45), frandom(5.2,6.75), 4, random(7,8), "ShotgunPuff");
		TNT1 A 0 A_FireBullets(frandom(5.85,6.65), frandom(5.32,6.75), 4, random(7,8), "MachineGunBulletPuff");
		AUSF B 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.935);
		TNT1 A 0 A_SetAngle(frandom(-0.65, 0.5) + Angle);
		TNT1 A 0 A_SetPitch(pitch - 0.45);
		TNT1 AAAAAAAA 0 BRIGHT a_fireprojectile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		TNT1 AA 0 a_fireprojectile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		TNT1 A 0 A_QuakeEx(4, 4, 4, 6, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",1);
		//TNT1 A 0 A_TakeInventory("DoubleASGAmmo", 1);//Removes 1 ammo from magazine
		AUSF C 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.955);
		TNT1 A 0 a_fireprojectile("ShotCaseSpawn",0,0,-4,-4);
		AUSF DE 1;
		TNT1 A 0 A_ZoomFactor(0.975);
		TNT1 A 0 A_ZoomFactor(0.985);
		AUSF F 1;//Offset(2,38) // Commented these out because the jerkiness actually
		TNT1 A 0 A_ZoomFactor(0.995);
		AUSG A 1;//Offset(1,36) // appears to be a little more realisitic in this
		TNT1 A 0 A_ZoomFactor(1.0);
		AUSG A 1;//Offset(0,34) // circumstance, but also for the state changes below.
		AUSG A 1 A_Refire;
	Goto default_Ready;
		
	Drum_Fire:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_PlaySound("Weapons/AutoShotgun", 1);
		TNT1 A 0 A_Recoil(1);
		TNT1 A 0 a_fireprojectile("YellowFlareSpawn",0,0,0,0);
		A9SF A 1 BRIGHT A_FireBullets(frandom(5.84,6.45), frandom(5.2,6.75), 4, random(7,8), "ShotgunPuff");
		TNT1 A 0 A_FireBullets(frandom(5.85,6.65), frandom(5.32,6.75), 4, random(7,8), "MachineGunBulletPuff");
		A9SF B 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.935);
		TNT1 A 0 A_SetAngle(frandom(-0.65, 0.5) + Angle);
		TNT1 A 0 A_SetPitch(pitch - 0.45);
		TNT1 AAAAAAAA 0 BRIGHT a_fireprojectile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		TNT1 AA 0 a_fireprojectile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		TNT1 A 0 A_QuakeEx(4, 4, 4, 6, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",1);
		//TNT1 A 0 A_TakeInventory("DoubleASGAmmo", 1);//Removes 1 ammo from magazine
		A9SF C 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.955);
		TNT1 A 0 a_fireprojectile("ShotCaseSpawn",0,0,-4,-4);
		A9SF DE 1;
		TNT1 A 0 A_ZoomFactor(0.975);
		TNT1 A 0 A_ZoomFactor(0.985);
		A9SF F 1;//Offset(3,40) // New frames added here to convey the appearance
		TNT1 A 0 A_ZoomFactor(0.995);
		A9SF G 1;//Offset(2,42) // of an actual cylindrical drum with spinning shells.
		TNT1 A 0 A_ZoomFactor(1.0);
		A9SF H 1;//Offset(1,40) // Offsets break this illusion by jerking the motion around.
		A9SG A 1 A_Refire;
	Goto Drum_Ready;
		

	AltFire:
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",2,1);
	Goto Reload;
		TNT1 A 0
		{
			if(invoker.drum_upgrade == true)
			{
				invoker.set_weapon_state("drum_alt_fire");
				return;
			}
		}
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_PlaySound("FLAKFIRE", 1);
		TNT1 A 0 A_Recoil(1);
		TNT1 A 0 a_fireprojectile("YellowFlareSpawn",0,0,0,0);
		AUSF A 1 BRIGHT;
		FLAK B 0 a_fireprojectile("Chunk1",0,1,15,-18);
		FLAK B 0 a_fireprojectile("Chunk2",0,1,18,13);
		FLAK B 0 a_fireprojectile("Chunk3",0,1,13,5);
		FLAK B 0 a_fireprojectile("Chunk3",0,1,0,-15);
		FLAK B 0 a_fireprojectile("Chunk4",0,1,0,-15);
		FLAK B 0 a_fireprojectile("Chunk2",0,1,-18,12);
		FLAK B 0 a_fireprojectile("Chunk1",0,0,-13,8);
		AUSF B 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.935);
		TNT1 A 0 A_SetAngle(frandom(-0.65, 0.5) + Angle);
		TNT1 A 0 A_SetPitch(pitch - 0.45);
		TNT1 AAAAAAAA 0 BRIGHT a_fireprojectile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		TNT1 AA 0 a_fireprojectile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		TNT1 A 0 A_QuakeEx(4, 4, 4, 6, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",2);
		//TNT1 A 0 A_TakeInventory("DoubleASGAmmo", 2);//Removes 1 ammo from magazine
		AUSF C 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.955);
		TNT1 A 0 a_fireprojectile("ShotCaseSpawn",0,0,-4,-4);
		AUSF DE 1;
		TNT1 A 0 A_ZoomFactor(0.975);
		AUSG A 1 Offset(5,36);// <-- New frames
		TNT1 A 0 A_ZoomFactor(0.985);
		AUSG A 1 Offset(3,40);//
		TNT1 A 0 A_ZoomFactor(0.995);
		AUSG A 1 Offset(2,42);//
		TNT1 A 0 A_ZoomFactor(1.0);
		AUSG A 1 Offset(1,40);//
		AUSR RST 1;
		AUSR U 1 A_PlaySound("H4SGCOCK", 2);
		AUSR VWXYXWV 1;
		AUSR V 1;//A_PlaySound("weapons/sgpump", 1)
		AUSR UTCBA 1;
		AUSG A 1 A_Refire;
		AUSG A 0;
	Goto default_Ready;
		
	Drum_Alt_Fire:
		TNT1 A 0 A_AlertMonsters;
		TNT1 A 0 A_PlaySound("FLAKFIRE", 1);
		TNT1 A 0;
		TNT1 A 0 A_Recoil(1);
		TNT1 A 0 a_fireprojectile("YellowFlareSpawn",0,0,0,0);
		A9SF A 1 BRIGHT;
		FLAK B 0 a_fireprojectile("Chunk1",0,1,15,-18);
		FLAK B 0 a_fireprojectile("Chunk2",0,1,18,13);
		FLAK B 0 a_fireprojectile("Chunk3",0,1,13,5);
		FLAK B 0 a_fireprojectile("Chunk3",0,1,0,-15);
		FLAK B 0 a_fireprojectile("Chunk4",0,1,0,-15);
		FLAK B 0 a_fireprojectile("Chunk2",0,1,-18,12);
		FLAK B 0 a_fireprojectile("Chunk1",0,0,-13,8);
		A9SF B 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.935);
		TNT1 A 0 A_SetAngle(frandom(-0.65, 0.5) + Angle);
		TNT1 A 0 A_SetPitch(pitch - 0.45);
		TNT1 AAAAAAAA 0 BRIGHT a_fireprojectile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		TNT1 AA 0 a_fireprojectile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		TNT1 A 0 A_QuakeEx(4, 4, 4, 6, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",2);
		//TNT1 A 0 A_TakeInventory("DoubleASGAmmo", 2);//Removes 1 ammo from magazine
		A9SF C 1 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.955);
		TNT1 A 0 a_fireprojectile("ShotCaseSpawn",0,0,-4,-4);
		A9SF DE 1;
		TNT1 A 0 A_ZoomFactor(0.975);
		A9SG A 1 Offset(5,36);// <-- New frames
		TNT1 A 0 A_ZoomFactor(0.985);
		A9SG A 1 Offset(3,40);//
		TNT1 A 0 A_ZoomFactor(0.995);
		A9SG A 1 Offset(2,42);//
		TNT1 A 0 A_ZoomFactor(1.0);
		A9SG A 1 Offset(1,40);//
		AUSR RST 1;
		AUSR U 1 A_PlaySound("H4SGCOCK", 2);
		AUSR VWXYXWV 1;
		AUSR V 1;//A_PlaySound("weapons/sgpump", 1)
		AUSR UTCBA 1 ;
		A9SG A 1 A_Refire;
	Goto Drum_Ready;


	Reload:
		TNT1 A 0
		{
			if(invoker.drum_upgrade == true)
			{
				invoker.set_weapon_state("drum_reload");
				return;
			}
		}
		TNT1 A 0 A_ZoomFactor(1.0);
		AUSG A 0 A_WeaponReady;
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo", 12, "default_ready");
		TNT1 A 0 A_JumpIfInventory("pb_Shells", 1, 1);
	Goto NoAmmo;
		AUSR A 1;
		AUSR BCDEFG 1 A_WeaponReady;
		TNT1 A 0 A_JumpIfInventory("pb_Shells", 1, 2);
	Goto default_ready;
		AUSR IJK 1;
		TNT1 A 0 A_PlaySound("insertshell");
		AUSR L 1 ;
		AUSR M 1;
		AUSR NOP 1;
		TNT1 A 0 {invoker.reload_weapon_magazine("pb_Shells", "AutoShotgunAmmo");}
		AUSR CBA 1 A_WeaponReady;
		AUSG A 1 A_WeaponReady;
	Goto default_Ready;

	DrumReload:
		A9SG A 1 A_WeaponReady;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",20,"ReadyToKillShit");
		TNT1 A 0 A_JumpIfInventory("pb_Shells",1,1);
	Goto Drum_Ready;
		TNT1 A 0 A_PlaySound("ASGOUT", 2);
		TNT1 A 0 a_fireprojectile("EmptyASGDrum",-5,0,8,-4);
		AUSR ABCDEFG 1;
		AUSR HHHHHHHH 1;
		TNT1 A 0 A_PlaySound("Ironsights", 3);
		A9SR HHIIJKLMNO 1;
		A9SR PPPQQ 1;
		TNT1 A 0 A_PlaySound("ASGIN", 4);
		A9SR Q 2;
		AUSR H 2 {invoker.reload_weapon_magazine("pb_Shells", "AutoShotgunAmmo");}
		AUSR CBA 1;
	Goto Drum_Ready;
		
		

	Pump2:
		AUSR QRST 1;
		AUSR U 1 A_PlaySound("H4SGCOCK", 1);
		AUSR VWXYXWV 1;
		AUSR V 1;//A_PlaySound("weapons/sgpump", 1)
		AUSR UTCBA 1 ;
	Goto default_Ready;
		TNT1 A 0;
	Goto Drum_ready;

























	Deselect:
		TNT1 A 0 
		{
			if(invoker.drum_upgrade)
			{
				invoker.set_weapon_state("drum_deselect");
				return;
			}
		}
		TNT1 A 0 A_ZoomFactor(1.0);
		AUSS DCBA 1;
		TNT1 AA 0 A_Lower;
	Wait;
	
	drum_deselect:
		TNT1 A 0 A_ZoomFactor(1.0);
		A9SS DCBA 1;
		TNT1 A 0 A_Lower;
	Wait;







		
		


		

		
	NoAmmo:
		TNT1 A 0 A_PlaySound("weapons/empty");
		TNT1 A 0 A_ZoomFactor(1.0);
		AUSG A 1 A_WeaponReady;
		Goto default_Ready;
		
		

		
		
		
	Unload:
		AUSG A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",1,3);
	Goto default_ready;
		TNT1 AAA 0;
		AUSR CDEFG 1;
	RemoveBullets:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",1,3);
		Goto FinishUnload;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",1);
		//TNT1 A 0 A_Takeinventory("DoubleASGAmmo", 1);
		TNT1 A 0 A_Giveinventory("pb_Shells",1);
		
		//AUSR QRST 1 A_JumpIfInventory("Kicking", 1, "DoKick")
		AUSR U 1 A_PlaySound("H4SGCOCK", 1);
		AUSR VWXYXWV 1;
		AUSR V 1;
		AUSR U 1;
		
		Goto RemoveBullets;
	FInishUnload:
		AUSR CBA 1;//A_JumpIfInventory("Kicking", 1, "DoKick")
		AUSG A 1;
	Goto default_ready;
		
		
		
		
	DrumUnload:
		A9SG A 1;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",1,3);
	Goto default_ready;
		TNT1 AAA 0;
		TNT1 A 0 A_PlaySound("Ironsights", 3);
		AUSR ABCDEF 1;
		TNT1 A 0 A_PlaySound("ASGOUT", 2);
		A9SR RQPONMLKJIH 1;
		TNT1 A 0 A_PlaySound("Ironsights", 1);
		AUSR FEDCBA 1;
	DrumRemoveBullets:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("AutoShotgunAmmo",1,3);
		Goto FinishDrumUnload;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("AutoShotgunAmmo",1);
		//TNT1 A 0 A_Takeinventory("DoubleASGAmmo", 1);
		TNT1 A 0 A_Giveinventory("pb_Shells",1);
		Goto DrumRemoveBullets;
	FinishDrumUnload:
		TNT1 AAAA 0;
	Goto default_ready;
		
		
	FlashKicking:
		AUSK A 1;
		AUSK B 1;
		AUSK C 1;
		AUSK D 3;
		AUSK E 3;
		AUSK D 3;
		AUSK C 1;
		AUSK B 1;
		AUSK A 1;
		//TNT1 A 0 A_JumpIfInventory("AutoshotgunDrumMag", 1, 5);
		AUSG AAA 1;
	Stop;
		TNT1 AAAA 0;
		A9SG AAA 1;
		Stop;
		
	FlashAirKicking:
		AUSK A 1;
		AUSK B 1;
		AUSK C 1;
		AUSK D 3;
		AUSK E 3;
		AUSK D 3;
		AUSK C 1;
		AUSK B 1;
		AUSK A 1;
		//TNT1 A 0 A_JumpIfInventory("AutoshotgunDrumMag", 1, 6);
		AUSG AAAA 1;
		Stop;
		TNT1 AAAA 0;
		A9SG AAA 1;
		Stop;
		
	FlashSlideKicking:
		AUSK AA 2;
		AUSK BBBCCCDDEEE 2 ;
		Stop;
		
	FlashSlideKickingStop:
		//TNT1 A 0
		AUSK EDCBA 1;
		//TNT1 A 0 A_JumpIfInventory("AutoshotgunDrumMag", 1, 3);
		AUSG A 1;
		Stop;
		TNT1 AAA 0;
		A9SG A 1;
		Stop;
		
	FlashPunching:
		AUSK A 1;
		AUSK B 1;
		AUSK C 1;
		AUSK D 3;
		AUSK E 3;
		AUSK D 3;
		AUSK C 1;
		AUSK B 1;
		AUSK A 1;
		//TNT1 A 0 A_JumpIfInventory("AutoshotgunDrumMag", 1, 5);
		AUSG AAA 1;
		Stop;
		TNT1 AAAA 0;
		A9SG AAA 1;
		Stop;
}
}

CLASS AutoShotgunAmmo : Ammo { 
Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 12;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 12;
	Inventory.Icon "AUSCA0";
}
}


CLASS Chunk1 : ACTOR { 
Default {
	
	Radius 3;
	Height 4;
	Speed 35;
	Damage 8;
	Mass 200;
	Scale 0.2;
	Damagetype "Cutless";
	+MISSILE;
	+DOOMBOUNCE;
	+BLOODSPLATTER;
	BounceFactor 0.65;
	SeeSound "weapon/smcasebounce";
}
States
{
	Spawn:
		FLAS A 1 Bright a_spawnprojectile("YellowFlareSpawn", 0, 0, 0, 0);
		loop;
	Death:
		EXPL AAA 0 a_spawnprojectile("ExplosionSmoke", 4, 0, random(0, 360), 2, random(0, 360));
		Stop;
}
}

CLASS Chunk2 : Chunk1 { 
Default {
	
	Damagetype "Saw";
}
States
{
	Spawn:
		FLAS B 1 Bright a_spawnprojectile("YellowFlareSpawn", 0, 0, 0, 0);
		loop;
}
}

CLASS Chunk3 : Chunk1 { 
Default {
	
	Damagetype "Blast";
}
States
{
	Spawn:
		FLAS C 1 Bright a_spawnprojectile("YellowFlareSpawn", 0, 0, 0, 0);
		loop;
}
}

CLASS Chunk4 : Chunk1 { 
Default {
	
	Damagetype "Shotgun";
}
States
{
	Spawn:
		FLAS D 1 Bright a_spawnprojectile("YellowFlareSpawn", 0, 0, 0, 0);
		loop;
}
}


// Handgun \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
// Sprites by Eriance, JoeyTD, and 3DRealms, Edited by Sergeant_Mark_IV
// Scripts By PA1NKI113R (:

CLASS PB_PistolFireAnimation1: Inventory { 
	Default {
		
		Inventory.maxamount 1;
	}
}

CLASS PB_PrimaryPistolChamberEmpty: Inventory { 
	Default {
		
		Inventory.maxamount 1;
	}
}

CLASS PB_SecondaryPistolChamberEmpty: Inventory { 
	Default {
		
		Inventory.maxamount 1;
	}
}

CLASS Handgun: PB_DualWeapon { 
	Default {
		
		Weapon.BobRangeX 0.3;
		Weapon.BobRangeY 0.5;
		Weapon.BobStyle InverseSmooth;
		Weapon.BobSpeed 2.4;
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive1 0;
		Weapon.AmmoUse2 0;
		Weapon.AmmoGive2 0;
		Weapon.AmmoType1 "low_caliber_bullets";
		Weapon.AmmoType2 "SecondaryPistolAmmo";
		Obituary "%o was drilled by %k's Double .45 Pistols.";
		+FLOORCLIP;
		+DONTGIB;
		Tag "Dual .45 Pistols";
		AttackSound "None";
		Inventory.Pickupmessage "";
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOAUTOFIRE;
		Scale 0.6;
		+WEAPON.NO_AUTO_SWITCH;
		Weapon.SlotPriority 1;
		+WEAPON.NOALERT;
		+POWERED_UP;
		Weapon.SisterWeapon BDPistol;
		
	}
	States
	{
		
		Spawn:
			TNT1 A 100;
			Loop;
			
		SelectAnimation2:
			TNT1 A 0 A_PlaySound("weapons/pistolup", 0);
			D2GS ABCDE 1;
			TNT1 A 0 A_PlaySound("weapons/pistolup", 0);
			Goto ReadyToFire;
		Ready:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"ReadySilencer");
			TNT1 A 0 A_JumpIfInventory("DualWieldingPistols", 1, "SelectAnimation2");
			TNT1 A 0 A_Giveinventory("DualWieldingPistols",1);
			D2GS FH 1 A_SetRoll(roll+.5);
			D2GS IJ 1 A_SetRoll(roll-.5);
		Ready3:
		ReadyToFire:
			D2GG A 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD);
			Loop;
			
		ReadySilencer:
			D2GT ABCDE 1;
		ReadyToFireSilencer:
			D2GT E 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD,PBWEAP_ISPISTOLSILENCERSTATE);
			Loop;
			
		NoDualWield:
		WeaponSpecial:
			TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1);
			TNT1 A 0 A_TakeInventory("DualWieldingPistols",1);
			TNT1 A 0 A_TakeInventory("SwitchingToDualWieldPistols",1);
			TNT1 A 0 A_Giveinventory("SwitchingFromDualWieldPistols",1);
			TNT1 A 0 A_SelectWeapon("BDPistol");
			Goto Select;
			
		Deselect:
			TNT1 A 0 A_Takeinventory("Unloading",1);
			TNT1 A 0 A_PlaySound("IronSights", 0);
			TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy");
			TNT1 A 0 A_JumpIfInventory("SwitchingFromDualWieldPistols", 1, 5);
			D2GS DCBA 1;
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower();
			Wait;
			
		Select:
			TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise();
			TNT1 AAAAAAAA 1 A_Raise();
			Wait;
			
		AltFire: // Attach Silencer
			TNT1 A 0 A_WeaponOffset(0,32);
			TNT1 A 0 A_Giveinventory("PB_LockScreenTilt",1);
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"DetachSilencer");
			TNT1 A 0 A_GiveInventory ("SilencerEquipped",1);
			D6GC ABCDEFFFG 1 A_SetRoll(roll-.2);
			TNT1 A 0 A_PlaySound("weapons/pistolsuppressor_on", 0);
			D5GA HIJKLMNNN 1 A_SetRoll(roll+.2);
			D5GA OPOPOQRRRSS 1;
			TNT1 A 0 A_PlaySound("weapons/pistolup", 0);
			D6GC HIJKLMN 1;
			TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1);
			TNT1 A 0 A_Print("Silencer Attached");
			Goto ReadyToFireSilencer;
			
		DetachSilencer:
			TNT1 A 0 A_TakeInventory ("SilencerEquipped",1);
			D6GD ABCDEFGHIIJJ 1 A_SetRoll(roll-.2);
			TNT1 A 0 A_PlaySound("weapons/pistolsuppressor_off", 0);
			D5GF KKLLMMNOPQRS 1 A_SetRoll(roll+.2);
			D5GF T 1;
			D5GF UU 1;
			TNT1 A 0 A_PlaySound("weapons/pistolup", 0);
			D6GD JKLMNO 1;
			TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1);
			TNT1 A 0 A_Print("Silencer Detached");
			Goto ReadyToFire;
			
		Fire: 
			// Check for silencer
			TNT1 A 0 A_WeaponOffset(0,32);
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"FireSilencer");
			// Check for no ammo
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 1);
			Goto Reload;
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 4);
			D2GS EEE 1();// Adding in a pause so that single-gun firing while DW is slower
			Goto FireLeft;
			TNT1 A 0 A_JumpIfInventory("PB_PistolFireAnimation1", 1, "FireLeft")();
			D2RF A 1 BRIGHT {
				A_FireBullets (0.1, 0.1, -1, 12, "HitPuff", FBF_NORANDOM,8192,"Tracer", -1,4);();
				A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);();
				A_FireCustomMissile("MP40CaseSpawn",0,0,6,4);
				A_PlaySound("weapons/pistol", "Weapon");
				A_ZoomFactor(0.985);
				A_Takeinventory("PrimaryPistolAmmo",1);
				A_GiveInventory("PB_PistolFireAnimation1",1);//Toggle gun animation from one pistol to the other.
				A_AlertMonsters;
				if (CountInv("PowerStrength") >= 1 ) {
					A_SetPitch(pitch-0.46);
					A_SetAngle(angle-0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle-0.8);
			}
		}
		D2RF B 1 BRIGHT {
			A_ZoomFactor(1.0);
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.46);
				A_SetAngle(angle-0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle-0.8);
			}
		}
		D2RF CDE 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD);
		TNT1 A 0 A_Refire;
		Goto ReadyToFire;
		
		
		FireLeft:
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo",1 , 1);
			Goto Reload;
			// Swap to firing Right pistol if Left is out of ammo.
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 5);
			TNT1 A 0 A_TakeInventory("PB_PistolFireAnimation1");
			D2GS EEE 1();// Adding in a pause so that single-gun firing while DW is slower
			Goto Fire;
			D2LF A 1 BRIGHT{
				A_FireBullets (0.1, 0.1, -1, 12, "HitPuff", FBF_NORANDOM,8192,"Tracer", -1,-4);();
				A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);();
				A_FireCustomMissile("MP40CaseSpawn",0,0,-6,4);
				A_PlaySound("weapons/pistol", "Weapon");
				A_TakeInventory("PB_PistolFireAnimation1");
				A_Takeinventory("SecondaryPistolAmmo",1);
				A_AlertMonsters;
				A_ZoomFactor(0.985);
				if (CountInv("PowerStrength") >= 1 ) {
					A_SetPitch(pitch-0.46);
					A_SetAngle(angle+0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle+0.8);
			}
		}
		D2LF B 1 BRIGHT {
			A_ZoomFactor(1.0);
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.46);
				A_SetAngle(angle+0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle+0.8);
			}
		}
		D2LF CDE 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD);//(WRF_NOSECONDARY)
		TNT1 A 0 A_Refire;//("HoldingFireLeft")
		Goto ReadyToFire;
		
		
		// Firing Silencer States
		
		FireSilencer: // Fires right gun at game start
			TNT1 A 0 A_WeaponOffset(0,32);
			// Check for no ammo
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 1);
			Goto ReloadSilencer;
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 1);
			Goto FireLeftSilencer;
			TNT1 A 0 A_JumpIfInventory("PB_PistolFireAnimation1", 1, "FireLeftSilencer")();
			D2RF F 1 BRIGHT {
				A_FireBullets (0.1, 0.1, -1, 10, "HitPuff", FBF_NORANDOM,8192,"Tracer", -1,4);();
				A_Takeinventory("PrimaryPistolAmmo",1);
				A_ZoomFactor(0.985);
				A_GiveInventory("PB_PistolFireAnimation1");
				A_PlaySound("weapons/suppressedpistol", "Weapon");
				A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);();
				A_FireCustomMissile("MP40CaseSpawn",0,0,6,4);
				if (CountInv("PowerStrength") >= 1 ) {
					A_SetPitch(pitch-0.46);
					A_SetAngle(angle-0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle-0.8);
			}
		}
		D2RF G 1 BRIGHT {
			A_ZoomFactor(1.0);
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.46);
				A_SetAngle(angle-0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle-0.8);
			}
		}
		D2RF HIJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD,PBWEAP_ISPISTOLSILENCERSTATE);
		TNT1 A 0 A_Refire;
		Goto ReadyToFireSilencer;
		
		FireLeftSilencer:
			// Check for no ammo
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo",1 , 1);
			Goto ReloadSilencer;
			
			// Swap to firing Right pistol if Left is out of ammo.
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_TakeInventory("PB_PistolFireAnimation1");
			Goto FireSilencer;
			D2LF F 1 BRIGHT {
				A_ZoomFactor(0.985);
				A_PlaySound("weapons/suppressedpistol", "Weapon");
				A_FireBullets (0.1, 0.1, -1, 10, "HitPuff", FBF_NORANDOM,8192,"Tracer", -1,4);();
				A_TakeInventory("PB_PistolFireAnimation1");
				A_Takeinventory("SecondaryPistolAmmo",1);
				A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);();
				A_FireCustomMissile("MP40CaseSpawn",0,0,-6,4);
				if (CountInv("PowerStrength") >= 1 ) {
					A_SetPitch(pitch-0.46);
					A_SetAngle(angle+0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle+0.8);
			}
		}
		D2LF G 1 BRIGHT {
			A_ZoomFactor(1.0);
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.46);
				A_SetAngle(angle+0.4);
			}
			else {
				A_SetPitch(pitch-0.92);
				A_SetAngle(angle+0.8);
			}
		}
		D2LF HIJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD,PBWEAP_ISPISTOLSILENCERSTATE);//(WRF_NOSECONDARY)
		TNT1 A 0 A_Refire;
		Goto ReadyToFireSilencer;
		
		NoAmmo:
		DryFire:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"NoAmmoSilencer")();
			D2GG A 1 A_PlaySound("weapons/empty", 1);
			Goto ReadyToFire;
			
		NoAmmoSilencer:
			D2GT E 1 A_PlaySound("weapons/empty", 1);
			Goto ReadyToFireSilencer;
			
			// Reloading States
			
		WrapUpReload:
			TNT1 A 0 A_Takeinventory("PB_LockScreenTilt",1);
			
			// Remove a 16th bullet if the primary pistol chamber was empty.
			TNT1 A 0 A_JumpIf(CountInv("PB_PrimaryPistolChamberEmpty") == 0, 5);
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 16, 4);
			TNT1 A 0 A_TakeInventory("PB_PrimaryPistolChamberEmpty", 1);
			TNT1 A 0 A_TakeInventory("PrimaryPistolAmmo", 1);
			TNT1 A 0 A_GiveInventory("low_caliber_bullets", 1);
			
			// Remove a 16th bullet if the secondary pistol chamber was empty.
			TNT1 A 0 A_JumpIf(CountInv("PB_SecondaryPistolChamberEmpty") == 0, 5);
			TNT1 A 0 A_JumpIf(CountInv("SecondaryPistolAmmo") < 16, 4);
			TNT1 A 0 A_TakeInventory("PB_SecondaryPistolChamberEmpty", 1);
			TNT1 A 0 A_TakeInventory("SecondaryPistolAmmo", 1);
			TNT1 A 0 A_GiveInventory("low_caliber_bullets", 1);
			
			TNT1 A 0;
			
			Goto ReadyToFire;
			
		Reload:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"ReloadSilencer");
			D2GG A 1 A_WeaponReady();
			
			// Check for no reserve ammo, and bail if it happens
			TNT1 A 0 A_JumpIfInventory("low_caliber_bullets",1,1);
			Goto NoAmmo;
			
			// Check to see if the guns are already full
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 16, 2);
			TNT1 A 0 A_JumpIf(CountInv("SecondaryPistolAmmo") < 16, 1);
			Goto ReadyToFire;
			
			// Figure out which chambers are empty.
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 2);
			TNT1 A 0 A_GiveInventory("PB_PrimaryPistolChamberEmpty", 1);
			
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_GiveInventory("PB_SecondaryPistolChamberEmpty", 1);
			
			// Animate clips dropping.
			TNT1 A 0 A_PlaySound("PSRLOUT");
			TNT1 A 0 A_Giveinventory("PB_LockScreenTilt",1);
			D6GA ABCDEFGHI 1();
			
			// Display the tops of the falling mags in one frame.
			// Skip the 'both empty' frame; checks for 2 bullets. If there's just 1,
			//    it would be in the chamber and the mag would be empty.
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") > 1 || CountInv("SecondaryPistolAmmo") > 1, 2);
			D6GA J 1;
			// Skip the 'right only empty' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") > 1 || CountInv("SecondaryPistolAmmo") < 2, 2);
			D6GB X 1;
			// Skip the 'left only empty' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 2 || CountInv("SecondaryPistolAmmo") > 1, 2);
			D6GB Y 1;
			// Skip the 'both full' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 2 || CountInv("SecondaryPistolAmmo") < 2, 2);
			D6GB Z 1;
			D6GA K 1 {
				A_FireCustomMissile("EmptyClipMP40",5,0,6,-20);
				A_FireCustomMissile("EmptyClipMP40",-5,0,-6,-20);
		}
		D6GA LMNOPQRS 1 A_SetRoll(roll+.5);
		TNT1 A 0 A_PlaySound("PSRLIN", 0);
		D6GA STTSSU 1 A_SetRoll(roll-.5);
		TNT1 A 0 A_PlaySound("PSRLFIN", 0);
		D6GA VV 1 A_SetRoll(roll-.5);
		D6GA WXYZ 1;
		D6GB ABCDEFGH 1 A_SetRoll(roll+.5);
		TNT1 A 0 A_PlaySound("PSRLIN", 0);
		D6GB IIJJIIKL 1 A_SetRoll(roll-.5);
		TNT1 A 0 A_PlaySound("PSRLFIN", 0);
		D6GB LLMNOPQRSTUVW 1;
		TNT1 A 0 A_Takeinventory("PBPistolHasUnloaded", 1);
		InsertBullets:
			// Quit reloading if we're out of ammo
			TNT1 A 0 A_JumpIfInventory("low_caliber_bullets", 1, 1);
			Goto WrapUpReload;
			// Put a bullet in the Primary gun if it's not full.
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") == 16, 3);
			TNT1 A 0 A_Giveinventory("PrimaryPistolAmmo", 1);
			TNT1 A 0 A_Takeinventory("low_caliber_bullets", 1);
			// Quit reloading if we're out of ammo
			TNT1 A 0 A_JumpIfInventory("low_caliber_bullets", 1, 1);
			Goto WrapUpReload;
			
			// Put a bullet in the Secondary gun if it's not full.
			TNT1 A 0 A_JumpIf(CountInv("SecondaryPistolAmmo") == 16, 3);
			TNT1 A 0 A_Giveinventory("SecondaryPistolAmmo", 1);
			TNT1 A 0 A_Takeinventory("low_caliber_bullets", 1);
			
			// See if both guns are now full and finish.
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") == 16 & CountInv("SecondaryPistolAmmo") == 16, 1);
			//TNT1 A 0 A_JumpIf(CountInv("SecondaryPistolAmmo") < 16, 1)
			Goto InsertBullets;
			
			// Keep adding more bullets!
			TNT1 A 0;
			Goto WrapUpReload;
			
		ReloadSilencer:
			D2GT E 1 A_WeaponReady();
			
			// Check for no reserve ammo, and bail if it happens
			TNT1 A 0 A_JumpIfInventory("low_caliber_bullets",1,1);
			Goto NoAmmo;
			
			// Check to see if the guns are already full
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 16, 2);
			TNT1 A 0 A_JumpIf(CountInv("SecondaryPistolAmmo") < 16, 1);
			Goto ReadyToFire;
			
			// Figure out which chambers are empty.
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo", 1, 2);
			TNT1 A 0 A_GiveInventory("PB_PrimaryPistolChamberEmpty", 1);
			
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo", 1, 2);
			TNT1 A 0 A_GiveInventory("PB_SecondaryPistolChamberEmpty", 1);
			
			// Animate Clips Dropping
			TNT1 A 0 A_PlaySound("PSRLOUT");
			TNT1 A 0 A_Giveinventory("PB_LockScreenTilt",1);
			D6GE ABCDEFGHI 1;
			
			// Display the tops of the falling mags in one frame.
			// Skip the 'both empty' frame; checks for 2 bullets. If there's just 1,
			//    it would be in the chamber and the mag would be empty.
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") > 1 || CountInv("SecondaryPistolAmmo") > 1, 2);
			D6GF J 1;
			
			// Skip the 'right only empty' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") > 1 || CountInv("SecondaryPistolAmmo") < 2, 2);
			D6GF X 1;
			
			// Skip the 'left only empty' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 2 || CountInv("SecondaryPistolAmmo") > 1, 2);
			D6GF Y 1;
			
			// Skip the 'both full' frame
			TNT1 A 0 A_JumpIf(CountInv("PrimaryPistolAmmo") < 2 || CountInv("SecondaryPistolAmmo") < 2, 2);
			D6GF Z 1;
			
			D6GE K 1;
			TNT1 A 0 A_FireCustomMissile("EmptyClipMP40",5,0,6,-20);
			TNT1 A 0 A_FireCustomMissile("EmptyClipMP40",-5,0,-6,-20);
			TNT1 A 0();//A_PlaySound("IronSights")
			D6GE LMNOPQR 1 A_SetRoll(roll-.5);
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("PSRLIN", 2);
			D6GE SSTTSSU 1 A_SetRoll(roll+.5);
			TNT1 A 0 A_PlaySound("PSRLFIN", 3);
			D6GE VVWXYZ 1;
			D6GF ABCDEFGH 1 A_SetRoll(roll+.5);
			TNT1 A 0 A_PlaySound("PSRLIN", 2);
			D6GF IIJJIIKL 1 A_SetRoll(roll-.5);
			TNT1 A 0 A_PlaySound("PSRLFIN", 3);
			D6GF LMNOPQRSTUVW 1;
			TNT1 A 0 A_Takeinventory("PBPistolHasUnloaded",1);
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo",1,"InsertBulletsNoRechamberSilencer");
			Goto InsertBullets;
			
			// Unloading States
			
		Unload:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"UnloadSilencer");
			D2GS E 1 A_WeaponReady();
			TNT1 A 0 A_Takeinventory("Unloading",1);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo",1,1);
			Goto NoAmmo;
			TNT1 A 0;
			
			D6GA BCDE 1;
			TNT1 A 0 A_PlaySound("PSRLFIN", 3);
			D6GA FGHIJ 1;
			TNT1 A 0 A_PlaySound("PSRLIN", 2);
			D6GA BA 1;
			D2GS EDCBA 1;
			TNT1 A 5;
			
			TNT1 A 0 A_Giveinventory("PBPistolHasUnloaded",1);
			Goto RemoveBullets;
			
		UnloadSilencer:
			D2GT E 1 A_WeaponReady();
			TNT1 A 0 A_Takeinventory("Unloading",1);
			TNT1 A 0 A_Takeinventory("ADSmode",1);
			TNT1 A 0 A_JumpIfInventory("PrimaryPistolAmmo",1,1);
			Goto NoAmmoSilencer;
			TNT1 A 0;
			TNT1 A 0 A_Takeinventory("Zoomed",1);
			TNT1 A 0 A_ZoomFactor(1.0);
			TNT1 A 0 A_GiveInventory("Pumping", 1);
			TNT1 A 0 A_Takeinventory("Reloading",1);
			
			D6GE BCDE 1;
			TNT1 A 0 A_PlaySound("PSRLFIN", 3);
			D6GE FGHIJ 1;
			TNT1 A 0 A_PlaySound("PSRLIN", 2);
			D6GE BA 1;
			D2GT EDCBA 1;
			TNT1 A 5;
			TNT1 A 0 A_Giveinventory("PBPistolHasUnloaded",1);
			Goto RemoveBullets;
			
		RemoveBullets:
			TNT1 A 0 A_JumpIfInventory("SecondaryPistolAmmo",1,2);
			TNT1 A 0 A_Takeinventory("Reloading",1);
			Goto Ready;
			TNT1 A 0;
			TNT1 A 0 A_Takeinventory("PrimaryPistolAmmo",1);
			TNT1 A 0 A_Takeinventory("SecondaryPistolAmmo",1);
			TNT1 A 0 A_Giveinventory("low_caliber_bullets",1);
			Goto RemoveBullets;
			
			// Flash States
			
		FlashKicking:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"FlashKickingSilencer");
			D6GG ABCDEFGHIJKLMN 1;
			D2GS EE 1();// Pause
			Stop;
			
		FlashKickingSilencer:
			D6GH ABCDEFGHIJKLMN 1;
			D2GT EE 1();// Pause
			Stop;
			
		FlashAirKicking:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"FlashAirKickingSilencer");
			D6GG ABCDEFGHIJKLMN 1;
			D2GS EEEE 1();// Pause
			Stop;
			
		FlashAirKickingSilencer:
			D6GH ABCDEFGHIJKLMN 1;
			D2GT EEEE 1();// Pause
			Stop;
			
		FlashSlideKicking:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"FlashSlideKickingSilencer");
			D6GI ABCDEFGHIJKLMNOPQRSTUV 1;
			Stop;
			
		FlashSlideKickingSilencer:
			D6GJ ABCDEFGHIJKLMNOPQRSTUV 1;
			Stop;
			
		FlashSlideKickingStop:
			TNT1 A 0 A_JumpIfInventory("SilencerEquipped",1,"FlashSlideKickingStopSilencer");
			D6GI WXYZ 1;
			D2GS EE 1();// Pause
			Stop;
			
		FlashSlideKickingStopSilencer:
			D6GJ WXYZ 1;
			D2GT EE 1();// Pause
			Stop;
	}
}

CLASS SecondaryPistolAmmo : Ammo { // Is the left pistol
	Default {
		
		Inventory.Amount 0;
		Inventory.MaxAmount 16;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 16;
		Inventory.Icon SMGPA0;
		Inventory.Icon "DEGTA0";
	}
}


CLASS RightPistolAmmo : Ammo { //Your weapon's magazine ammo.
	Default {
		
		Inventory.Amount 0;
		Inventory.MaxAmount 16;//Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 16;
		Inventory.Icon "DEGTA0";
	}
}

CLASS zscript_Axe : weapon_slot_1_proto_class
{ 
Default
{
	Obituary "%o was choped down by %k's axe.";
	AttackSound "";
	Inventory.PickupSound "KNIFUP";
	Inventory.Pickupmessage "You got the Axe!";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
	+FORCEXYBILLBOARD;
	+WEAPON.NOALERT;
	+WEAPON.AXEBLOOD;

	Weapon.SlotNumber 1;
	Weapon.SelectionOrder 3;
	Weapon.slotpriority 0.1;
	damagetype "Saw";

	Scale 0.9;
}

States
{
	Spawn:
		AXE0 A -1;
	Stop;

	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 A 1 A_Raise(80);
	wait;

	Ready:
		TNT1 A 0 A_PlaySound("KNIFUP");
		AXES ABCD 1;
	ready_loop:
		AXEG A 1 A_WeaponReady();
	Loop;

	Fire:
		AXEG ABCDE 1;
	Hold:
		AXEG E 1;
		TNT1 A 0 A_Refire;
		AXEG D 1 A_PlaySound("AXSWING");
		AXEF ABC 1;
		TNT1 A 0
		{	//remove saw attack because of lack of attack randomizations
			//A_Saw("", "", 3, "AxePuffs", 0, 120, 0,16);

			FLineTraceData axe_swing;
			LineTrace(self.player.mo.angle + frandom(-0.5, 0.5), 80, self.player.mo.pitch,
			offsetz: self.player.viewz - self.player.mo.Pos.Z, data: axe_swing);
			
			if(axe_swing.hittype == TRACE_HitNone){return;}

			if(axe_swing.hitactor != null)
			{
				int dam = random(55, 90) *(1 +(2 * countinv("PowerStrength") ) );
				axe_swing.hitactor.damagemobj(self, self, dam, 'saw', 0, 0);
				self.player.mo.A_Quake(2, 6, 0, 30, "");//insert here "axe hit monster" sound
				return;
			}
			
			if(axe_swing.hittype == TRACE_HitFloor || axe_swing.hittype == TRACE_HitCeiling
			|| axe_swing.hittype == TRACE_HitWall)
			{
				spawn("Axe_Attack", pos:axe_swing.HitLocation);
			}
		}
	EndSwing:
		AXEF DE 1 A_SetPitch(pitch+2);
		TNT1 AA 1 A_SetPitch(pitch+2);
		TNT1 A 2;
		TNT1 AAAA 1 A_SetPitch(pitch-2);
		TNT1 A 1;
		AXES A 1;
		AXES BCD 1 A_WeaponReady(WRF_NOBOB);
	Goto Ready_loop;

	Altfire:
		AXEG ABCDE 1;
	AltHold:
		AXEG E 1;
		TNT1 A 0 A_Refire;
		AXEF A 1 A_PlaySound("AXSWING", 1);
		AXEF B 1 A_PlaySound("weapons/gswing", 3);
		AXEF CD 1;
		TNT1 A 0 a_fireprojectile("Thrown_Axe", 0, 0, 0, 0);
		THRF EF 1;
		//TNT1 A 10 A_SelectWeapon("RIP_AND_TEAR");
		//tnt1 a 0 a_takeinventory("zscript_Axe");
		TNT1 A 10;
	Goto Ready_loop;
		











	RedBloodReady:
	RedBloodReady3:
		AXRG A 1 A_WeaponReady;
	Loop;
		
	RedBloodFire:
		AXRG ABCDE 1;
	Hold.RedBlood:
		AXRG E 1;
		TNT1 A 0 A_Refire;
		AXRG D 1 A_PlaySound("AXSWING");
		AXRF ABC 1;
		TNT1 A 0 A_PlaySound("weapons/gswing", 1);
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "RedBloodStrongAttack");
		TNT1 A 0 A_Saw("", "", 3, "AxePuffs", 0, 120, 0,16);
		TNT1 A 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
	RedBloodEndSwing:
		AXRF DE 1 A_SetPitch(pitch+2);
		TNT1 AA 1 A_SetPitch(pitch+2);
		TNT1 A 2;
		TNT1 AAAA 1 A_SetPitch(pitch-2);
		TNT1 A 1;
		AXRS A 1;
		AXRS BCD 1 A_WeaponReady(WRF_NOBOB);
	//	TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1,"BlueBloodReady");
	///	TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1,"GreenBloodReady");
	Goto RedBloodReady;
		
	RedBloodStrongAttack:
		TNT1 A 0;
		TNT1 A 0 A_Saw("", "", 10, "AxePuffs", 0, 120, 0,16);
		TNT1 AA 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
	Goto RedBloodEndSwing;
		
	RedBloodAltFire:
		AXRG ABCDE 1;
	AltHold.RedBlood:
		AXRG E 1;
		TNT1 A 0 A_Refire;
		AXRF A 1 A_PlaySound("AXSWING", 1);
		AXRF B 1 A_PlaySound("weapons/gswing", 3);
		AXRF CD 1;
		TNT1 A 0 a_fireprojectile("Thrown_Axe_Red", 0, 0, 0, 0);
		THRF EF 1;
		//TNT1 A 10 A_SelectWeapon("RIP_AND_TEAR");
		//TNT1 A 0 A_TakeInventory("zscript_Axe");
		TNT1 A 10;
	Goto Ready;
		
	BlueBloodAltFire:
		AXBG ABCDE 1;
	AltHold.BlueBlood:
		AXBG E 1;
		TNT1 A 0 A_Refire;
		AXBF A 1 A_PlaySound("AXSWING", 1);
		AXBF B 1 A_PlaySound("weapons/gswing", 3);
		AXBF CD 1;
		TNT1 A 0 a_fireprojectile("Thrown_Axe_Blue", 0, 0, 0, 0);
		THRF EF 1;
		//TNT1 A 10 A_SelectWeapon("RIP_AND_TEAR");
		//TNT1 A 0 A_TakeInventory("zscript_Axe");
		TNT1 A 10;
	Goto Ready;
		
	GreenBloodAltFire:
		AXGG ABCDE 1;
	AltHold.GreenBlood:
		AXGG E 1;
		TNT1 A 0 A_Refire;
		AXGF A 1 A_PlaySound("AXSWING", 1);
		AXGF B 1 A_PlaySound("weapons/gswing", 3);
		AXGF CD 1;
		TNT1 A 0 a_fireprojectile("Thrown_Axe_Green", 0, 0, 0, 0);
		THRF EF 1;
		//TNT1 A 10 A_SelectWeapon("RIP_AND_TEAR");
		//TNT1 A 0 A_TakeInventory("zscript_Axe");
		TNT1 A 10;
	Goto Ready;
		
	BlueBloodReady:
	BlueBloodReady3:
		TNT1 A 0;//A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial") 
		AXBG A 1 A_WeaponReady;
	Loop;
		
	BlueBloodFire:
		AXBG ABCDE 1;
	Hold.BlueBlood:
		AXBG E 1;
		TNT1 A 0 A_Refire;
		AXBG D 1 A_PlaySound("AXSWING");
		AXBF ABC 1;
		TNT1 A 0 A_PlaySound("weapons/gswing", 1);
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "BlueBloodStrongAttack");
		TNT1 A 0 A_Saw("", "", 3, "AxePuffs", 0, 120, 0,16);
		TNT1 A 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
		
	BlueBloodEndSwing:
		AXBF DE 1 A_SetPitch(pitch+2);
		TNT1 AA 1 A_SetPitch(pitch+2);
		TNT1 A 2;
		TNT1 AAAA 1 A_SetPitch(pitch-2);
		TNT1 A 1;
		AXBS A 1;
		AXBS BCD 1 A_WeaponReady(WRF_NOBOB);
		Goto BlueBloodReady;
		
	BlueBloodStrongAttack:
		TNT1 A 0;
		TNT1 A 0 A_Saw("", "", 10, "AxePuffs", 0, 120, 0,16);
		TNT1 AA 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
		Goto BlueBloodEndSwing;
		
	GreenBloodReady:
	GreenBloodReady3:
		AXGG A 1 A_WeaponReady;
	Loop;
		
	GreenBloodFire:
		AXGG ABCDE 1;
	Hold.GreenBlood:
		AXGG E 1;
		TNT1 A 0 A_Refire;
		AXGG D 1 A_PlaySound("AXSWING");
		AXGF ABC 1;
		TNT1 A 0 A_PlaySound("weapons/gswing", 1);
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, "GreenBloodStrongAttack");
		TNT1 A 0 A_Saw("", "", 3, "AxePuffs", 0, 120, 0,16);
		TNT1 A 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
		
	GreenBloodEndSwing:
		AXGF DE 1 A_SetPitch(pitch+2);
		TNT1 AA 1 A_SetPitch(pitch+2);
		TNT1 A 2;
		TNT1 AAAA 1 A_SetPitch(pitch-2);
		TNT1 A 1;
		AXGS A 1;
		AXGS BCD 1 A_WeaponReady(WRF_NOBOB);
		Goto GreenBloodReady;
		
	GreenBloodStrongAttack:
		TNT1 A 0;
		TNT1 A 0 A_Saw("", "", 10, "AxePuffs", 0, 120, 0,16);
		TNT1 AA 0 a_fireprojectile("Axe_Attack", 0, 0, 0, 0);
		Goto GreenBloodEndSwing;
		
	FlashPunching:
		TNT1 A 5;
		Stop;
		
	FlashKicking:
		//TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1,"FlashKickingGreenBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1,"FlashKickingBlueBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1,"FlashKickingBlood");
		AXEG A 1;//Offset(20,40)
		AXEG B 1;//Offset(40,43)
		AXEG C 1;//Offset(60,46)
		AXEG D 1;//Offset(80,46)
		AXEG E 1;//Offset(100,46)
		AXEG D 1;//Offset(80,46)
		AXEG C 1;//Offset(60,46)
		AXEG B 1;//Offset(40,43)
		AXEG A 1;//Offset(20,40)
		AXEG A 1;
		AXEG A 8;
	Stop;
		
	FlashKickingBlood:
		AXRG A 1;//Offset(20,40)
		AXRG B 1;//Offset(40,43)
		AXRG C 1;//Offset(60,46)
		AXRG D 1;//Offset(80,46)
		AXRG E 1;//Offset(100,46)
		AXRG D 1;//Offset(80,46)
		AXRG C 1;//Offset(60,46)
		AXRG B 1;//Offset(40,43)
		AXRG A 1;//Offset(20,40)
		AXRG A 1;
		AXRG A 8;
	Stop;
		
	FlashKickingBlueBlood:
		AXBG A 1;//Offset(20,40)
		AXBG B 1;//Offset(40,43)
		AXBG C 1;//Offset(60,46)
		AXBG D 1;//Offset(80,46)
		AXBG E 1;//Offset(100,46)
		AXBG D 1;//Offset(80,46)
		AXBG C 1;//Offset(60,46)
		AXBG B 1;//Offset(40,43)
		AXBG A 1;//Offset(20,40)
		AXBG A 1;
		AXBG A 8;
	Stop;
		
	FlashKickingGreenBlood:
		AXGG A 1;//Offset(20,40)
		AXGG B 1;//Offset(40,43)
		AXGG C 1;//Offset(60,46)
		AXGG D 1;//Offset(80,46)
		AXGG E 1;//Offset(100,46)
		AXGG D 1;//Offset(80,46)
		AXGG C 1;//Offset(60,46)
		AXGG B 1;//Offset(40,43)
		AXGG A 1;//Offset(20,40)
		AXGG A 1;
		AXGG A 8;
	Stop;
		
	FlashAirKicking:
		//TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1,"FlashAirKickingGreenBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1,"FlashAirKickingBlueBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1,"FlashAirKickingBlood");
		AXEG A 1;//Offset(20,40)
		AXEG B 1;//Offset(40,43)
		AXEG C 1;//Offset(60,46)
		AXEG D 1;//Offset(80,46)
		AXEG E 1;//Offset(100,46)
		AXEG D 1;//Offset(80,46)
		AXEG C 1;//Offset(60,46)
		AXEG B 1;//Offset(40,43)
		AXEG A 1;//Offset(20,40)
		AXEG A 1;
		AXEG A 10;
	Stop;
		
	FlashAirKickingBlood:
		AXRG A 1;//Offset(20,40)
		AXRG B 1;//Offset(40,43)
		AXRG C 1;//Offset(60,46)
		AXRG D 1;//Offset(80,46)
		AXRG E 1;//Offset(100,46)
		AXRG D 1;//Offset(80,46)
		AXRG C 1;//Offset(60,46)
		AXRG B 1;//Offset(40,43)
		AXRG A 1;//Offset(20,40)
		AXRG A 1;
		AXRG A 10;
	Stop;
		
	FlashAirKickingBlueBlood:
		AXBG A 1;//Offset(20,40)
		AXBG B 1;//Offset(40,43)
		AXBG C 1;//Offset(60,46)
		AXBG D 1;//Offset(80,46)
		AXBG E 1;//Offset(100,46)
		AXBG D 1;//Offset(80,46)
		AXBG C 1;//Offset(60,46)
		AXBG B 1;//Offset(40,43)
		AXBG A 1;//Offset(20,40)
		AXBG A 1;
		AXBG A 10;
	Stop;
		
	FlashAirKickingGreenBlood:
		AXGG A 1;//Offset(20,40)
		AXGG B 1;//Offset(40,43)
		AXGG C 1;//Offset(60,46)
		AXGG D 1;//Offset(80,46)
		AXGG E 1;//Offset(100,46)
		AXGG D 1;//Offset(80,46)
		AXGG C 1;//Offset(60,46)
		AXGG B 1;//Offset(40,43)
		AXGG A 1;//Offset(20,40)
		AXGG A 1;
		AXGG A 10;
	Stop;
		
	FlashSlideKicking:
		//TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1,"FlashSlideKickingGreenBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1,"FlashSlideKickingBlueBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1,"FlashSlideKickingBlood");
		AXEG A 1;//Offset(20,40)
		AXEG B 1;//Offset(40,43)
		AXEG C 1;//Offset(60,46)
		AXEG D 1;//Offset(80,46)
		AXEG E 1;//Offset(100,46)
		AXEG D 1;//Offset(80,46)
		AXEG C 1;//Offset(60,46)
		AXEG B 1;//Offset(40,43)
		AXEG A 1;//Offset(20,40)
		AXEG A 5;
	Stop;
		
	FlashSlideKickingBlood:
		AXRG A 1;//Offset(20,40)
		AXRG B 1;//Offset(40,43)
		AXRG C 1;//Offset(60,46)
		AXRG D 1;//Offset(80,46)
		AXRG E 1;//Offset(100,46)
		AXRG D 1;//Offset(80,46)
		AXRG C 1;//Offset(60,46)
		AXRG B 1;//Offset(40,43)
		AXRG A 1;//Offset(20,40)
		AXRG A 1;
		AXRG A 5;
	Stop;
		
	FlashSlideKickingBlueBlood:
		AXBG A 1;//Offset(20,40)
		AXBG B 1;//Offset(40,43)
		AXBG C 1;//Offset(60,46)
		AXBG D 1;//Offset(80,46)
		AXBG E 1;//Offset(100,46)
		AXBG D 1;//Offset(80,46)
		AXBG C 1;//Offset(60,46)
		AXBG B 1;//Offset(40,43)
		AXBG A 1;//Offset(20,40)
		AXBG A 1;
		AXBG A 5;
	Stop;
		
	FlashSlideKickingGreenBlood:
		AXGG A 1;//Offset(20,40)
		AXGG B 1;//Offset(40,43)
		AXGG C 1;//Offset(60,46)
		AXGG D 1;//Offset(80,46)
		AXGG E 1;//Offset(100,46)
		AXGG D 1;//Offset(80,46)
		AXGG C 1;//Offset(60,46)
		AXGG B 1;//Offset(40,43)
		AXGG A 1;//Offset(20,40)
		AXGG A 1;
		AXGG A 5;
	Stop;
		
	FlashSlideKickingStop:
		//TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1,"FlashSlideKickingStopGreenBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1,"FlashSlideKickingStopBlueBlood");
		//TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1,"FlashSlideKickingStopBlood");
		AXEG E 1;
		AXEG D 1;
		AXEG C 1;
		AXEG B 1;
		AXEG A 4;
	Stop;
		
	FlashSlideKickingStopBlood:
		AXRG E 1;
		AXRG D 1;
		AXRG C 1;
		AXRG B 1;
		AXRG A 4;
	Stop;
		
	FlashSlideKickingStopBlueBlood:
		AXBG E 1;
		AXBG D 1;
		AXBG C 1;
		AXBG B 1;
		AXBG A 4;
	Stop;
		
	FlashSlideKickingStopGreenBlood:
		AXGG E 1;
		AXGG D 1;
		AXGG C 1;
		AXGG B 1;
		AXGG A 4;
	Stop;

	Deselect:
		AXES CBA 1;
		TNT1 A 0 A_Lower(60);
	Wait;
}

}




CLASS Axe_Attack: actor
{
Default
{	
	Radius 8;
	Height 8;
	+FORCEXYBILLBOARD;
	RenderStyle "Add";
	Alpha 0.6;
	SeeSound "";
	DeathSound "";
	decal "SawVertical";
	Scale 0.01;
}
States
{
	Spawn:
		TNT1 AB 1 bright;
		TNT1 A 0 A_SpawnItem("Sparks", 0);
		TNT1 A 0 A_PlaySound("AXECLN", 6);
		TNT1 A 0 A_ALertMonsters(400);
		TNT1 AAAAAAAAAAAAAAAA 0 a_spawnprojectile("ShrapnelParticle", 2, 0, random(0, 360), 2, random(30, 170));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 A 0 Radius_Quake(2, 6, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
		BPUF C 1 BRIGHT;
		BPUF D 1 bright;
		TNT1 A 10;
	Stop;

	XDeath:
	Melee:
	Crash:
		TNT1 A 0;
		PUFF A 0 A_PlaySound("player/cyborg/fist", 3);
		PUFF A 0 A_PlaySound("AXEHIT", 3);
		TNT1 A 0 A_PlaySound("Machete/Yum", 6);
		//TNT1 A 0 A_SpawnItemEx("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 Radius_Quake(2, 6, 0, 5, 0);//(intensity, duration, damrad, tremrad, tid)
		TNT1 A 10;
	Stop;
}

}


CLASS Thrown_Axe : pb_projectile_base
{ 
Default
{
	Radius 6;
	Height 8;
	Speed 24;
	Fastspeed 32;
	Damage 60;
	+MISSILE;
	Scale 1.0;
	+FORCEXYBILLBOARD;
	+THRUACTORS;
	-NOGRAVITY;
	+NOEXTREMEDEATH;
	Gravity 0.4;
	DamageType "Cut";
	Decal "";
}
States
{
	Spawn:
		AXE0 A 0;
		"####" BC 2;
		"####" A 0 {self.bthruactors = false;}
	Fly:
		"####" D 2;
	Loop;

	Death:
		TNT1 A 0 A_SpawnItem("Sparks", 0);
		TNT1 A 0 A_PlaySound("AXEWALL", 6);
		TNT1 A 0 A_ALertMonsters(400);
		TNT1 AAAAAAAAA 0 a_spawnprojectile("ShrapnelParticle", 2, 0, random(0, 360), 2, random(30, 170));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 AAAA 0 a_spawnprojectile("HitSpark", 2, 0, frandom(0,1)*frandom(0, 360), 2, frandom(0,1)*frandom(30, 360));
		TNT1 A 0 A_SpawnItem("zscript_Axe", -3);
		TNT1 A 3;
	Stop;

	XDeath:
	Melee:
	Crash:
		TNT1 A 0;
		PUFF A 0 A_PlaySound("AXEHIT", 3);
		TNT1 A 0 A_PlaySound("Machete/Yum", 6);
		//TNT1 A 0 A_SpawnItemEx("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItem("zscript_Axe");
		TNT1 A 10;
	Stop;
}

}

CLASS Thrown_Axe_Red : Thrown_Axe { 
	Default {
	
	Decal "BrutalBloodSuper";
	}
	States
	{
	Spawn:
		AXE1 A 0;
		stop;//Goto ActualSpawn;
	}
}

CLASS Thrown_Axe_Blue : Thrown_Axe { 
	Default {
	
	Decal "BlueBloodSplat";
	}
	States
	{
	Spawn:
		AXE2 A 0;
		stop;//Goto ActualSpawn;
	}
}

CLASS Thrown_Axe_Green : Thrown_Axe { 
	Default {
	
	Decal "GreenBloodSplat";
	}
	States
	{
	Spawn:
		AXE3 A 0;
		stop;//Goto ActualSpawn;
	}
}

// --------------------------------------------------------------------------
//
// Melee Weapons
//
// --------------------------------------------------------------------------


CLASS RIP_AND_TEAR : PB_weapon_base// Replaces Fist
{
bool rip_and_tear, berzerk;

int cooldown;
//cooldown between combo chain reset

Default
{
	Weapon.SelectionOrder 2;
	Weapon.SlotNumber 1;
	Weapon.slotpriority 0.6;
	Weapon.Kickback 100;

	
	+WEAPON.WIMPY_WEAPON;
	+WEAPON.MELEEWEAPON;
	+WEAPON.NOALERT;
	+WEAPON.NOAUTOAIM;
	//+WEAPON.NOAUTOFIRE
	//+WEAPON.CHEATNOTWEAPON;
	+INVENTORY.UNDROPPABLE;

	Weapon.BobRangeX 0.3;
	Weapon.BobRangeY 0.5;
	Weapon.BobSpeed 2.4;
	Weapon.BobStyle "InverseSmooth";

	Obituary "%o was Ripped and Torn by the bare hands of %k";
	Tag "RIP AND TEAR";
}

States
{
	spawn:
		tnt1 a -1;
	stop;
	
	Select:
		TNT1 A 0;
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 A 1 A_Raise(156);
	Wait;

	Ready:
		TNT1 A 0 A_PlaySound("weapons/fists_up", 0);
		P9NS EFGHITUVW 1;
	ReadyFists:
		TNT1 A 0 A_SetRoll(0);
		P1NG ABCDEFGHIJKLMNOPQRS 0;
		P2NG ABCDEFGHIJKLMNOPQRS 0;
		P3NG ABCDEFGHIJKLMNOPQRS 0;
	ReadyFistsLoop:
		P0NG ABCDEFGHIJKLMNOPQRSRQPONMLKJIHGFEDCBA 1
		{
			A_WeaponReady(WRF_ALLOWRELOAD);
 		}
	loop;
	
	Steady:
		TNT1 A 0 A_SetRoll(0);
		//TNT1 A 0 A_JumpIfInventory("ArachnoGun",1,"ReadyArachno");
	Goto ReadyFists;
	
	Reload:
	change_punch_mode:
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"power_up_reload");
		PUNS E 3;
		PUNS F 3 A_PlaySound("KNUCKLED", 0);
		PUNS GFE 4;
	Goto ReadyFists;

	power_up_reload:
		TNT1 A 0
		{
			if(invoker.rip_and_tear == true) {invoker.rip_and_tear = false;}
			else {invoker.rip_and_tear = true; return invoker.resolvestate("rip_&_tear"); }
			return invoker.resolvestate(null);
		}
		//simple punch
		TNT1 A 0 A_Print("SMASH Mode");
		P9NS ABCDEFF 1;
		TNT1 A 0
		{
			A_PlaySound("weapons/fists_smash", 0);
			A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		}
		P9NS GGHIJKKLMM 1;
		TNT1 A 0
		{
			A_PlaySound("weapons/fists_smash", 0);
			A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		}
		P9NS NOPQRSTUVWX 1 ;
	Goto ReadyFists;

	rip_&_tear:
		TNT1 A 0 A_Print("RIP AND TEAR");
		PUNS E 3;
		TNT1 A 0 A_PlaySound("KNUCKLED", 0);
		PUNS FFFGGGGGFFF 1 A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		PUNS E 3;
	Goto ReadyFists;


	//Who needs multiple states for the same conditions anyway, its almost 2020!

	//whoever write this, he was wrong. It must be rewrited so anybody can add any combos
	//sequence wihout booze, to understand whats going on here
	Fire: 
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 A_SetRoll(0);

/*		TNT1 A 0
		{
				if (CountInv("PSeq4") >= 1 ) { return resolvestate("LeftHook"); }
				if (CountInv("PSeq3") >= 1 ) { return resolvestate("LeftBackHand"); }
				if (CountInv("PSeq2") >= 1 ) { return resolvestate("LeftUpperCut"); }
				if (CountInv("PSeq1") >= 2 ) { return resolvestate("LeftHook"); }
				return resolvestate(null);
			}*/


	LeftJab:
		P1NB AAB 1	A_SetRoll(roll+0.5);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		//Determine berserk strike or not
		TNT1 A 0
		{
			if (CountInv("PowerStrength") >= 1 )
			{ 
				if (invoker.rip_and_tear == false) {a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 0);}
				else {a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 0);}
			}
		else {a_fireprojectile("MeleeStrike1", 0, 0, 0, 0);}
		}
		P1NB CDD 1;
		P1NB EFGH 1
		{
			A_SetRoll(roll-0.5);
			A_WeaponReady(WRF_NOPRIMARY);
			if (invoker.kick == true) { return resolvestate("SideKickRight"); }
			return resolvestate(null);
		}
		TNT1 A 0 A_SetRoll(0);
	Goto ReadyFists;
	
	LeftHook:
		//TNT1 A 0 A_GiveInventory("PSeq2",1);
		//TNT1 A 0 A_TakeInventory("PSeq1",3);

		P1NC ABCDE 1 A_SetRoll(roll-2);
		TNT1 A 2;
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
		P1NC FG 1 A_SetRoll(roll+2);		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 )
			{ 
				if (invoker.rip_and_tear == true )
				{
					a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 5);
					a_fireprojectile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 25, 5);
				}
				else
				{
					a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
					a_fireprojectile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 25, 5);
				}
			}
			else
			{
				a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
				a_fireprojectile("MeleeStrike1", 0, 0, -25, 5);
				a_fireprojectile("MeleeStrike1", 0, 0, 25, 5);
			}
		}	
		P1NC HIJKLMNO 1	A_SetRoll(roll+1);
		P1NC PPQRS 1 A_SetRoll(roll-2);
		P1NC TUVWX 1
		{
			A_SetRoll(roll+2);
			A_WeaponReady(WRF_NOPRIMARY);
			if(invoker.kick == true) { return resolvestate("HookKickRight"); }
			return resolvestate(null);
		}
		TNT1 A 0 A_SetRoll(0);
	Goto ReadyFists;
	
	LeftUpperCut:
		//TNT1 A 0 A_TakeInventory("PSeq1",3);
		//TNT1 A 0 A_TakeInventory("PSeq2",3);

		P1NE ABCDDD 1 A_SetRoll(roll-2);
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
	
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 )
			{ 
				if (invoker.rip_and_tear == false) {
				a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 0);
				a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 5);
				a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 10);
				a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 15);
				}
				else {
				a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 0);
				a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
				a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 10);
				a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 15);
				}
			}
			else
			{
				a_fireprojectile("MeleeStrike1", 0, 0, 0, 0);
				a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
				a_fireprojectile("MeleeStrike1", 0, 0, 0, 10);
				a_fireprojectile("MeleeStrike1", 0, 0, 0, 15);
			}
		}

		P1NE EE 1 A_SetRoll(roll+2);
		P1NE FGHH 1 A_SetRoll(roll+2);
		P1NE IJ 1;
		P1NE KLM 1
		{
			A_WeaponReady(WRF_NOPRIMARY);
			if(invoker.kick == true) { return resolvestate("SideKickRight"); }
			return resolvestate(null);
		}
		TNT1 A 0 A_SetRoll(0);
	Goto ReadyFists;
	
	LeftBackHand:
//		TNT1 A 0 A_TakeInventory("PSeq1",3);
//		TNT1 A 0 A_TakeInventory("PSeq2",3);
//		TNT1 A 0 A_TakeInventory("PSeq3",3);

		P1NH ABCD 1 A_SetRoll(roll+2);
		TNT1 A 2;
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
		P1NH E 2;
	//Determine berserk strike or not
	TNT1 A 0 {
		if (CountInv("PowerStrength") >= 1 )
		{ 
			if (invoker.rip_and_tear == false) {
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, -32, 5);
			}
			else {
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, -32, 5);
			}
		}
		else {
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, -32, 5);
		}
	}
	
	
	P1NH FFGHIJKL 1	A_SetRoll(roll-2);
	P1NH MNOP 1 A_SetRoll(roll+2);
	P1NH QRST 1
	{
		A_WeaponReady(WRF_NOPRIMARY);
		if(invoker.kick == true) { return resolvestate("DoKick"); }
		return resolvestate(null);
	}
	Goto ReadyFists;
	
	AltFire: //Right Handed Punches
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 A_SetRoll(0);
		
		//Combo Checker
		TNT1 A 0
		{
//			if (CountInv("PSeq4") >= 1 ) { return resolvestate("RightBackHand"); }
//			if (CountInv("PSeq3") >= 1 ) { return resolvestate("RightHook"); }
//			if (CountInv("PSeq2") >= 1 ) { return resolvestate("RightUpperCut"); }
//			if (CountInv("PSeq1") >= 2 ) { return resolvestate("RightHook"); }
			return resolvestate(null);
		}
	
	RightJab:
//		TNT1 A 0 A_GiveInventory("PSeq1",1);
		
		P1NA AAB 1 A_SetRoll(roll-0.5);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
	
		//Determine berserk strike or not
		TNT1 A 0
		{
			if (CountInv("PowerStrength") >= 1 )
			{ 
				if (invoker.rip_and_tear == false) {a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 0);}
				else {a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 0);}
			}
			else {a_fireprojectile("MeleeStrike1", 0, 0, 0, 0);}
		}
	
	P1NA CDDE 1;
	P1NA FGH 1 {
		A_SetRoll(roll+0.5);
		A_WeaponReady(WRF_NOSECONDARY);
		if(invoker.kick == true) { return resolvestate("SideKickLeft"); }
		return resolvestate(null);
	}
	Goto ReadyFists;
	
	
	RightHook:
//		TNT1 A 0 A_GiveInventory("PSeq2",1);
	//	TNT1 A 0 A_TakeInventory("PSeq1",3);

		P1ND ABCD 1 {
		A_SetRoll(roll+2);
	}
	TNT1 A 1 A_SetRoll(roll+2);
	TNT1 A 2;
	TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
	P1ND EF 1 {
		A_SetRoll(roll-2);
	}
	
	//Determine berserk strike or not
	TNT1 A 0 {
		if (CountInv("PowerStrength") >= 1 )
		{ 
			if (invoker.rip_and_tear == false) {
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 25, 5);
			}
			else {
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 25, 5);
			}
		}
		else {
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, 25, 5);
		}
	}
	
	
	P1ND G 1;
	P1ND HIJKLMNO 1 {
		A_SetRoll(roll-1);
	}
	P1ND O 1 ;
	P1ND PQRS 1 {
		A_SetRoll(roll+2);
	}
	P1ND TUVW 1{
		A_SetRoll(roll-2);
		A_WeaponReady(WRF_NOSECONDARY);
		if(invoker.kick == true) { return resolvestate("HookKickLeft"); }
		return resolvestate(null);
	}
	TNT1 A 0 A_SetRoll(0);
	Goto ReadyFists;
	
	RightUpperCut:
	//	TNT1 A 0 A_TakeInventory("PSeq1",3);
//		TNT1 A 0 A_TakeInventory("PSeq2",3);

		P1NF ABCDDD 1 {
		A_SetRoll(roll+2);
	}
	TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
	//Determine berserk strike or not
	TNT1 A 0 {
		if (CountInv("PowerStrength") >= 1 )
		{ 
			if (invoker.rip_and_tear == false) {
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 0);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 10);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 0, 15);
			}
			else {
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 0);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 10);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 15);
			}
		}
		else {
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 0);
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 10);
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 15);
		}
	}
	P1NF EE 1 {
		A_SetRoll(roll-2);
	}
	P1NF FGHH 1 {A_SetRoll(roll-2);}
	P1NF IJ 1 {}
	P1NF KLM 1{
	//if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
		A_WeaponReady(WRF_NOSECONDARY);
		if(invoker.kick == true) { return resolvestate("SideKickLeft"); }
		return resolvestate(null);
	}
	TNT1 A 0 A_SetRoll(0);
	Goto ReadyFists;
	
	RightBackHand:
//		TNT1 A 0 A_TakeInventory("PSeq1",3);
//		TNT1 A 0 A_TakeInventory("PSeq2",3);
//		TNT1 A 0 A_TakeInventory("PSeq3",3);
//		TNT1 A 0 A_TakeInventory("PSeq4",3);

		P1NI ABCD 1 {
		A_SetRoll(roll+2);
	}
	TNT1 A 2;
	TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5);
	P1NI E 2 ;
	//Determine berserk strike or not
	TNT1 A 0 {
		if (CountInv("PowerStrength") >= 1 )
		{ 
			if (invoker.rip_and_tear == false) {
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrike2Smash", 0, 0, 32, 5);
			}
			else {
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1Fatality", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrikeSuperHook", 0, 0, 32, 5);
			}
		}
		else {
			a_fireprojectile("MeleeStrike1", 0, 0, 0, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, -25, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, 25, 5);
			a_fireprojectile("MeleeStrike1", 0, 0, 32, 5);
		}
	}
	
	P1NI FFGHIJKL 1 {
		A_SetRoll(roll-2);
	}
	P1NI MNOP 1 {
		A_SetRoll(roll+2);
	}
	P1NI QRST 1{
		A_WeaponReady(WRF_NOPRIMARY);
		if(invoker.kick == true) { return resolvestate("DoKick"); }
		return resolvestate(null);
	}
	Goto ReadyFists;



////////////////////////////////////////////////////////////////////////////////
//			kick spcial cases handler
	SideKickLeft:
		TNT1 A 0 {invoker.in_specific_state = true; A_SetRoll(0);}
		TNT1 A 0 A_Overlay(3, "FlashKicking");
		KIC4 ABCDEF 1 A_SetRoll(roll+1);
		TNT1 A 0 A_PlaySound("KICK", 5);
		KIC4 GG 1;
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 3);
		TNT1 A 0 a_fireprojectile("KickAttack", 0, 0, 5, 5);
		TNT1 A 0 A_Jump(256, 2);
		TNT1 A 0 a_fireprojectile("SuperKickAttack", 0, 0, 5, 5);
		KIC4 HIJKLM 1 A_SetRoll(roll-1);
		tnt1 a 0{invoker.kick = false;}
		TNT1 AAAA 1 {
			A_WeaponReady();
			if(invoker.kick == true) { return resolvestate("HookKickLeft"); }
				return resolvestate(null);
			}
		tnt1 a 0 {invoker.in_specific_state = false; invoker.kick = false;}
	Goto ReadyFists;
	
	SideKickRight:
		TNT1 A 0 {invoker.in_specific_state = true; A_SetRoll(0);}
		TNT1 A 0 A_Overlay(3, "FlashKicking");
		KIC5 ABCDEF 1 A_SetRoll(roll-1);
		TNT1 A 0 A_PlaySound("KICK", 5);
		KIC5 GG 1;
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 3);
		TNT1 A 0 a_fireprojectile("KickAttack", 0, 0, -5, 5);
		TNT1 A 0 A_Jump(256, 2);
		TNT1 A 0 a_fireprojectile("SuperKickAttack", 0, 0, -5, 5);
		KIC5 HIJKLM 1 A_SetRoll(roll+1);
		TNT1 AAAA 1 {
			A_WeaponReady();
		if(invoker.kick == true) { return resolvestate("HookKickRight"); }
		return resolvestate(null);
		}
	Goto ReadyFists;
	
	HookKickLeft:
		TNT1 A 0 {invoker.in_specific_state = true; A_SetRoll(0);}
		TNT1 A 0 A_Overlay(3, "FlashKicking");
		KIC3 ABCDE 1 A_SetRoll(roll+1);
		TNT1 A 0 A_PlaySound("KICK", 0);
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 5);
		KIC3 F 1 a_fireprojectile("KickAttack", -10, 0, 0, -8);
		KIC3 G 1 a_fireprojectile("KickAttack", 0, 0, 0, -2);
		KIC3 H 1 a_fireprojectile("KickAttack", 10, 0, 0, -8);
		TNT1 A 0 A_Jump(256, 4);
		TNT1 A 0;
		KIC3 F 1 a_fireprojectile("SuperKickAttack", -10, 0, 0, -8);
		KIC3 G 1 a_fireprojectile("SuperKickAttack", 0, 0, 0, -2);
		KIC3 H 1 a_fireprojectile("SuperKickAttack", 10, 0, 0, -8);
		TNT1 A 0;
		KIC3 IJKLM 1 A_SetRoll(roll-2);
		KIC3 NOPQR 1 A_SetRoll(roll+1);
		TNT1 AAAA 1 A_WeaponReady();
		tnt1 a 0{invoker.kick = false;}
		tnt1 a 0 {invoker.in_specific_state = false; invoker.kick = false;}
		Goto ReadyFists;
		
	HookKickRight:
		tnt1 a 0 {invoker.in_specific_state = false; invoker.kick = false;}
		TNT1 A 0 A_SetRoll(0);
		TNT1 A 0 A_Overlay(3, "FlashKicking");
		KIC6 ABCDE 1 A_SetRoll(roll-1);
		TNT1 A 0 A_PlaySound("KICK", 0);
		KIC6 F 1 a_fireprojectile("KickAttack", 10, 0, 0, -8);
		KIC6 G 1 a_fireprojectile("KickAttack", 0, 0, 0, -2);
		KIC6 H 1 a_fireprojectile("KickAttack", -10, 0, 0, -8);
		TNT1 A 0 A_Jump(256, 4);
		TNT1 A 0;
		KIC6 F 1 a_fireprojectile("SuperKickAttack", 10, 0, 0, -8);
		KIC6 G 1 a_fireprojectile("SuperKickAttack", 0, 0, 0, -2);
		KIC6 H 1 a_fireprojectile("SuperKickAttack", -10, 0, 0, -8);
		TNT1 A 0;
		KIC6 IJKLM 1 A_SetRoll(roll+2);
		KIC6 NOPQR 1 A_SetRoll(roll-1);
		TNT1 AAAA 1 A_WeaponReady();
		Goto ReadyFists;

	
	Deselect:
		PUNS HIJ 1;
		TNT1 A 0 A_Lower(108);
	Wait;

	















	ReadyShotgunguyHEad:
		PTG1 B 1
		{
			A_WeaponReady();
 		}
	Goto Ready+8;
	
	LostSoulHandFireOverlay:
		TNT1 A 5 {
			a_fireprojectile("Soul_Trails",40,0,0,5);
	if (CountInv("LostSoulFatality") < 1) { return resolvestate("LostSoulHandFireOverlayEnd"); }
		return resolvestate(null);
	}
	Loop;
	LostSoulHandFireOverlayEnd:
		TNT1 A 0;
		Stop;
		
	ReadySoul:
		TNT1 A 0 A_Overlay(-3, "LostSoulHandFireOverlay");
		THEA AAAABBBBAAAABBBBCCCCDDDDCCCCDDDD 1 BRIGHT
		{
			A_WeaponReady();
 	}
	loop;
	
	PhantasmHandFireOverlay:
		TNT1 A 5 {
			a_fireprojectile("GreenFlameTrails",40,0,0,5);
	if (CountInv("PhantasmFatality") < 1) { return resolvestate("PhantasmHandFireOverlayEnd"); }
		return resolvestate(null);
	}
	loop;
	PhantasmHandFireOverlayEnd:
		TNT1 A 0;
		Stop;
	ReadyPhantasm:
		TNT1 A 0 A_Overlay(-3, "PhantasmHandFireOverlay");
		TH3A AAAABBBBAAAABBBBCCCCDDDDCCCCDDDD 1 BRIGHT
		{
			A_WeaponReady();
 	}
	loop;
	
	ReadyBarrel:
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		THRG HIJKL 1
		{
			A_WeaponReady();
 	}
	Loop;
	
	ReadyBurningBarrel:
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		THRG DDEEFFGGFFEE 1
		{
			A_WeaponReady();
 	}
	Loop;
	
	ReadyArachno:
		TNT1 AAA 0;
		TNT1 A 2 A_WeaponReady();
		Goto Ready+8;
		
	RemoveArachnoGun:
		TNT1 A 0;
		TNT1 A 0 A_TakeInventory("ArachnotronTurret", 1);
		TNT1 A 0 A_TakeInventory("ArachnoGun", 1);
		Goto Ready+8;
	GrabObject:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		PKUP ABCDEF 1;
		Goto Ready;
		
	KillLS:
		THEA E 1 A_PlaySound("gore/headshot");
		THEA E 3;
		THEA F 4
		{
			A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
			A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
			a_fireprojectile("LSOHK",40,0,0,5);
			A_TakeInventory("LostSoulFatality",1);
			A_TakeInventory("PhantasmFatality",1);
			A_TakeInventory("GoWeaponSpecialAbility",1);
	} 
	Goto Ready;
	

		

	
	ShotgunguyHeadFire:
		PTG1 CDEFGHIJ 1;
		TNT1 A 0 A_PlaySound("skeleton/swing");
		TNT1 A 0 A_Giveinventory("Punching",1);
		PTG1 K 1 a_fireprojectile("SergeantHeadThrown", 0, 0, 0, 0);
		PTG1 LMNOP 1;
		TNT1 A 0 A_TakeInventory("ShotgunguyHead",1);
		Goto Ready+8;
		
	LSFire:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		THEF A 3;
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		THEF B 0 a_fireprojectile("PoorLostSoul", 0, 1, 0, 0);
		THRF ABCDEF 2;
		TNT1 A 0 A_TakeInventory("LostSoulFatality",1);
		Goto Ready+8;
		
	PHFire:
		TNT1 A 0 A_TakeInventory("ArachnotronTurretFiring", 1);
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		TH3F A 3;
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		THEF B 0 a_fireprojectile("PoorPhantasm", 0, 1, 0, 0);
		THRF ABCDEF 2;
		TNT1 A 0 A_TakeInventory("PhantasmFatality",1);
		Goto Ready+8;
		
	ArachnoFire:
		TNT1 A 0 A_GiveInventory("ArachnotronTurretFiring", 1);
		TNT1 A 0 A_PlaySound("PLSM9");
		TNT1 A 7 a_fireprojectile("ArachnoGun_Plasma", 0, 1, 0, 0);
		TNT1 A 0 a_fireprojectile("GunFireSmoke",0,0,0,5);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 a_fireprojectile("Blue_FlareSpawn",0,0,0,0);
		TNT1 A 0 A_TakeInventory("ArachnotronTurretFiring", 1);
		TNT1 A 0 A_Refire;
		Goto Ready+8;
		
	FireBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		THRF A 3 a_fireprojectile("ThrowedBarrel", 0, 1, 0, 0);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		TNT1 A 0 A_TakeInventory("HasBarrel",1);
		THRF ABCDEF 2;
		Goto Ready+8;
	FireBBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		THRF A 3 a_fireprojectile("ThrowedBurningBarrel", 0, 1, 0, 0);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1);
		THRF ABCDEF 2;
		Goto Ready+8;
		
	AltFireBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		PUNG A 1;
		THRF A 0 A_SpawnItemEx ("ExplosiveBarrel",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		TNT1 A 0 A_TakeInventory("HasBarrel",1);
		PUNG A 5;
		Goto Ready+8;
	AltFireBBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		PUNG A 1;
		THRF A 0 A_SpawnItemEx ("BurningBarrel1",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh2");
		TNT1 A 0 A_GiveInventory("Punching",1);
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1);
		PUNG A 5;
		Goto Ready+8;
		
	FlashKicking:
	FlashAirKicking:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashKickingBlue");
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashKickingRed");
		P5NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
	if (CountInv("Punching") == 1 || CountInv("GoWeaponSpecialAbility") == 1) { return resolvestate("FlashInterrupt"); } 
		return resolvestate(null);
	}
	Stop;
	FlashKickingRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashKickingBlue");
		P6NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
	if (CountInv("Punching") == 1 ) { return resolvestate("FlashInterrupt"); }
		return resolvestate(null);
	}
	Stop;
	FlashKickingBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen");
		P7NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
	if (CountInv("Punching") == 1) { return resolvestate("FlashInterrupt"); }
		return resolvestate(null);
	}
	Stop;
	FlashKickingGreen:
		P8NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
	if (CountInv("Punching") == 1) { return resolvestate("FlashInterrupt"); }
		return resolvestate(null);
	}
	Stop;
	
	FlashInterrupt:
		TNT1 A 0;
		Stop;
		
		
	FlashSlideKicking:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingBlue");
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashSlideKickingRed");
		P1NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
		Stop;
	FlashSlideKickingStop:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingStopBlue");
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashSlideKickingStopRed");
		P1NS WXYZ 1;
		Stop;
	FlashSlideKickingRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingBlue");
		P2NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
		Stop;
	FlashSlideKickingStopRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen");
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingStopBlue");
		P2NS WXYZ 1;
		Stop;
	FlashSlideKickingBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen");
		P3NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
		Stop;
	FlashSlideKickingStopBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen");
		P3NS WXYZ 1;
		Stop;
	FlashSlideKickingGreen:
		P4NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
		Stop;
	FlashSlideKickingStopGreen:
		P4NS WXYZ 1;
		Stop;
		
		
	}
}

CLASS Arachno_Gun_Plasma : ACTOR { 
	Default {
	
	Radius 6;
	Height 10;
	Speed 60;
	Damage 10;
	DamageType "Plasma";
	Decal "Scorch";
	alpha 0.87;
	Scale 0.30;
	Projectile;
	+RANDOMIZE;
	renderstyle "Add";
	DeathSound "weapons/plasmax";
	SeeSound "None";
	Obituary "%o was melted by %k's Plasma Gun";
	}
	States
	{
	Spawn:
		PBAL C 1 BRIGHT A_SpawnItem("PlasmaFlare",0,0);
		TNT1 A 0 A_PlaySound("weapons/plasmaloop",6,1,1);
		Loop;
		
	Xdeath:
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 a_fireprojectile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 a_fireprojectile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 B 1 A_Explode(15,50,0);
		TNT1 B 4;
		TNT2 AAA 4 a_fireprojectile ("ExplosionSmoke", 1, 0, random (0, 360), 2, random (0, 160));
		Stop;
		
	Death:
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_SpawnItemEx ("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 B 1 A_Explode(8,50,1);
		TNT1 A 0 a_fireprojectile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 a_fireprojectile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 B 4;
		TNT2 AAAAAAAAA 4 a_fireprojectile ("ExplosionSmoke", 1, 0, random (0, 360), 2, random (0, 160));
		Stop;
	}
}


CLASS psalm_of_Saint_Mark : Ammo
{ 
Default
{
	inventory.maxamount 50;
	Inventory.Icon "M2PRA0";
}

}

// --------------------------------------------------------------------------
// M2 Plasma rifle
// --------------------------------------------------------------------------

CLASS saint_mark_psalm : weapon_slot_6_proto_class
{
enum m2_plasma_fire_mode
{
	plasma = 0,
	lighting = 1,
};

m2_plasma_fire_mode actual_fire_mode;

Default
{
	Weapon.SlotNumber 6;
	Weapon.SelectionOrder 3;
	Weapon.slotpriority 10;

	Weapon.BobRangeX 0.3;
	Weapon.BobRangeY 0.5;
	Weapon.BobStyle "InverseSmooth";
	Weapon.BobSpeed 2.4;

	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 50;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;

	Inventory.PickupSound "PLSDRAW";
	Weapon.AmmoType1 "pb_cell";
	Weapon.AmmoType2 "psalm_of_Saint_Mark";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
	+FLOORCLIP;
	+DONTGIB;
	Inventory.PickupMessage "You got the UAC-M2 Heavy Plasma Rifle!(Slot 6)";
	Tag "Alexandria church gun";
}

override bool, bool weapon_dual_and_special()
{return false, true; }

override void activate_special()
{
	owner.player.SetPSprite(PSP_WEAPON, self.FindState("change_fire_mode") );
}

States
{
	Spawn:
		M2PR A -1;
	Stop;

	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 A 1 A_Raise(80);
	Wait;

	Ready:
		TNT1 A 0 A_PlaySound("PLSDRAW");
		PRIR EDCB 1;
	ready_loop:
		tnt1 a 0
		{//lighting ZR2G normal Z999
			switch(invoker.actual_fire_mode)
			{
				case plasma : self.Player.GetPSprite(PSP_WEAPON).sprite = getspriteindex("Z999"); break;
				case lighting : self.Player.GetPSprite(PSP_WEAPON).sprite = getspriteindex("ZR2G"); break; 
			}
		}
		"####" AABCDEFGHIGHFEDCBA 2
		{	
			A_PlaySound("PLSM2LP", 6,0.1,1);
			a_weaponready(WRF_ALLOWRELOAD);
		}
	loop;

	ZR2G qwertyuiopasdfghjklzxcvbnm 0;
	Z999 qwertyuiopasdfghjklzxcvbnm 0;

	change_fire_mode:
		tnt1 a 0
		{
			if(invoker.actual_fire_mode == plasma)
			{self.player.SetPSprite(PSP_WEAPON, invoker.findstate("lighting_turn_on") ); return;}
		}
	back_to_plasma:
		tnt1 a 0
		{
			A_PlaySound("PLSMLG1");
			invoker.actual_fire_mode = plasma;
		}
		PR1G GHIJFEDCBA 1;
	Goto Ready_loop;
	lighting_turn_on:
		TNT1 A 0 
		{
			A_PlaySound("PLSMLG2");
			invoker.actual_fire_mode = lighting;
		}
		PR1G ABCDEFGHIJIH 1 ;
		TNT1 A 0 A_PlaySound("LGHUM1", 6,1,1);
	Goto Ready_loop;
		
	Fire:
		TNT1 A 0 A_WeaponOffset(0,32);
		tnt1 a 0
		{
			A_StopSound(6);
			if(invoker.actual_fire_mode == lighting)
			{self.player.SetPSprite(PSP_WEAPON, invoker.findstate("lighting_fire") ); return;}
		}
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",2,1);
	Goto Reload;
		TNT1 A 0 A_PlaySound("m2plasma");
		TNT1 A 0 A_Zoomfactor(0.98);
		PRIF B 1 BRIGHT A_FireProjectile("HeavyPlasmaBall",0,1,0,-1);
		TNT1 A 0 A_FireProjectile("Blue_FlareSpawn",-5,0,0,0);
		TNT1 A 0 A_Zoomfactor(0.97);
		PRIF B 1 BRIGHT A_FireProjectile("AltHeavyPlasmaBall",0,1,0, -1);
		TNT1 A 0 A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		TNT1 A 0 A_FireProjectile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		TNT1 A 0 A_Zoomfactor(0.96);
		PRIF C 1 BRIGHT;
		TNT1 A 0 A_Zoomfactor(1.0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PRIF DEF 1 A_WeaponReady(WRF_ALLOWRELOAD);
	Goto Ready_loop;
		
		
	lighting_fire:
		TNT1 A 0 A_PlaySound("LGFire", 1, 1);
		TNT1 A 0 A_PlaySound("LGLoop", 7, 1, 1);
		TNT1 A 0 A_Zoomfactor(0.98);
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",1,1);
	goto reload;
	lighting_loop:
		TNT1 A 0 A_TakeInventory("psalm_of_Saint_Mark", 1);
		TNT1 A 0 A_FireProjectile("LightningGunProjectile", 0, 0, 0, 0, 0, 0);
		TNT1 A 0 A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		PR1F A 1 BRIGHT A_SetAngle(frandom(0.3, -0.3) + angle);
		TNT1 A 0 A_FireProjectile("LightningGunProjectile", 0, 0, 0, 0, 0, 0);
		PR1F B 1 BRIGHT A_SetAngle(frandom(0.3, -0.3) + angle);
		TNT1 A 0 A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		PR1F A 1 BRIGHT A_SetAngle(frandom(0.3, -0.3) + angle);
		TNT1 A 0 A_FireProjectile("LightningGunProjectile", 0, 0, 0, 0, 0, 0);
		PR1F C 1 BRIGHT A_SetAngle(frandom(0.3, -0.3) + angle);
		TNT1 A 0 A_FireProjectile("LightningGunProjectile", 0, 0, 0, 0, 0, 0);
		PR1F A 1 BRIGHT A_SetAngle(frandom(0.3, -0.3) + angle);
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",1,1);
	Goto Reload;
		PR1F B 1 BRIGHT A_ReFire("lighting_loop");
		TNT1 A 0 A_StopSound(7);
		TNT1 A 0 A_PlaySound("LGEnd1", 9, 1);
		TNT1 A 0 A_Zoomfactor(1.0);
		PR1F DEF 1 BRIGHT A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_PlaySound("LGEnd2", 8, 1);
		PR1F G 1 A_WeaponReady(WRF_ALLOWRELOAD);
	Goto Ready_loop;

	FireUpgraded:
		TNT1 A 0 A_PlaySound("m2plasma");
		TNT1 A 0 A_Zoomfactor(0.98);
		PR2F B 1 BRIGHT A_FireProjectile("HeavyPlasmaBall",0,1,0,-1);
		TNT1 A 0 A_FireProjectile("Blue_FlareSpawn",-5,0,0,0);
		TNT1 A 0 A_Zoomfactor(0.97);
		PR2F B 1 BRIGHT A_FireProjectile("AltHeavyPlasmaBall",0,1,0, -1);
		TNT1 A 0 A_QuakeEx(2, 2, 2, 6, 0, 64, "", 0);
		TNT1 A 0 A_FireProjectile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		TNT1 A 0 A_Zoomfactor(0.96);
		PR2F C 1 BRIGHT;
		TNT1 A 0 A_Zoomfactor(1.0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR2F DEF 1 A_WeaponReady(WRF_ALLOWRELOAD);
	Goto Ready_loop;
		
	AltFire:
		TNT1 A 0
		{
			A_WeaponOffset(0,32);
			A_StopSound(6);
			if(invoker.actual_fire_mode == lighting)
			{self.player.SetPSprite(PSP_WEAPON, invoker.findstate("FireStunBomb") ); return;}
		}
		TNT1 A 0 A_Jump(256, "LeftToRight", "RightToLeft");
	LeftToRight:
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",10,1);
	Goto Reload;
		////TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradedLeftToRight");
		PRIF A 1 A_Zoomfactor(.98);
		PR3L D 1 A_Zoomfactor(.96);
		PR3L A 1 A_Zoomfactor(.94);
		TNT1 A 0 A_PlaySound("plamersh",1, 1, 1);
		TNT1 A 0 A_PlaySound("PLSTHRW",3);
		PR3L B 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(27,33),0,8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L C 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(20,27),0,8);
		PR3L D 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",4);
		PR3L E 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(12,18),0,4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L F 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(5,10),0,4);
		PR3L G 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",5);
		PR3L H 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-3,3));
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L I 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-4,7));
		PR3L J 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",6);
		PR3L K 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-12,-18),0,-4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L L 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-20,-27),0,-4);
		PR3L M 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",7);
		PR3L N 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-27,-33),0,-8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L O 1 BRIGHT A_StopSound(1);
		TNT1 A 0 A_PlaySound("plameren",2);
		PR3L M 1 A_Zoomfactor(.96);
		PR3L J 1 A_Zoomfactor(.98);
		PR3L G 1 A_Zoomfactor(1.0);
	Goto Ready_loop;

	RightToLeft:
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",10,1);
	Goto Reload;

		PRIF A 1 A_Zoomfactor(.98);
		PR3L J 1 A_Zoomfactor(.96);
		PR3L M 1 A_Zoomfactor(.94);
		TNT1 A 0 A_PlaySound("plamersh",1, 1, 1);
		TNT1 A 0 A_PlaySound("PLSTHRW",3);
		PR3L N 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-27,-33),0,-8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L O 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-20,-27),0,-8);
		PR3L J 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",4);
		PR3L K 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-12,-18),0,-4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L L 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-5,-10),0,-4);
		PR3L G 1 A_FireProjectile("HotPlasmaGas",random(-1,-1),0,-4);
		TNT1 A 0 A_PlaySound("PLSTHRW",5);
		PR3L H 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-3,3));
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L I 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-4,7));
		PR3L D 1 A_FireProjectile("HotPlasmaGas",random(-2,9));
		TNT1 A 0 A_PlaySound("PLSTHRW",6);
		PR3L B 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(27,33),0,8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L C 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(23,29),0,8);
		PR3L A 1 A_FireProjectile("HotPlasmaGas",random(20,26),0,4);
		TNT1 A 0 A_PlaySound("PLSTHRW",7);
		PR3L E 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(8,16),0,4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR3L F 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(4,8),0,4);
		TNT1 A 0 A_StopSound(1);
		TNT1 A 0 A_PlaySound("plameren",2);
		PR3L A 1 A_Zoomfactor(.96);
		PR3L D 1 A_Zoomfactor(.98);
		PR3L G 1 A_Zoomfactor(1.0);
	Goto ready_loop;

	FireStunBomb:
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",10,1);
	Goto Reload;
		TNT1 A 0 A_Playsound("PZPCHR2");
		PR1F XYZABACABACABAC 1 BRIGHT A_FireProjectile("ElectroBlastTrail2", 0, 0, 0, 0);
		TNT1 A 0 A_Playsound("STNBOMB");
		TNT1 A 0 A_TakeInventory("psalm_of_Saint_Mark", 10);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_FireProjectile("StunBomb", 0, 0, 0, 0, 0, 0);
		TNT1 A 0 A_Zoomfactor(0.96);
		PR1F DDEEFF 1 BRIGHT;
		TNT1 A 0 A_Zoomfactor(1.0);
	Goto Ready_loop;


	Reload:
		TNT1 A 0 A_StopSound(7);
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",50,"Ready_loop");
		TNT1 A 0 A_JumpIfInventory("pb_cell",1,1);
	Goto Ready_loop;
		tnt1 a 0
		{
			if(invoker.actual_fire_mode == plasma)
			{self.player.SetPSprite(PSP_WEAPON, invoker.FindState("normal_reloading") ); return;}
		}
	lighting_Reload:
		TNT1 A 0 A_PlaySound("PLSMLG1");
		PR1G FE 1;
		PR3G ABCDE 1;
	normal_reloading:
		TNT1 A 0 A_PlaySound("PLSM2RL",9);
		PRIR A 1 A_PlaySound("PLCHM2");
		PRIR A 1 A_StopSound(6);
		P41R BCD 2;
		TNT1 A 0 A_FireProjectile("GunFireSmoke", -40, 0, -6, -9, 0, 0);
		TNT1 A 0 A_Playsound("Weapons/CellEject",2);
		P41R FFWXYZ 1;
		TNT1 A 0 A_FireProjectile("PlasmaCaseSpawn", 192, 0, -20, 2, random(0, 160));
	ReloadUnloadedWeapon:
		P41R GGG 3;
		P41R GGGIJKL 2;
		TNT1 A 0 A_PlaySound("PLREADY",7);
		P41R MM 2;
		TNT1 A 0 A_Playsound("Weapons/CellKickIn",3);
		P41R NNOPQSTUV 2;
		PRIR A 1
		{

			giveinventory("psalm_of_Saint_Mark", 0);

			giveinventory("pb_cell", 0);


			inventory left_arm_ammo = findinventory("psalm_of_Saint_Mark");

			
			inventory main_ammo = findinventory("pb_cell");
			
			do
			{

				left_arm_ammo.amount ++;

				main_ammo.amount --;
			}
			while((left_arm_ammo).amount <(left_arm_ammo).maxamount &&(main_ammo).amount > 0)
		}
	FinishReload:
		tnt1 a 0
		{
			if(invoker.actual_fire_mode == plasma)
			{self.player.SetPSprite(PSP_WEAPON, invoker.findstate("Ready_loop") ); return;}
		}
		TNT1 A 0 A_PlaySound("PLSMLG2");
		PR1G ABCDEF 1;
	Goto Ready_loop;







	























	Deselect:
		TNT1 A 0 A_StopSound(6);
		PRIR BCDE 1;
		TNT1 A 0 A_Lower(80);
	Wait;


















	DualWield:
		TNT1 AAAAA 0;

		TNT1 A 0 A_Print("You need two M2 Plasma rifles to dual wield!");

	Goto Ready_loop;
		
		
		
		
	SwitchToDualWield:
		TNT1 A 0 A_StopSound(6);
		//TNT1 A 0 A_SelectWeapon("DualM2PlasmaRifles");
	Goto Select;
		
	DontNeedToReload:
		Goto Ready_loop;
		
		

		
		

		
		

		
		
		////////////////////////////
		

	UpgradedLeftToRight:
		PR2F A 1 A_Zoomfactor(.98);
		PR4L D 1 A_Zoomfactor(.96);
		PR4L A 1 A_Zoomfactor(.94);
		TNT1 A 0 A_PlaySound("plamersh",1, 1, 1);
		TNT1 A 0 A_PlaySound("PLSTHRW",3);
		PR4L B 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(27,33),0,8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L C 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(20,27),0,8);
		PR4L D 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",4);
		PR4L E 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(12,18),0,4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L F 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(5,10),0,4);
		PR4L G 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",5);
		PR4L H 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-3,3));
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L I 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-4,7));
		PR4L J 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",6);
		PR4L K 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-12,-18),0,-4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L L 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-20,-27),0,-4);
		PR4L M 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",7);
		PR4L N 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-27,-33),0,-8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L O 1 BRIGHT A_StopSound(1);
		TNT1 A 0 A_PlaySound("plameren",2);
		PR4L M 1 A_Zoomfactor(.96);
		PR4L J 1 A_Zoomfactor(.98);
		PR4L G 1 A_Zoomfactor(1.0);
	Goto Ready_loop;

	UpgradedRightToLeft:
		PR2F A 1 A_Zoomfactor(.98);
		PR4L J 1 A_Zoomfactor(.96);
		PR4L M 1 A_Zoomfactor(.94);
		TNT1 A 0 A_PlaySound("plamersh",1, 1, 1);
		TNT1 A 0 A_PlaySound("PLSTHRW",3);
		PR4L N 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-27,-33),0,-8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L O 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-20,-27),0,-8);
		PR4L J 1;
		TNT1 A 0 A_PlaySound("PLSTHRW",4);
		PR4L K 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-12,-18),0,-4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L L 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-5,-10),0,-4);
		PR4L G 1 A_FireProjectile("HotPlasmaGas",random(-1,-1),0,-4);
		TNT1 A 0 A_PlaySound("PLSTHRW",5);
		PR4L H 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-3,3));
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L I 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(-4,7));
		PR4L D 1 A_FireProjectile("HotPlasmaGas",random(-2,9));
		TNT1 A 0 A_PlaySound("PLSTHRW",6);
		PR4L B 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(27,33),0,8);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L C 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(23,29),0,8);
		PR4L A 1 A_FireProjectile("HotPlasmaGas",random(20,26),0,4);
		TNT1 A 0 A_PlaySound("PLSTHRW",7);
		PR4L E 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(8,16),0,4);
		tnt1 a 0 A_QuakeEx(1, 1, 1, 4, 0, 64, "", 0);
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",2);


		PR4L F 1 BRIGHT A_FireProjectile("HotPlasmaGas",random(4,8),0,4);
		TNT1 A 0 A_StopSound(1);
		TNT1 A 0 A_PlaySound("plameren",2);
		PR4L A 1 A_Zoomfactor(.96);
		PR4L D 1 A_Zoomfactor(.98);
		PR4L G 1 A_Zoomfactor(1.0);
	Goto Ready_loop;


		//This code is spaghetti at its finiest

	UpgradedReloading:
		//TNT1 A 0 A_JumpIfInventory("LightningGunMode",1,"CheckLightningReload");
	ResumeUpgradedReloading:
		TNT1 A 0 A_PlaySound("PLSM2RL",9);
		P42R A 1;
		TNT1 A 0 A_PlaySound("PLCHM2");
		P42R A 1;
		TNT1 A 0 A_StopSound(6);
		P42R BCD 2;
		//TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, "ReloadUnloadedUpgradedWeapon");
		TNT1 A 0 A_FireProjectile("GunFireSmoke", -40, 0, -6, -9, 0, 0);
		TNT1 A 0 A_Playsound("Weapons/CellEject",2);
		P42R FFWXYZ 1;
		TNT1 A 0 A_FireProjectile("PlasmaCaseSpawn", 192, 0, -20, 2, random(0, 160));
	ReloadUnloadedUpgradedWeapon:
		P42R GGG 3;
		P42R GGGIJKL 2;
		TNT1 A 0 A_PlaySound("PLREADY",7);
		P42R MM 2;
		TNT1 A 0 A_Playsound("Weapons/CellKickIn",3);
		P42R NNOPQSTUV 2;
		PR2R A 1;
	InsertBullets2:
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",50,"FinishReload2");
		TNT1 A 0 A_JumpIfInventory("pb_cell",1,3);
		Goto FinishReload2;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Giveinventory("psalm_of_Saint_Mark",1);


		TNT1 A 0 A_Takeinventory("pb_cell",1);
		Goto InsertBullets2;
	FinishReload2:


		//TNT1 A 0 A_JumpIfInventory("LightningGunMode",1,2);
	Goto Ready_loop;
		TNT1 AAA 0;
		TNT1 A 0 A_PlaySound("PLSMLG2");
		PR3G EDCBA 1;
		PR1G EF 1;
	Goto Ready_loop;
		

		
		////////////////////////////////////////Unloading	
		
	AlreadyUnloaded:

		Goto ready_loop;
		
		
	CheckLightningUnload:
		TNT1 A 0 A_PlaySound("PLSMLG1");
		PR1G FEDCBA 1;
		Goto ResumeUpgradedUnloading;
	UpgradedUnloading:
		//TNT1 A 0 A_JumpIfInventory("LightningGunMode",1,"CheckLightningUnload");
	ResumeUpgradedUnloading:
		P42R BCDG 2;
		TNT1 A 0 A_PlaySound("Weapons/CellKickIn");
		P42R NMLKJIH 2;
		P42R GDCB 2;
		


		
	RemoveBullets2:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",1,3);
		Goto FinishUnload2;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",1);


		TNT1 A 0 A_Giveinventory("pb_cell",1);
		Goto RemoveBullets2;
		
	FInishUnload2:


		Goto Ready_loop;
		
	Unload:
		PRIR A 0 A_WeaponReady(WRF_ALLOWRELOAD);
		//TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, "AlreadyUnloaded");
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_ZoomFactor(1.0);



		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",1,3);
		Goto ready+8;
		TNT1 AAA 0;
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradedUnloading");

		
		P41R BCDG 2;
		TNT1 A 0 A_PlaySound("Weapons/CellKickIn");
		P41R NMLKJIH 2;
		P41R GDCB 2;
		


		
	RemoveBullets:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("psalm_of_Saint_Mark",1,3);
		Goto FinishUnload;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("psalm_of_Saint_Mark",1);


		TNT1 A 0 A_Giveinventory("pb_cell",1);
		Goto RemoveBullets;
		
	FInishUnload:


		Goto ready_loop;
		
		//////////////////////////////////////////Unloading
		
	Flash:
		TNT1 A 4;
		Goto LightDone;
		
	FlashKicking:
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradeFlashKicking");
		PRIR B 1;
		PRIR C 1;
		PRIR D 1;
		PRIR E 3;
		PRIR F 3;
		PRIR E 3;
		PRIR D 1;
		PRIR C 1;
		PRIR B 1;
		PRIR AAA 1;
		Stop;
		
	UpgradeFlashKicking:
		PR2R B 1;
		PR2R C 1;
		PR2R D 1;
		PR2R E 3;
		PR2R F 3;
		PR2R E 3;
		PR2R D 1;
		PR2R C 1;
		PR2R B 1;
		PR2R AAA 1;
		Stop;
		
	FlashAirKicking:
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradeAirFlashKicking");
		PRIR B 1;
		PRIR C 1;
		PRIR D 1;
		PRIR E 3;
		PRIR F 3;
		PRIR E 3;
		PRIR D 1;
		PRIR C 1;
		PRIR B 1;
		PRIR AAAA 1;
		Stop;
		
	UpgradeAirFlashKicking:
		PR2R B 1;
		PR2R C 1;
		PR2R D 1;
		PR2R E 3;
		PR2R F 3;
		PR2R E 3;
		PR2R D 1;
		PR2R C 1;
		PR2R B 1;
		PR2R AAAA 1;
		Stop;
		
	FlashSlideKicking:
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradeFlashSlideKicking");
		PRIR B 2;
		PRIR C 2;
		PRIR DDDEEEEFFEE 2 ;
		Stop;
		
	UpgradeFlashSlideKicking:
		PR2R B 2;
		PR2R C 2;
		PR2R DDDEEEEFFEE 2 ;
		Stop;
		
	FlashSlideKickingStop:
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradeFlashSlideKickingStop");
		PRIR D 1;
		PRIR C 1;
		PRIR BBA 1;
		PRIR A 1;
		Stop;
		
	UpgradeFlashSlideKickingStop:
		PR2R D 1;
		PR2R C 1;
		PR2R BBA 1;
		PR2R A 1;
		Stop;
		
	FlashPunching:
		//TNT1 A 0 A_JumpIfInventory("HasLightningGunUpgrade", 1,"UpgradeFlashPunching");
		PRIR B 1;
		PRIR C 1;
		PRIR D 1;
		PRIR E 3;
		PRIR F 3;
		PRIR E 3;
		PRIR D 1;
		PRIR C 1;
		PRIR B 1;
		PRIR AAA 1;
		Stop;
		
	UpgradeFlashPunching:
		PR2R B 1;
		PR2R C 1;
		PR2R D 1;
		PR2R E 3;
		PR2R F 3;
		PR2R E 3;
		PR2R D 1;
		PR2R C 1;
		PR2R B 1;
		PR2R AAA 1;
		Stop;
	}
}

CLASS HeavyPlasmaBall: Plasma_ball { 
	Default {
	
	Radius 10;
	Height 10;
	Speed 80;
	Damage 10;
	DamageType "Plasma";
	Decal "Scorch";
	Projectile;
	+RANDOMIZE;
	renderstyle "Add";
	Scale 0.2;
	//Translation "0:255=%[0,0,0]:[0,0,1]"
	DeathSound "weapons/plasmax";
	//SeeSound "PLSM8"
	SeeSound "None";
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		DB20 ABCDEFGHIJLMNOPQRSTUVWXYZ 2 BRIGHT
		{
			A_SpawnItem("Blue_FlareSmall",0,0);
			//A_SpawnItemEx("FreezerTrailSparksSmall", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
	}
	Loop;
	
	Xdeath:
		TNT1 A 0 A_SpawnItem("Plasma_Puff", 0);
		TNT1 AAAA 0 a_spawnprojectile("BluePlasmaFireSmall2", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAA 0 a_spawnprojectile("SuperPlasmaFire", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAAAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAAAA 0 ;//a_spawnprojectile("FreezerTrailSparksSmall", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 A_Explode(6,90,0);
		TNT1 A 1 Light("LightningImpactLight");
		TNT1 B 4;
		
		Stop;
		
	Death:
		TNT1 A 0 A_SpawnItem("Plasma_Puff", 0);
		//TNT1 A 0 A_SpawnItem("RailPuff", 0)
		TNT1 A 0 A_Explode(6,90,0);
		TNT1 AAAA 0 a_spawnprojectile("BluePlasmaFireSmall2", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAA 0 a_spawnprojectile("SuperPlasmaFire", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAAAAAAAAAAAAAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 A_SpawnItemEx("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 1 Light("LightningImpactLight");
		TNT1 B 4;
		TNT2 AAAA 4 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
		Stop;
		
		
		
	}
}

CLASS AltHeavyPlasmaBall: Plasma_ball { 
	Default {
	
	Radius 10;
	Height 10;
	Speed 80;
	Damage 12;
	DamageType "SuperPlasma";
	Decal "Scorch";
	Projectile;
	+RANDOMIZE;
	renderstyle "Add";
	Scale 0.2;
	//Translation "0:255=%[0,0,0]:[0,0,1]"
	DeathSound "weapons/plasmax";
	//SeeSound "PLSM8"
	SeeSound "None";
	Obituary "$OB_MPPLASMARIFLE";
	}
	States
	{
	Spawn:
		DB20 ABCDEFGHIJLMNOPQRSTUVWXYZ 1 BRIGHT
		{
			A_SpawnItem("Blue_FlareSmall",0,0);
			//A_SpawnItemEx("FreezerTrailSparksSmall", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
		}
	Loop;
	
	
	Xdeath:
		TNT1 A 0 A_SpawnItem("Plasma_Puff", 0);
		TNT1 AAAA 0 a_spawnprojectile("BluePlasmaFireSmall2", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAA 0 a_spawnprojectile("SuperPlasmaFire", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAAAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		//TNT1 AAAAAAA 0 a_spawnprojectile("FreezerTrailSparksSmall", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 A_Explode(6,90,0);
		TNT1 A 1 Light("LightningImpactLight");
		TNT1 B 4;
		TNT2 AAAA 4 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
		Stop;
		
	Death:
		TNT1 A 0 A_SpawnItem("Plasma_Puff", 0);
		//TNT1 A 0 A_SpawnItem("RailPuff", 0)
		TNT1 A 0 A_Explode(6,90,0);
		TNT1 AAAA 0 a_spawnprojectile("BluePlasmaFireSmall2", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAA 0 a_spawnprojectile("SuperPlasmaFire", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 AAAAAAAAAAAAAAAAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 A_SpawnItemEx("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx("crutch",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 1 Light("LightningImpactLight");
		TNT1 B 4;
		Stop;
		
		
	}
}



CLASS SuperPlasmaFire : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	-NoGravity;
	//+LowGravity
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.8;
	RenderStyle "Add";
	Scale 0.035;
	//Speed 2
	Speed 2;
	+NoGravity;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Scale 0.7;
	Alpha 0.9;
	}
	States
	{
	Spawn:
	Death:
		FIR6 ABCDEFGHIJKLMNOP 1 Bright A_FadeOut(0.04);
		Stop;
	}
}

CLASS BluePlasmaFireSmall2 : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	-NoGravity;
	//+LowGravity
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.8;
	RenderStyle "Add";
	Scale 0.035;
	Speed 0;
	+NoGravity;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Scale 0.25;
	Alpha 0.85;
	}
	States
	{
	Spawn:
	Death:
		FIR6 ABCDEFGHIJKLMNOP 1 Bright A_FadeOut(0.05);
		Stop;
	}
}

CLASS BluePlasmaFireSmall : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	-NoGravity;
	//+LowGravity
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.8;
	RenderStyle "Add";
	Scale 0.035;
	Speed 0;
	+NoGravity;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Scale 0.25;
	Alpha 0.85;
	}
	States
	{
	Spawn:
	Death:
		FIR5 ABCDEFGHIJKLMNOP 1 Bright A_FadeOut(0.05);
		Stop;
	}
}


CLASS LightningGunProjectile: FastProjectile { 
	Default {
	
	+RANDOMIZE;
	+FORCEXYBILLBOARD;
	+DONTSPLASH;
	-BLOODSPLATTER;
	+FORCERADIUSDMG;
	damage 0;
	radius 1;
	height 1;
	speed 500;
	Mass 9999999;
	renderstyle "Add";
	//alpha 0.9
	scale .15;
	decal "none";
	damagetype "Plasma";
	missiletype "ElectroBlastTrail";
	}
	states
	{
	Spawn:
		TNT1 A 1 BRIGHT;
	Loop;
		
	Death:
		TNT1 A 0 BRIGHT A_SpawnItem("LightningGunPuff",0);
		TNT1 A 0 BRIGHT A_SpawnItem("Blue_Flare",0);
		//TNT1 AA 0 A_SpawnItemEx("FreezerTrailSparksSmall", random(4,-4), random(4,-4), random(4,-4), 0, 0, 0, 0, 128, 0);
		TNT1 A 0 A_explode(random(12,15), 80);
		TNT1 AAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 1 Light("LightningImpactLight");
		Stop;
	}
}

CLASS LightningGunPuff : ACTOR { 
	Default {
	
	-COUNTKILL;
	-SHOOTABLE;
	+CLIENTSIDEONLY;
	+BLOODLESSIMPACT;
	+FORCEXYBILLBOARD;
	+THRUACTORS;
	+NOGRAVITY;
	+NODAMAGETHRUST;
	+DONTTHRUST;
	+DONTSPLASH;
	-SHOOTABLE;
	+RANDOMIZE;
	Mass 9999999;
	RenderStyle "Add";
	Speed 0;
	Radius 1;
	Height 1;
	damagetype "Plasma";
	Scale 1.12;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_CheckFloor("FloorCheck");
		TNT1 A 1;
	Die:
		DB08 ABCDEFGHIJKLM 1 bright A_SetScale(Scale.X+frandom(0.04,0.08), Scale.y+frandom(0.04,0.08));
		DB08 NOPQRSTUVWXYZABCDEFGHIJKLM 1 bright
		{
			A_SetScale(Scale.X-0.08, Scale.y-0.08);
			A_FadeOut(0.08);
	}
	Stop;
	
	FloorCheck:
 		TNT1 A 2;
		TNT1 A 0 A_JumpIfInventory("crutch", 1, "ConductiveDeath");
		TNT1 A 0 A_JumpIfInventory("crutch", 1, "ConductiveDeath");
		TNT1 A 0 A_JumpIfInventory("crutch", 1, "ConductiveDeath");
		TNT1 A 0 A_JumpIfInventory("crutch", 1, "ConductiveDeath");
		TNT1 A 1;
		Goto Die;
		
	ConductiveDeath:
		TNT1 A 0 BRIGHT A_SpawnItem("LightningGunPuff_Big",0);
		TNT1 A 0 BRIGHT A_SpawnItem("ElectroBombFX",0);
		TNT1 A 0 BRIGHT A_SpawnItem("Blue_Flare",0);
		TNT1 A 0 A_explode(random(30,35), 240,0,0,200);
		TNT1 AA 0 a_spawnprojectile("ElectroBlastTrail3",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(30,270));
		TNT1 AAAAA 0 a_spawnprojectile("BluePlasmaParticle", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 1 Light("LightningImpactLight");
		Stop;
	}
}

CLASS LightningGunPuff_Big : ACTOR { 
	Default {
	
	-COUNTKILL;
	-SHOOTABLE;
	+CLIENTSIDEONLY;
	+BLOODLESSIMPACT;
	+FORCEXYBILLBOARD;
	+THRUACTORS;
	+NOGRAVITY;
	+NODAMAGETHRUST;
	+DONTSPLASH;
	+RANDOMIZE;
	RenderStyle "Add";
	Scale 2.50;
	}
	States 
	{
	
	Spawn:
		DB08 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ 1 bright
		{
			A_SetScale(Scale.X-0.1, Scale.y-0.1);
			A_FadeOut(0.03);
	}
	Stop;
	
	}
}

CLASS LightningGunPuff_Bigger : LightningGunPuff_Big { 
	Default {
	Scale 3.25;
	
	//actor ElectroBlastTrail;
	
	+VISIBILITYPULSE;
	Radius 0;
	Height 0;
	+NOGRAVITY;
	+NOINTERACTION;
	Speed 0;
	+RANDOMIZE;
	+DontSplash;
	+THRUACTORS;
	+NOBLOOD;
	RenderStyle "Add";
	//Alpha 0.4
	Scale 0.27;
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Spawn2", "Spawn3", "Spawn4", "Spawn5", "Spawn6", "Spawn7", "Spawn8", "Spawn9", "Spawn10");
			DLI6 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn2:
			TNT1 A 0;
			DLI7 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn2:
			TNT1 A 0;
			DLI8 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn3:
			TNT1 A 0;
			DLI9 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn4:
			TNT1 A 0;
			DLI0 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn5:
			TNT1 A 0;
			DLI6 ABCDEFGHIJK 1 bright;
			Stop;
		Spawn6:
			TNT1 A 0;
			DLI7 LMNOPQRSTUV 1 bright;
			Stop;
		Spawn7:
			TNT1 A 0;
			DLI8 LMNOPQRSTUV 1 bright;
			Stop;
		Spawn8:
			TNT1 A 0;
			DLI9 LMNOPQRSTUV 1 bright;
			Stop;
		Spawn9:
			TNT1 A 0;
			DLI0 LMNOPQRSTUV 1 bright;
			Stop;
		Spawn10:
			TNT1 A 0;
			DLI0 ABCDEFGHIJK 1 bright;
			Stop;
	}
	}
	
	class ElectroBlastTrail2 : pb_special_effect_base
	{
		default{Speed 10;}
	}
	
	class ElectroBlastTrail3 : pb_special_effect_base
	{
		default{Speed 10;
		Scale 0.62;
	}
	}
	
	
	
	class StunElectrocute : pb_special_effect_base
	{
		default{Scale 0.32;}
		States
		{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Playsound("Sparks/Spawn");
			TNT1 A 0 A_Jump(256, "Spawn2", "Spawn3", "Spawn4", "Spawn5", "Spawn6", "Spawn7", "Spawn8", "Spawn9", "Spawn10");
			DLI6 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn2:
			TNT1 A 0;
			DLI7 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn2:
			TNT1 A 0;
			DLI8 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn3:
			TNT1 A 0;
			DLI9 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn4:
			TNT1 A 0;
			DLI0 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn5:
			TNT1 A 0;
			DLI6 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn6:
			TNT1 A 0;
			DLI7 LMNOPQRSTUV 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn7:
			TNT1 A 0;
			DLI8 LMNOPQRSTUV 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn8:
			TNT1 A 0;
			DLI9 LMNOPQRSTUV 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn9:
			TNT1 A 0;
			DLI0 LMNOPQRSTUV 1 bright Light("ElectrocutionLight");
			Stop;
		Spawn10:
			TNT1 A 0;
			DLI0 ABCDEFGHIJK 1 bright Light("ElectrocutionLight");
			Stop;
	}
	}
	
	class ElectroBombFX : pb_projectile_base
	{
	default{
	Speed 0;
	Damage 0;
	PROJECTILE;
	RENDERSTYLE "Add";
	Damagetype "plasma";
	Scale 0.35;
	+THRUGHOST;
	+THRUACTORS;
	+FORCEXYBILLBOARD;
	+NoGravity;
	+DONTSPLASH;}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("LGBOMB");
			STFL ABCDEFGHIJKLMNOP 1 Bright A_SetScale(Scale.X+0.05,Scale.y+0.05);
			STFL ABCDE 1 BRIGHT A_FadeOut(0.2);
			Stop;
	}
	}
	
	class StunBomb : pb_projectile_base
	{
	default
	{
	Radius 2;
	Height 2;
	Speed 24;
	Damage 0;
	// PROJECTILE
	RENDERSTYLE "Add";
	//Alpha 0.80
	Damagetype "Stun";//New Damage type!
	Scale 0.1;
	+MISSILE;
	+THRUGHOST;
	+FORCEXYBILLBOARD;
	Gravity .5;
	SeeSound "";
	DeathSound "LGBOMB";
	}
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_PlaySound("PZAPFLY", 6,1,1);
			STFL ABCD 1 A_SetScale(Scale.X+0.02,Scale.y+0.02);
		Fly:
			STFL EFGH 1 Bright;// a_spawnprojectile("ElectroBlastTrail",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(-40,40));
			STFL IJKL 1 Bright Light("LightningImpactLight");// a_spawnprojectile("ElectroBlastTrail",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(-40,40));
			STFL MNOP 1 Bright;// a_spawnprojectile("ElectroBlastTrail",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(-40,40));
			STFL ABCD 1 Bright Light("LightningImpactLight");// a_spawnprojectile("ElectroBlastTrail",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(-40,40));
		Loop;
			
		Death:
			TNT1 A 0;
			TNT1 A 0 {self.bNOGRAVITY = true;}
			TNT1 A 0 A_StopSound(6);
			STFL ABCDEFGHIJKL 1 BRIGHT Light("LightningImpactLight") A_SetScale(Scale.X+0.1,Scale.y+0.1);
			TNT1 A 0 BRIGHT A_SpawnItem("LightningGunPuff_Bigger",0);
			TNT1 A 0 BRIGHT A_SpawnItem("Blue_Flare",0);
			TNT1 A 0 A_explode(2, 300,0,0,300);
			TNT1 A 0 A_PlaySound("STNBOEX", 3);
			TNT1 AAAAAAAAAAA 0 a_spawnprojectile("ElectroBlastTrail3",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(30,270));
			XELC AABBCCDDEEFF 1 Bright Light("LightningImpactLight") a_spawnprojectile("ElectroBlastTrail3",6,0,random(0,359),CMF_AIMDIRECTION|CMF_TRACKOWNER,random(30,270));
			Stop;
	}
	}

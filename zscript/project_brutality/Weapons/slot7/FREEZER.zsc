CLASS snowflakes : Ammo
{ 
	Default
	{
		inventory.maxamount 60;
		Inventory.Icon "FRPKA0";
	}
}

CLASS fridge_rifle : PB_Weapon_base
{
enum freezer_fire_mode
{
	ice_ball = 0,
	freeze_ray = 1
};

freezer_fire_mode actual_freezer_fire_mode;

bool choose_pistol;

Default
{	
	Weapon.SlotNumber 7;
	Weapon.SelectionOrder 2;
	Weapon.slotpriority 0.5;

	Weapon.BobRangeX 0.3;
	Weapon.BobRangeY 0.5;
	Weapon.BobStyle "InverseSmooth";
	Weapon.BobSpeed 2.4;
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 60;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 60;
	Inventory.PickupSound "Weapons/FreezerReady";
	Weapon.AmmoType1 "pb_cell";
	Weapon.AmmoType2 "snowflakes";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NOALERT;
	DamageType "Freeze";
	Inventory.PickupMessage "Fridge Rifle!(Slot 7)";
	Obituary "%o going cool coctail of %k";
	Tag "Cry Rifle";
}

override bool, bool weapon_dual_and_special()
{return false, true;}

override void activate_special()
{
	owner.player.SetPSprite(PSP_WEAPON, self.FindState("change_freezer_mode") );
}
States
{		
	Spawn:
		FRPK A -1;
	stop;
		
	Steady: 
		TNT1 A 0;
		Goto Ready;
		
	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 A 1 A_Raise(160);
	Wait;

	Ready:
		FRIS DCBA 1;
		TNT1 A 0 A_PlaySound("Weapons/FreezerReady",4);
	ready_loop:
		TNT1 A 0 A_StopSound(2);
		FR1D ABC 2
		{
			if(invoker.choose_pistol == true)
			{self.player.SetPsprite(PSP_WEAPON, invoker.resolvestate("pistol_ready") );}
			a_weaponready(WRF_ALLOWRELOAD);
		}
	loop;
	
	pistol_ready:
		TNT1 A 0 A_GunFlash("FlashPistolReady");
		TNT1 A 0 A_StopSound(2);
		FR1D Z 1 a_weaponready();
	loop;

	change_freezer_mode:
		TNT1 A 0
		{
			A_PlaySound("DSBOWREL");
			switch(invoker.actual_freezer_fire_mode)
			{
				case ice_ball: A_Print("Firemode: Freeze Ray"); invoker.actual_freezer_fire_mode = freeze_ray; break;
				case freeze_ray : A_Print("Firemode: Ice Missile"); invoker.actual_freezer_fire_mode = ice_ball; break;
			}
		}
	Goto Ready_loop;

	Fire:
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,1);
	Goto Reload;
		TNT1 A 0
		{
			if(invoker.choose_pistol == true) { self.player.SetPSprite(PSP_WEAPON, invoker.FindState("Fire_Pistol") ); return;}
			if(invoker.actual_freezer_fire_mode == freeze_ray) { self.player.SetPSprite(PSP_WEAPON, invoker.FindState("Fire_Beam") ); return;}
		}
		TNT1 A 0 A_AlertMonsters;
		FRFI ABCDE 2 Bright A_GunFlash;
		TNT1 A 0 A_Playsound("Weapons/FreezerFire");
		TNT1 A 0 Bright a_fireprojectile("FreezerBall", 0, 1, 0, 0);
		TNT1 A 0 A_Takeinventory("snowflakes",10);
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,1);
	goto GunEmpty;
		TNT1 A 0 A_Playsound("HRCharge",1);
		FRFI F 5;
		TNT1 A 0 A_Playsound("Weapons/FreezerRecharge",3);// + sound
		FR1D ABC 1;
		TNT1 A 0 A_Refire;
	Goto ready_loop;
		
	Fire_Beam:
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,1);
	Goto Reload;
		TNT1 A 0 A_AlertMonsters;
		FRFI GH 1 Bright A_GunFlash;
		TNT1 A 0 a_fireprojectile("Blue_FlareSpawn",0,0,0,0);
		TNT1 A 0 A_Playsound("weapons/cryobowflyby",2,1,2);
		TNT1 A 0 Bright a_fireprojectile("CryoShot", 0, 1, 0, 0);
		TNT1 A 0 A_Takeinventory("snowflakes",1);
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,1);
	goto GunEmpty;
		TNT1 A 0;
		FRFI GI 1 Bright A_GunFlash;
		TNT1 A 0 a_fireprojectile("Blue_FlareSpawn",0,0,0,0);
		TNT1 A 0 Bright a_fireprojectile("CryoShot", 0, 1, 0, 0);
		TNT1 A 0 A_Takeinventory("snowflakes",1);
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,1);
	goto GunEmpty;
		TNT1 A 0 A_Refire;
		TNT1 A 0 A_StopSound(2);
		TNT1 A 0 A_Playsound("Weapons/FreezerRecharge",3);// + sound
		FR1D ABC 1;
	Goto Ready_loop;
		
	Fire_Pistol:
		TNT1 A 0 A_JumpIfInventory("FreezerPistolAmmo", 1, 1);//First of all, checks if there is ammo inside the gun
	Goto Reload_Pistol;//Couldn't find any ammo. Reload
		TNT1 A 0 A_GunFlash("FlashFire_Pistol");
		FR1D Z 6 A_WeaponReady();
		TNT1 A 0;//A_GunFlash("FlashPistolReady")
	Goto pistol_ready;




	AltFire: //drawing pistol with full freezer
		TNT1 A 0 A_WeaponOffset(0,32);
		TNT1 A 0 
		{
			if(invoker.choose_pistol == true) {self.player.SetPSprite(PSP_WEAPON, invoker.FindState("Unequip_Pistol") ); }
			else{invoker.choose_pistol = true;}
		}
		TNT1 A 0 A_GunFlash("FlashPistolEquip");
		FR1D W 1;
		FR1D X 1;
		FR1D Y 1;
		FR1D Y 1;
		FR1D Z 1;
	Goto pistol_ready;
		
	Unequip_Pistol:
		TNT1 A 0 {A_GunFlash("FlashPistolUnequip"); invoker.choose_pistol = false;}
		FR1D Z 1;
		FR1D Y 1;
		FR1D Y 1;
		FR1D X 1;
		FR1D W 1;
	Goto Ready_loop;




	Reload:
		TNT1 A 0;
		TNT1 A 0 A_StopSound(2);
		TNT1 A 0 
		{
			if(invoker.choose_pistol == true) { self.player.SetPSprite(PSP_WEAPON, invoker.FindState("Reload_Pistol") ); return;}
		}

		TNT1 A 0 A_JumpIfInventory("snowflakes",60,"DontNeedToReload");
		TNT1 A 0;
		TNT1 A 0 A_JumpIfInventory("pb_cell",1,3);
	Goto Ready_loop;
		TNT1 AAAA 0;
		TNT1 A 0 A_PlaySound("PLREADY",1);

		5RRL ABC 2;
		5RRL D 3;
		TNT1 A 0 A_Playsound("Weapons/CellEject",2);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn", 192, 0, -20, 2, random(0, 160));
		5RRL EFGH 2;
		TNT1 AAA 0;
		5RRL II 1;
		5RRL Z 11;
		TNT1 A 0 A_Playsound("Weapons/CellKickIn",3);
		5RRL JKLM 2;
		5RRL N 3;
		5RRL OQ 2;

		TNT1 AAAAAAAAAA 0;
		TNT1 A 0 A_JumpIfInventory("snowflakes",60,15);
		TNT1 A 0 A_JumpIfInventory("pb_cell",1,3);
	Goto Ready_loop;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Giveinventory("snowflakes",1);
		TNT1 A 0 A_Takeinventory("pb_cell",1);
		Goto Reload+41;//Goto Reload+35
		TNT1 AAAAAAAA 0;
		TNT1 A 0 A_PlaySound("Weapons/FreezerReady",1);

	Goto Ready_loop;
		
		
		////////////////////////////////////////Unloading	
		
	AlreadyUnloaded:

	Goto GunEmpty2+3;
		
	Unload:
		FRRD A 1 A_WeaponReady;
		//TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, "GunEmpty2");
		TNT1 A 0 A_StopSound(3);
		TNT1 A 0 A_ZoomFactor(1.0);



		TNT1 A 0 A_JumpIfInventory("snowflakes",1,3);
	Goto GunEmpty;
		TNT1 AAA 0;

		
		5RRL ABC 2;
		5RRL D 3;
		//TNT1 A 0 A_JumpIfInventory("HasUnloaded", 1, 8);
		TNT1 A 0 A_Playsound("Weapons/CellEject",2);
		TNT1 A 0 a_fireprojectile("PlasmaCaseSpawn", 192, 0, -20, 2, random(0, 160));
		5RRL EFGH 2;
		TNT1 AAA 0;
		5RRL II 1;
		
		TNT1 A 0 A_Playsound("Weapons/CellKickIn",2,3);


		
	RemoveBullets:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("snowflakes",1,3);
	Goto FinishUnload;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("snowflakes",1);
		TNT1 A 0 A_Giveinventory("pb_cell",1);
	Goto RemoveBullets;
		
	FInishUnload:
		//	TNT1 A 0 A_PlaySound("DryFire")


		Goto GunEmpty2+6;
		
		//////////////////////////////////////////Unloading
		
	Reload_Pistol:
		TNT1 A 0;

		TNT1 A 0 A_JumpIfInventory("FreezerPistolAmmo", 15, "Ready2");//Checks if weapons is full
		TNT1 A 0 A_JumpIfInventory("low_caliber_bullets", 1, 3);//Checks if you have spare ammo
	Goto Ready_loop;//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 AAAAA 0;
		TNT1 A 0 A_GiveInventory("FreezerPistolAmmo", 1);//Puts one bullet inside the clip
		TNT1 A 0 A_TakeInventory("low_caliber_bullets", 1);//Puts one bullet inside the clip
		TNT1 A 0 A_JumpIfInventory("FreezerPistolAmmo", 15, 2);//Checks if weapons is full
	Goto Reload_Pistol+1;
		TNT1 AAAA 0;
		//D2GS DCBA 1
		TNT1 A 5;
		TNT1 A 0 A_PlaySound("PSRLOUT", 1);
		TNT1 A 0 a_fireprojectile("EmptyClipMP40",185,0,8,-4);
		D2GR ABCD 2;
		TNT1 A 0 A_PlaySound("PSRLIN", 2);
		D2GR DEFG 2;
		TNT1 A 0 A_PlaySound("PSRLFIN", 3);
		TNT1 A 5;
		TNT1 A 0;
	Goto Ready_loop;








	Deselect:
		TNT1 A 0 A_StopSound(2);
		FRIS ABCD 1;
		TNT1 A 0 A_Lower(70);
	Wait;












	GunEmpty:
		TNT1 A 0 A_StopSound(2);
		FRFI F 1 A_WeaponReady();
	loop;
		
	GunEmpty2:
		TNT1 A 0 A_StopSound(2);
		FR1D D 1 A_WeaponReady;
		FR1D D 1;
		TNT1 AA 0;
		FR1D D 1 A_WeaponReady;
		Goto GunEmpty2+3;
		
	DontNeedToReload:
	Goto Ready_loop;
		
	FlashFire_Pistol:
		TNT1 AAA 0;
		TNT1 A 0 A_TakeInventory("FreezerPistolAmmo", 1);//Removes 1 ammo from magazine
		
		TNT1 A 0 A_AlertMonsters;
		D2FS W 1 BRIGHT A_FireBullets(4,1.5,-1,9,"BulletPuff",1);//Horizontal Spread, Vertical Spread, Numbers of Projectiles(Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_PlaySound("weapons/pistol", CHAN_WEAPON);
		D2FS X 1 a_fireprojectile("MP40CaseSpawn",0,0,6,4);//Ejetts empty brass
		D2FS YY 1;
		D2FS ZZ 1;
		D2RF C 0 A_SetPitch(-0.4 + pitch);//Vertical recoil down
		D2RF A 0;
		TNT1 A 0 A_JumpIfInventory("FreezerPistolAmmo", 1, 1);//Checks if there is ammo inside the gun

	Stop;

		
	FlashPistolEquip:
		D2FS A 1;
		D2FS B 1;
		D2FS C 1;
		D2FS D 1;
		D2FS E 1;
		Stop;
		
	FlashPistolReady:
		D2RG A 2;
		Stop;
		
	FlashPistolUnequip:
		D2FS E 1;
		D2FS D 1;
		D2FS C 1;
		D2FS B 1;
		D2FS A 1;
		Stop;
		
	FlashPunching:
		FR1D W 1;
		FR1D X 1;
		FR1D Y 1;
		FR1D Y 3;
		FR1D Z 3;
		FR1D Y 3;
		FR1D X 1;
		FR1D W 1;
		FR1D A 1;
		FR1D AAA 1;
		Stop;
		
	Flash:
		TNT1 A 1;
		Goto LightDone;
		
		
	FlashKicking:
		FR1D W 1;
		FR1D X 1;
		FR1D Y 1;
		FR1D Y 3;
		FR1D Z 3;
		FR1D Y 3;
		FR1D X 1;
		FR1D W 1;
		FR1D A 1;
		FR1D AAA 1;
		Stop;
		
	FlashAirKicking:
		FR1D W 1;
		FR1D X 1;
		FR1D Y 1;
		FR1D Y 3;
		FR1D Z 3;
		FR1D Y 3;
		FR1D X 1;
		FR1D W 1;
		FR1D A 1;
		FR1D AAAA 1;
		Stop;
		
	FlashSlideKicking:
		FR1D WX 2;
		FR1D XXXYYYZZZYY 2 ;
		Stop;
		
	FlashSlideKickingStop:
		//TNT1 A 0
		FR1D YYXWA 1;
		FR1D A 1;
		Stop;
	}
}

///////////////// Code taken from Cryobow - THANKS GUYS!!!
CLASS FreezerBall : pb_projectile_base
{ 
	Default {
	
	Radius 4;
	Height 8;
	Speed 52;
	Damage 0;
	Projectile;
	DamageType "Freeze";
	RenderStyle "Add";
	//Translation "0:255=%[0,0,0]:[0,1,1]"
	Alpha 0.95;
	+NODAMAGETHRUST;
	+FORCEXYBILLBOARD;
	+FORCERADIUSDMG;
	DeathSound "weapons/cryobowhit";
	//MissileHeight 8
	Decal "IceScorch";
	}
	States
	{
	Spawn:
		FRPJ ABC 1 Bright;// A_SpawnItemEx("FreezerTrailSparksSmall", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		TNT1 A 0 a_spawnprojectile("Blue_FlareSpawn",0,0,0,0);
		TNT1 A 0 a_spawnprojectile("Icetracer", 0, 0, random(0, 360), 2, random(0, 360));
		Loop;
	Death:
		BXPL A 0 Bright A_StopSound(CHAN_BODY);
		//BXPL A 0 Bright {self.bICEDAMAGE = 1;}
		BXPL A 0 Bright {self.bNODAMAGETHRUST = 0;}
		BXPL A 0 Bright A_Explode(85*random(3,4),180, 0) ;
		BXPL A 0 Bright A_Explode(random(50,55), 315, 0);
		BXPL AAAAAAAAAAA 0 Bright A_SpawnItemEx("CryoSmoke", 0, 0, 0, random(10, 30)*0.1, 0, random(0, 10)*0.1, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION);
		BXPL AAAAA 0 Bright A_SpawnItemEx("CryoSmoke3", 0, 0, 0, random(10, 30)*0.04, 0, random(0, 10)*0.04, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,64);
		//BXPL AAAAAAA 0 Bright A_SpawnItemEx("FreezerTrailSparksSmall", random(5,-5), random(5,-5), random(5,-5), random(10, 30)*0.04, 0, random(0, 10)*0.04, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,64);
		BXPL AAAAAAA 0 Bright A_SpawnItemEx("CryoSmoke2", 0, 0, 0, random(10, 30)*0.04, 0, random(0, 10)*0.04, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,64);
		BXPL ABCDEFGH 1 Bright;
		BXPL IJKLLM 1 Bright A_FadeOut(0.1);
		Stop;
	}
}

CLASS CryoSmoke : ACTOR { 
	Default {
	
	Radius 2;
	Height 2;
	+NOINTERACTION;
	+FORCEXYBILLBOARD;
	RenderStyle "Shaded";
	StencilColor "A0 FF FF";
	Alpha 0.8;
	Scale 0.85;
	}
	States
	{
	Spawn:
		SMKO A 0;
		SMK2 A 2 A_FadeOut(0.05);
		Wait;
	}
}

CLASS CryoSmoke2 : CryoSmoke
{
	Default
	{
		StencilColor "DD DD DD"; Scale 0.7; Alpha 0.5; VSpeed 2.5 ;
	}
	States {
	Spawn:
		TNT1 A 0;
		SMK2 A 6 A_FadeOut(0.04);
		Wait;
	}
}

CLASS CryoSmoke3 : CryoSmoke {
	Default {StencilColor "AA FF FF"; Scale 0.7; Alpha 0.4 ;VSpeed 2.25 ;
	}
	States {
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("Weapons/FreezerRecharge");
		SMK2 A 6 A_FadeOut(0.04);
		Wait;
	}
}

CLASS MiniCryoSmoke1 : CryoSmoke {
	Default {StencilColor "AA FF FF"; Scale 0.7; Alpha 0.4; VSpeed 2.25;
	Scale 0.25;
	}
	States {
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("Weapons/FreezerRecharge");
		SMK2 A 6 A_FadeOut(0.04);
		Wait;
	}
}

CLASS IceTracer : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	// -NoGravity
	+LowGravity;
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.1;
	RenderStyle "Add";
	StencilColor "A0 FF FF";
	Scale 1;
	//Speed 2
	Speed 0;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Alpha 1;
	}
	States
	{
	Spawn:
	Death:
		SHEX AABBCCDDEE 1 Bright A_FadeOut(0.04);
		Stop;
	}
}

CLASS CryoShot : FastProjectile { 
	Default {
	
	Radius 4;
	Height 8;
	Speed 125;
	Damage 5;
	Damagetype "Freeze";
	Projectile;
	RenderStyle "Add";
	Alpha 0.9;
	+FORCERADIUSDMG;
	+NODAMAGETHRUST;
	+NoExtremeDeath;
	DeathSound "weapons/cryobowhit";
	MissileType "CryoTrail";
	MissileHeight 8;
	Decal "IceScorch";
	}
	States
	{
	Spawn:
		//BSHT A 0 Bright A_SpawnItemEx("FreezerTrailSparksSmall", random(3,-3), random(3,-3), random(3,-3), 0, 0, 0, 0, 128, 0);
		BSHT A 1 Bright A_SpawnItem("PlasmaFlare",0,0);
		TNT1 A 0 a_spawnprojectile("Blue_FlareSpawn",0,0,0,0);
		Loop;
	Death:
		BXPL A 0 Bright A_StopSound(CHAN_BODY);
		//BXPL A 0 Bright {self.bICEDAMAGE = 1;}
		BXPL A 0 Bright {self.bNODAMAGETHRUST = 0;}
		BXPL A 0 Bright A_Explode(5, 8, 0);
		BXPL A 0 Bright A_Explode(10, 16, 0);
		BXPL AAA 0 Bright A_SpawnItemEx("MiniCryoSmoke1", 0, 0, 0, random(10, 30)*0.1, 0, random(0, 10)*0.1, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION);
		//BXPL AA 0 Bright A_SpawnItemEx("FreezerTrailSparksSmall", random(5,-5), random(5,-5), random(5,-5), random(10, 30)*0.04, 0, random(0, 10)*0.04, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,64);
		BXPL A 0 Bright A_SpawnItemEx("MiniCryoSmoke1", 0, 0, 0, random(10, 30)*0.04, 0, random(0, 10)*0.04, random(1,360), SXF_CLIENTSIDE|SXF_NOCHECKPOSITION,64);
		BXPL ABCDEFGH 1 Bright;
		BXPL IJKLLM 1 Bright A_FadeOut(0.1);
		Stop;
	}
}

CLASS CryoTrail : ACTOR { 
	Default {
	
	+NOINTERACTION;
	Radius 4;
	Height 8;
	Renderstyle "Add";
	Alpha 0.5;
	}
	States
	{
	Spawn:
		BSHT AABBCDEFG 1 Bright;
		Stop;
	}
}

CLASS FreezerPistolAmmo : Ammo { 
	Default
{inventory.maxamount 15;}
}
	class FreezerPistolToken : Inventory
{	Default
{inventory.maxamount 1;}
}
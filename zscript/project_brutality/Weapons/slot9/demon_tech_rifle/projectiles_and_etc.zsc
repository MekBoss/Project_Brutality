CLASS incenirate_bull_et: pb_projectile_base
{ 
Default
{
	+FORCEXYBILLBOARD;
	+BLOODSPLATTER;
	+NOEXTREMEDEATH;
	damage 12;
	damagetype "fire";
	radius 2;
	height 1;
	renderstyle "Add";
	scale .3;
	speed 130;
	Decal "Scorch";
	Deathsound "Weapons/Demontech/Crash";
}

states
{
	Spawn:
		PBAL H 1 BRIGHT;
		TNT1 A 0 a_spawnprojectile("RedTracerSmall", 0, 0, random(0, 360), 2, random(0, 360));
		//TNT1 A 0 ; //A_SpawnItemEx("bfg_4_laser_train", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		PBAL I 1 BRIGHT;
		TNT1 A 0 A_SpawnItem("Red_FlareSmall");
	Loop;

	Xdeath:
		TNT1 A 0;//a_spawnprojectile("Flametrails", 0, 0, random(0, 180), 2, random(0, 360))
		TNT1 A 0 A_SpawnItem("HellRifle_Puff");
		TNT1 A 0 BRIGHT A_SpawnItem("Red_Flare");
		TNT1 AAA 0 A_SpawnItemEx("ExplosionParticle", random(-8, 8), random(-8, 8), random(-2,2), 0, 0, 0, 0, 128, 0);
		//TNT1 AAA 0 ; //A_SpawnItemEx("bfg_4_laser_train", random(-8, 8), random(-8, 8), random(-2,2), 0, 0, 0, 0, 128, 0);
		TNT1 A 4;
		TNT2 AAA 3 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
	Stop;
		
	Death:
		TNT1 A 0 A_SpawnItem("HellRifle_Puff2");
		TNT1 A 0 BRIGHT A_SpawnItem("Red_Flare");
		TNT1 AAA 0 A_SpawnItemEx("ExplosionParticle", random(-8, 8), random(-8, 8), random(-2,2), 0, 0, 0, 0, 128, 0);
		TNT1 AA 0 A_SpawnItemEx("ExplosionParticle", random(19,-19), random(19,-19), random(4,-4), 0, 0, 0, 0, 128, 0);
		TNT1 AAA 0 ; //A_SpawnItemEx("bfg_4_laser_train", random(-8, 8), random(-8, 8), random(-2,2), 0, 0, 0, 0, 128, 0);
		TNT1 A 4;
		TNT2 AAAAA 4 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
	Stop;
}

}

//GreenPlasma_Puff
CLASS acid_bull_et: pb_projectile_base
{ 
Default
{
	+FORCEXYBILLBOARD;
	+BLOODSPLATTER;
	+NOEXTREMEDEATH;
	damage 13;
	damagetype "desintegrate";
	radius 2;
	height 1;
	renderstyle "Add";
	//alpha 0.7
	scale .19;
	speed 100;
	Decal "Scorch";
	Deathsound "Weapons/Demontech/Crash";
}

states
{
	Spawn:
		DB57 AB 1 BRIGHT A_SpawnItem("Green_FlareSmall");
		TNT1 A 0 a_spawnprojectile("GreenTracerSmall", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		DB57 C 1 BRIGHT;
	Loop;

	Xdeath:
		TNT1 A 0 A_SpawnItem("GreenPlasma_Puff_Small");
		TNT1 A 0 a_spawnprojectile("PlasmaParticleSpawner", 0, 0, random(0, 180), 2, random(0, 360));
		TNT1 A 4;
		TNT2 AAA 3 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
	Stop;
		
	Death:
		TNT1 A 0 A_SpawnItem("GreenPlasma_Puff_Small");
		TNT1 A 0 a_spawnprojectile("PlasmaParticleSpawner", 0, 0, random(0, 180), 2, random(0, 360));
		TNT1 A 4;
		TNT2 AAAAA 4 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
		Stop;
	}
}


CLASS HomingSoul : pb_projectile_base//: HolySpirit
{
int User_Counter;
int User_DemonCounter;
Default
{
	Speed 45;
	Height 24;
	Radius 24;
	Damage 0;
	DeathSound "";
	Scale 0.95;
	ProjectileKickback 0;
	PROJECTILE;
	BounceFactor 2.0;
	WallBounceFactor 1;
	BounceCount 25;
	DamageType "Saw";
	//-NOGRAVITY
	+RIPPER;
	+NOBOSSRIP;
	+NOEXTREMEDEATH;
	+BLOODSPLATTER;
	+SKYEXPLODE;
	+SEEKERMISSILE;
	+ScreenSeeker;
	+FORCERADIUSDMG;
	+BOUNCEONWALLS;
	+BOUNCEONFLOORS;
	+BOUNCEONCEILINGS;
	
	//-THRUACTORS
	+ALLOWBOUNCEONACTORS;
	+BOUNCEONACTORS;
	+CANBOUNCEWATER;
	+USEBOUNCESTATE;
	}
	states
	{
	Spawn:
		BLHS A 0 nodelay {User_DemonCounter = 0; User_Counter = 25;}
	SpawnLoop:
		BLHS A 0 A_PlaySound("SpiritSeeker",5,1.0,1);
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS A 1 A_JumpIf(User_Counter <= 0, "Spawn2");
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS B 1 A_JumpIf(User_Counter <= 0, "Spawn2");
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS C 1 A_JumpIf(User_Counter <= 0, "Spawn2");
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS D 1 A_JumpIf(User_Counter <= 0, "Spawn2");
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS E 1 A_JumpIf(User_Counter <= 0, "Spawn2");
		BLHS A 0 A_Explode(35,52,0);
		BLHS A 0 A_SeekerMissile(4, 8, SMF_PRECISE|SMF_CURSPEED);
		BLHS A 0 {User_Counter --;}
		Loop;


	Bounce:
	Bounce.Wall:
	Bounce.Ceiling:
	Bounce.Floor:
		TNT1 A 0;
		Goto SpawnLoop;
		
	Bounce.Actor.Creature:
	Bounce.Actor:
	XDeath:
		BLHS A 0 {User_DemonCounter ++;}
	Goto SpawnLoop;
		
	Spawn2:
		TNT1 A 0
		{
			self.bNOCLIP = true;
			self.bUSEBOUNCESTATE = false;
			self.bBOUNCEONWALLS = false;
			self.bBOUNCEONFLOORS = false;
			self.bBOUNCEONCEILINGS = false;
			self.bBOUNCEONACTORS = false;
			self.bALLOWBOUNCEONACTORS = false;
		}
		
		TNT1 AAAAA 0;
		BLHS A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET);
		BLHS A 0 A_PlaySound("SpiritSeeker",5,1.0,1);
		BLHS A 0 A_Explode(20,32,0);
		BLHS A 0 A_SeekerMissile(4, 8);
		BLHS A 1 ;
		BLHS A 0 A_Explode(20,32,0);
		BLHS A 0 A_SeekerMissile(4, 8);
		BLHS B 1 ;
		BLHS A 0 A_Explode(20,32,0);
		BLHS A 0 A_SeekerMissile(4, 8);
		BLHS C 1;
		BLHS A 0 A_Explode(20,32,0);
		BLHS A 0 A_SeekerMissile(4, 8);
		BLHS D 1 ;
		BLHS A 0 A_Explode(20,32,0);
		BLHS A 0 A_SeekerMissile(4, 8);
		BLHS E 1 ;
		Goto Spawn2+8;
		
	Death:
	Crush:
		TNT1 A 0 A_StopSound(5);
		TNT1 A 0 A_JumpIf(User_DemonCounter < 1, "NoHeal");
		TNT1 A 0 A_GiveToTarget("DemonSoulHeal", User_DemonCounter);
		// TNT1 A 0 A_Playsound("DemonHeal", 0)
		//TNT1 AAAAAAAAAAAAAA 0 A_SpawnItemEx("RailGunTrailSpark", random(-15, 15), random(-15, 15), random(-4,4), 0, 0, 0, 0, 128, 0);
	Stop;
		
	NoHeal:
		TNT1 AAAAAAAA 0 ; //A_SpawnItemEx("bfg_4_laser_train", random(-8, 8), random(-8, 8), random(12,40), 0, 0, 0, 0, 128, 0);
		Stop;
	}
}

CLASS DemonSoulHeal: CustomInventory { //23167
	Default {
	
	Radius 80;
	-COUNTITEM;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.PickupMessage "Your Demon Spirits have granted you health!";
	Inventory.PickupSound "DemonHeal";
	}
	States
	{
	Spawn:
		TNT1 A 80;
		Stop;
		
	Pickup:
 		Stop;
	}
}

// Demon Power Pickups ---------------------------------------------------------------

//low power
CLASS Demonpickup: CustomInventory { 
	Default {
	
	Height 26;
	-COUNTITEM;
	+INVENTORY.ALWAYSPICKUP;
	Inventory.PickupMessage "Lesser demon energy";
	Inventory.PickupSound "demonsoulpickup";
	renderstyle "Translucent";
	Scale 0.28;
	alpha 0.65;
	}
	States
	{
	Spawn:
		TNT1 A 1;
 	Stay:
		MDHP ABCDEFGH 3 bright A_Fadeout(0.001);
		Loop;
		
	ReplaceTraditional:
	ReplaceVanilla:
		TNT1 A 1;
		Stop;
		
	Pickup:
		TNT1 A 0 A_GiveInventory("Demon_powder",10);
		TNT1 A 0 A_GiveInventory("pb_Armor_shard", 1);
		//  TNT1 A 0 A_GiveInventory("Healthplus", 1) - too easy!
		Stop;
	}
}
CLASS Demonpickup2: Demonpickup { 
Default
{
	renderstyle "Translucent";
	alpha 0.70;
	Scale 0.45;
	Inventory.PickupMessage "Greater demon energy";
	}
	States
	{
	Spawn:
		TNT1 A 1;
	Stay:
		MDHP ABCDEFGH 2 bright A_Fadeout(0.001);
		Loop;
		
	Pickup:
		TNT1 A 0 A_GiveInventory("Large_Demon_powder",30);
		TNT1 A 0 A_GiveInventory("pb_Armor_shard", 2);
		TNT1 A 0 A_GiveInventory("Healthplus", 2);
		Stop;
	}
}




// lesser ammo item
CLASS Demon_powder : Ammo
{
Default
{
	Inventory.PickupMessage "Lesser demon energy";
	Inventory.PickupSound "HellPickup";
	Inventory.Amount 20;
	Inventory.MaxAmount 300;
	Inventory.Icon "MDHPH1";
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 600;
	renderstyle "Translucent";
	alpha 0.55;
	+INVENTORY.ALWAYSPICKUP;
}
states
{
	Spawn:
		TNT1 A 1;
		MSP2 AB 4 bright;//A_Fadeout(0.001)
	loop;
}

}

CLASS Large_Demon_powder : Demon_powder
{
Default
{
	Inventory.PickupMessage "Greater demon energy";
	Inventory.Amount 40;
	scale 1.1;
}

states
{
	Spawn:
		TNT1 A 1;
 		MSP1 ABCD 4 bright;
	loop;
}

}

CLASS RedTracerSmall : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	-NoGravity;
	//+LowGravity
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.8;
	RenderStyle "Add";
	Scale 0.035;
	//Speed 2
	Speed 0;
	+NoGravity;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Scale 0.25;
	Alpha 0.6;
	}
	States
	{
	Spawn:
	Death:
		SHOQ A 2 Bright A_FadeOut(0.04);
		TNT1 A 0 A_SpawnItemEx("ExplosionParticle", random(19,-19), random(19,-19), random(4,-4), 0, 0, 0, 0, 128, 0);
		SHOQ B 2 Bright A_FadeOut(0.04);
		SHOQ C 2 Bright A_FadeOut(0.04);
		TNT1 A 0 A_SpawnItemEx("ExplosionParticle", random(19,-19), random(19,-19), random(4,-4), 0, 0, 0, 0, 128, 0);
		SHOQ D 2 Bright A_FadeOut(0.04);
		SHOQ E 2 Bright A_FadeOut(0.04);
		TNT1 A 0 A_SpawnItemEx("ExplosionParticle", random(19,-19), random(19,-19), random(4,-4), 0, 0, 0, 0, 128, 0);
		SHOQ F 2 Bright A_FadeOut(0.04);
		SHOQ G 2 Bright A_FadeOut(0.04);
		TNT1 A 0 ; //A_SpawnItemEx("bfg_4_laser_train", random(19,-19), random(19,-19), random(4,-4), 0, 0, 0, 0, 128, 0);
		Stop;
	}
}

CLASS GreenTracerSmall : ACTOR { 
	Default {
	
	Height 0;
	Radius 0;
	Mass 0;
	+Missile;
	+NoBlockMap;
	-NoGravity;
	//+LowGravity
	+DontSplash;
	+DoomBounce;
	+FORCEXYBILLBOARD;
	BounceFactor 0.2;
	Gravity 0.8;
	RenderStyle "Add";
	Scale 0.035;
	//Speed 2
	Speed 0;
	+NoGravity;
	-DOOMBOUNCE;
	RenderStyle "Add";
	Scale 0.25;
	Alpha 0.6;
	}
	States
	{
	Spawn:
	Death:
		SH0Q ABCDEFG 1 Bright A_FadeOut(0.04);
		Stop;
	}
}

CLASS ShrinkBeam : MageWandMissile { 
	Default {
	
	Speed 25;
	Radius 16;
	Height 16;
	Damage 3;
	Decal "Scorch";
	damagetype "Shrink";
	//-RIPPER
	+NOBOSSRIP;
	-CANNOTPUSH;
	-NODAMAGETHRUST;
	+Bloodlessimpact;
	+NOBLOOD;
	}
	states
	{
	
	Spawn:
		APBX B 1 BRIGHT A_SpawnItem("Green_FlareSmall",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		APBX C 1 BRIGHT A_SpawnItem("Green_FlareSmall",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		APBX D 1 BRIGHT A_SpawnItem("Green_FlareSmall",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		TNT1 A 0 A_SpawnItemEx("GreenFlameTrails", 0, 0, 0, 0, 0, 0, 0, 128);
		loop;
		
	Death:
		TNT1 A 0 A_Explode(30,70,1);
		TNT1 A 0 A_Explode(10,90,1);
		APBX B 1 bright A_SpawnItem("Green_Flare",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		APBX C 1 bright A_SpawnItem("Green_Flare",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		APBX D 1 bright A_SpawnItem("Green_Flare",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		APBX E 1 bright A_SpawnItem("Green_Flare",0,0);
		TNT1 A 0 ; //A_SpawnItemEx("GreenTrailSparks", random(5,-5), random(5,-5), random(5,-5), 0, 0, 0, 0, 128, 0);
		//TNT1 A 0 A_SpawnItem("BFGAltShockWave",0,0);
	stop;
}
}

CLASS CausticGreenPlasmaBall : pb_projectile_base { 
Default
{
	Radius 10;
	Height 16;
	Speed 30;
	FastSpeed 30;
	Projectile;
	+RANDOMIZE;
	+FORCEXYBILLBOARD;
	+THRUGHOST;
	Damage 120;
	RenderStyle "Add";
	Alpha 0.9;
	Scale 1.45;
	SeeSound "baron/attack";
	DeathSound "belphegor/missile";
	Decal "Scorch";
	DamageType "Disintegrate";
	
	}
	States
	{
	Spawn:
		TNT1 A 0 A_SpawnItem("Green_Flare22",0,0);
		FRPG K 1 BRIGHT A_SpawnItemEx("GreenFlameTrails", 0, 0, 0, 0, 0, 0, 0, 128);
		Loop;
		
	Death:
		BFE1 A 0 A_PlaySound("FAREXPL", 3);
		EXPL A 0 Radius_Quake(2, 54, 0, 15, 0);
		BFE1 A 0 Bright A_Explode(27, 135, 1);
		TNT1 A 0 A_SpawnItem("GreenExplosionMushroom", 0);
		//TNT1 AAAAAAAAA 0 a_spawnprojectile("GreenExplosionFire", 2, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 0 A_StopSound(6);
		TNT1 A 0 A_PlaySound("barlp1",3);
		TNT1 A 0 A_SpawnItem("ACIDFOGSHRINK", 0, 0);
		EXPL AA 0 a_spawnprojectile("CasingSmoke", 0, 0, random(0, 360), 2, random(0, 360));
		TNT1 A 19 a_spawnprojectile("ExplosionSmoke", 1, 0, random(0, 360), 2, random(0, 160));
		TNT1 BCDEF 2 Bright;
		TNT1 AAAAAAA 2 a_spawnprojectile("CasingSmoke", 2, 0, random(0, 360), 2, random(0, 360));
		Stop;
	}
}

CLASS ACIDFOGSHRINK : pb_projectile_base { 
Default
{
	Radius 2;
	Height 1;
	//Alpha .8
	Decal "Scorch";
	//RenderStyle "Translucent"
	Damage 5;
	DamageType "Disintegrate";
	Scale 1.32;
	Speed 0;
	Gravity 0;
	+NOBLOCKMAP;
	+NOTELEPORT;
	+NOEXTREMEDEATH;
	-EXTREMEDEATH;
	+FORCEXYBILLBOARD;
	+ALLOWPARTICLES;
	+CLIENTSIDEONLY;
	+DONTSPLASH;
	+PAINLESS;
	-CAUSEPAIN;
	-FORCEPAIN;
	}
	States
	{
	Spawn:
		TNT1 A 0 A_SpawnItemEx("PlasmaParticleSpawner", 0, 0, 0, 6, 6, 6, 0, 128);
		TNT1 A 0 A_Explode( 50, 190 );
		//TNT1 AAAAAAAA 0 A_SpawnItemEx("GreenCloudLarge", random(3,-3), random(3,-3), random(3,-3), random(1,-1), random(1,-1), 0, 0, SXF_NOCHECKPOSITION, 0);
		//TNT1 AAAAAAAA 0 A_SpawnItemEx("GreenCloudMedium", random(3,-3), random(3,-3), random(3,-3), random(1,-1), random(1,-1), 0, 0, SXF_NOCHECKPOSITION, 0);
		TNT1 AAAAAAAA 0 A_SpawnItemEx("GreenCloudMediumShrink", random(3,-3), random(3,-3), random(3,-3), random(1,-1), random(1,-1), 0, 0, SXF_NOCHECKPOSITION, 0);
		TNT1 AAAAAAAA 0 A_SpawnItemEx("GreenCloudSmallShrink", random(3,-3), random(3,-3), random(3,-3), random(1,-1), random(1,-1), 0, 0, SXF_NOCHECKPOSITION, 0);
		TNT1 AAAAAAAAAAAA 0 ; //A_SpawnItemEx("GreenTrailSparks", random(10,-10), random(10,-10), random(10,-10), random(-2, 2), random(-2, 2), random(-2, 2), 0, SXF_NOCHECKPOSITION, 0);
		
		TNT1 A 0 A_SpawnItem("NewAcidExplosionSmoke", 0, 0);
		TNT1 AAAA 2 BRIGHT Light("BARONBALL") A_SpawnItem("Green_Flare",0,20);
		Goto Death;
		
	Death:
		TNT1 A 0 A_SpawnItemEx("PlasmaParticleSpawner", 0, 0, 0, 6, 6, 6, 0, 128);
		Stop;
	}
}

CLASS GreenCloudMediumShrink : actor { 
	Default {
	
	Scale 1.3;
	Translation "0:255=%[0,0,0]:[0,1,0]";
	DamageType "Shrink";
	}
	States
	{
	Spawn:
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 8, 100 );
	GTXL ABCDEFGHIJ 1  A_FadeOut( 0.10);
	Stop;
}
}

CLASS GreenCloudSmallShrink : actor { 
	Default {
	
	Scale 1.05;
Translation "0:255=%[0,0,0]:[0,1,0]";
	DamageType "Shrink";
	}
	States
	{
	
Spawn:
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL ABCDEFGHIJ 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL JIHGFEDCBA 1;
	TNT1 A 0 A_Explode( 6, 100 );
	GTXL ABCDEFGHIJ 1  A_FadeOut( 0.10);
	Stop;
}
}

//////////////////////////////////////////Possession

// Homing ghost projectile fired upon the item's use ----------------------------------------------

CLASS PossessionGhost : ACTOR { 
	Default {
 
  Alpha 0.75;
  Height 2;
  MaxTargetRange 32;
  Projectile;
  Radius 2;
  RenderStyle "Add";
  SeeSound "skull/melee";
  Speed 25;
  +BRIGHT;
  +SCREENSEEKER;
  +SEEKERMISSILE;
	+thRUACTORS;
	}
	const PSGH_JITC_DISTANCE = 20;// A_JumpIfTracerCloser distance parameter
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_GiveInventory("PossessionGhostRoutine", 1);
		TNT1 A 0 A_SeekerMissile(4,8);
		BLHS A 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS A 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS B 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS B 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS C 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS C 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS D 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS D 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS E 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		TNT1 A 0 A_GiveInventory("PossessionGhostRoutine", 1);
		BLHS E 1 A_JumpIfTracerCloser(PSGH_JITC_DISTANCE, "Possess");
		TNT1 A 0 A_SeekerMissile(4,8);
		Loop;
	Possess:
		TNT1 A 0 A_GiveInventory("PossessMonster", 1 , AAPTR_TRACER);
		Stop;
	Death:
		stop;
	}
}

CLASS PossessionGhostTrail : ACTOR { 
	Default {
	
	Alpha 0.5;
	RenderStyle "Add";
	+NOINTERACTION;
	}
	States
	{
	Spawn:
		TNT1 A 2;
		BLHS ABCDE 1 Bright A_FadeOut(0.08);
		Wait;
	}
}

CLASS PossessionGhostRoutine : CustomInventory { 
	Default {
	
	}
	States
	{
	Pickup:
		TNT1 A 0 A_SeekerMissile(5.0, 10.0, SMF_LOOK, 256);
		TNT1 A 0 A_SpawnItemEx("PossessionGhostTrail", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
		Stop;
	}
}

// Possession state indicators(the things that spawn on top of the possessed monster) ------------

CLASS PossessionWarperA : ACTOR { 
	Default {
	
	RenderStyle "Add";
	Scale 0.75;
	+ISMONSTER;
	+NOINTERACTION;
	
	
	}
	int user_angle;
	int user_xoffset;
	int user_yoffset;
	int user_zoffset;
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {user_xoffset = 32;}
	SetVars:
		TNT1 A 0 {user_yoffset = 0;
 		user_angle = 0;}
	AnimInit:
		TNT1 A 1 A_Warp(AAPTR_MASTER, user_xoffset, user_yoffset, user_zoffset, user_angle,
		WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_ABSOLUTEANGLE);
	AnimLoop:
		MSP2 A 1 Bright A_Warp(AAPTR_MASTER, user_xoffset, user_yoffset, user_zoffset, user_angle,
		WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_ABSOLUTEANGLE);
		TNT1 A 0 {user_angle += 8;}
		TNT1 A 0 A_SpawnItemEx("PossessionWarperTrail", 0, 0, 0, 0, 0, 0, 0,
		SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
 		MSP2 B 1;
		Loop;
	Destroy:
		MSP2 A 1 Bright A_Warp(AAPTR_MASTER, user_xoffset, user_yoffset, user_zoffset, user_angle,
		WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE|WARPF_ABSOLUTEANGLE);
		TNT1 A 0 {user_angle += 8;}
		TNT1 A 0 A_SpawnItemEx("PossessionWarperTrail", 0, 0, 0, 0, 0, 0, 0,
		SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION);
		TNT1 A 0 A_FadeOut(0.02);
		Loop;
	}
}

CLASS PossessionWarperB : PossessionWarperA { 
	Default {
	
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay {user_xoffset = -32;}
		Goto SetVars;
	}
}

CLASS PossessionWarperTrail : ACTOR { 
	Default {
	
	RenderStyle "Add";
	Scale 0.3;
	+NOINTERACTION;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		POBL B 1 Bright A_FadeOut(0.15);
		Wait;
	}
}

// Possession setup "scripts" ---------------------------------------------------------------------

CLASS PossessMonster : CustomInventory { 
	Default {
	
	}
	States
	{
	Pickup: // "Forces" the to-be-possessed monster to enter the Possession state
 		Stop;
	}
}

CLASS UnSkullFly : CustomInventory { 
	States
	{
	Pickup:
		// The Lost Soul or any monster that charges at its target using A_SkullAttack or variant of
		// the function gets the following exectued on it in case it was charging at the moment when it
		// was struck by the possession projectile.
		TNT1 A 0 {self.bSKULLFLY = false;}// Free the monster from the shackles of SKULLFLY...
		TNT1 A 0 A_Stop;// ... and stop it in its tracks.
		Stop;
	}
}

// Effect timer
CLASS PossessionEffect : Powerup
{ 
	Default {
	Powerup.Duration -45;
	}
	States
	{
	Pickup:
	TNT1 A 0 A_GiveInventory("PossessionEffect", 1);
	TNT1 A 0 A_SpawnItemEx("PossessionWarperA", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER|SXF_NOCHECKPOSITION);
	TNT1 A 0 A_SpawnItemEx("PossessionWarperB", 0, 0, 0, 0, 0, 0, 0, SXF_SETMASTER|SXF_NOCHECKPOSITION);
	Stop;
}
}

CLASS InsanityRifle : digimon_tech_rifle { 
	Default {
	}
}

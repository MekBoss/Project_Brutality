// --------------------------------------------------------------------------
//
// Nailgun
//	
// --------------------------------------------------------------------------
CLASS need_ler : weapon_slot_4_proto_class
{
enum last_shot_barrel
{
	left = 0,
	right = 1
};

last_shot_barrel actual_last_shot_barrel;

Default
{
	Weapon.SlotNumber 4;
	Weapon.SelectionOrder 2;
	Weapon.slotpriority 0.1;

	Weapon.AmmoType1 "pb_clip";
	Weapon.AmmoType2 "nails";
	Weapon.AmmoGive 30;
	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	+FLOORCLIP;
	+DONTGIB;
	+WEAPON.NOAUTOAIM;
	Inventory.PickupSound "CBOXPKUP";
	Inventory.PickupMessage "You got the UAC240 Heavy Nailgun Gun!";
	Obituary "%o was became a leaking piece of meat by %k's heavy nailgun gun";
	AttackSound "none";
	Tag "Needle gun";
	Scale 0.91;
}

States
{
	Spawn:
		HMGN A -1;
	Stop;
		
	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand");
		TNT1 A 1 A_Raise(90);
	Wait;

	Ready:
/*		TNT1 A 0 A_JumpIfInventory("RespectNailgun", 1, "SelectAnimation");
	WeaponRespect:
		TNT1 A 0
		{
			A_SetCrosshair(5);
			A_PlaySound("weapons/nailgun/up", 0);
			//A_GiveInventory("RespectNailgun");
		}
		N0N0 ABCDEFGHIJ 1 A_weaponready();
		N0N0 KLMNOPQRSTU 1
		{
			A_Setroll(roll-0.5);
			A_weaponready();
		}
		tnt1 A 0 A_PlaySound("weapons/nailgun/inspect1", 0);
		N0N0 VWXYZ 1 {
			A_Setroll(roll+0.5);
			A_weaponready();
		}
		N0N1 ABCDEF 1 {
			A_Setroll(roll+0.5);
			A_weaponready();
		}
		N0N1 GHIJKLMNOPQRSTUVWXYZ 1 A_weaponready();
		N0N2 ABCDEFGH 1 A_weaponready();
		TNT1 A 0 A_PlaySound("IronSights", 0);
		N0N2 IJKLMNO 1 {
			A_Setroll(roll+0.4);
			A_weaponready();
		}
		N0N2 PQRSTUV 1 {
			A_Setroll(roll-0.4);
			A_weaponready();
		}
		N0N2 WX 1 A_weaponready();
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect2", 0);
		N0N2 YZ 1 A_weaponready();
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect3", 0);
		N0N3 ABCDEFGHIJKLMNOPQ 1 A_weaponready();
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect4", 0);
		N0N3 RSTUVWXYZ 1 A_weaponready();
		N0N4 ABCDEFGH 1 {
			A_Setroll(roll-0.4);
			A_weaponready();
		}
		N0N4 IJKLMNOPQRSTUVWX 1 {
			A_Setroll(roll+0.2);
			A_weaponready();
		}
		N0N4 YZ 1;
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect8", 0);
		N0N5 ABCDE 1 {
			A_Setroll(roll+0.2);
			A_weaponready();
		}
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect4");
		N0N5 FGHIJKLMNO 1 {
			A_Setroll(roll+0.2);
			A_weaponready();
		}
		N0N5 PQ 1 {
			A_Setroll(roll-0.2);
			A_weaponready();
		}
		N0N5 RS 1 {
			A_Setroll(roll-0.2);
			A_weaponready();
		}
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect6", 0);
		N0N5 TUVWXYZ 1 {
			A_Setroll(roll-0.2);
			A_weaponready();
		}
		N0N6 AB 1 {
			A_Setroll(roll-0.2);
			A_weaponready();
		}
		N0N6 CD 1;
		N0N6 EFGHIJ 1 {
			A_Setroll(roll-0.2);
			A_weaponready();
		}
		N0N6 KLMNOPQRSTUV 1 {
			A_Setroll(roll+0.2);
			A_weaponready();
		}
		N0N6 WXYZ 1 {
			A_Setroll(roll-0.3);
			A_weaponready();
		}
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect7", 0);
		N0N7 ABCDEFGHIJKLMNOPQRST 1 A_weaponready();
	Goto ready_loop;
	SelectAnimation:*/
		N1N0 ABCD 1;
		TNT1 A 0 {
			A_SetCrosshair(0);
		}
	ready_loop:
		N1N0 D 1 a_weaponready(WRF_ALLOWRELOAD);
	Loop;

	Fire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetCrosshair(0);
		}
		TNT1 A 0 A_JumpIfInventory("nails",1,1);
	Goto Reload;
		TNT1 A 0
		{
			A_PlaySound("weapons/nailgun/fireloop", 4);
			if(invoker.actual_last_shot_barrel == right)
			{invoker.set_weapon_state("left_barrel_shoot");}
		}
	RightSingleFire:
		N2N0 A 1 {
			invoker.actual_last_shot_barrel = right;
			A_Fireprojectile("MGNail", 0, 0, 2, -2, 0, 0);;
			A_Fireprojectile("GunFireSmoke", 0, 0, 2, -8, 0, 0);;
			A_Fireprojectile("Alerter", 0, 0, 0, 0);;
			A_Takeinventory("nails",1);
			A_ZoomFactor(0.995);

			int force = self.CountInv("PowerStrength");
			A_SetPitch(pitch-0.26 * (1 + force) );
			A_SetAngle(angle-0.06 * (1 + force) );
		}
		N2N0 B 1 A_ZoomFactor(1.0);
		TNT1 A 0 A_Refire("Hold");
		TNT1 A 0 A_PlaySound("weapons/nailgun/fireStop",4, False);
		N2N0 CDEF 1;
	Goto ready_loop;

	left_barrel_shoot:
		N2N0 G 1 {
			invoker.actual_last_shot_barrel = left;
			A_Fireprojectile("MGNail", 0, 0, -2, -2, 0, 0);;
			A_Fireprojectile("GunFireSmoke", 0, 0, -2, -8, 0, 0);;
			A_Fireprojectile("Alerter", 0, 0, 0, 0);;
			A_Takeinventory("nails",1);
			A_ZoomFactor(0.995);

			int force = self.CountInv("PowerStrength");
			A_SetPitch(pitch-0.26 * (1 + force) );
			A_SetAngle(angle-0.06 * (1 + force) );
		}
		N2N0 H 1 A_ZoomFactor(1.0);
		TNT1 A 0 A_Refire("Hold");
		TNT1 A 0 A_PlaySound("weapons/nailgun/fireStop",4, False);
		N2N0 IJKL 1;
	Goto ready_loop;
	
	
	Hold:
		TNT1 A 0 A_JumpIfInventory("nails",1,1);
	Goto Reload;
		TNT1 A 0 {
			A_PlaySound("weapons/nailgun/fireloop", 4);
			if(invoker.actual_last_shot_barrel == right)
			{invoker.set_weapon_state("LeftHoldFire"); return;}
		}
	RightHoldFire:
		N2N1 A 1 {
			invoker.actual_last_shot_barrel = right;
			A_Fireprojectile("MGNail", 0, 0, 2, -2, 0, 0);;
			A_Fireprojectile("GunFireSmoke", 0, 0, 2, -8, 0, 0);;
			A_Fireprojectile("Alerter", 0, 0, 0, 0);;
			//	A_PlaySound("Weapons/NailMGFire",4);
			A_Takeinventory("nails",1);
			A_ZoomFactor(0.995);

			int force = self.CountInv("PowerStrength");
			A_SetPitch(pitch-0.26 * (1 + force) );
			A_SetAngle(angle-0.06 * (1 + force) );
		}
		N2N1 B 1 A_ZoomFactor(1.0);
		N2N1 C 1;
		TNT1 A 0 A_Refire("Hold");
		TNT1 A 0 A_PlaySound("weapons/nailgun/fireStop",4, False);
		N2N0 DEF 1;
	Goto ready_loop;
	LeftHoldFire:
		N2N1 D 1 {
			invoker.actual_last_shot_barrel = left;
			A_Fireprojectile("MGNail", 0, 0, -2, -2, 0, 0);;
			A_Fireprojectile("GunFireSmoke", 0, 0, -2, -8, 0, 0);;
			A_Fireprojectile("Alerter", 0, 0, 0, 0);;
			A_Takeinventory("nails",1);
			A_ZoomFactor(0.995);

			int force = self.CountInv("PowerStrength");
			A_SetPitch(pitch-0.26 * (1 + force) );
			A_SetAngle(angle-0.06 * (1 + force) );
		}
		N2N1 E 1 A_ZoomFactor(1.0);
		N2N1 F 1;
		TNT1 A 0 A_Refire("Hold");
		TNT1 A 0 A_PlaySound("weapons/nailgun/fireStop",4, False);
		N2N0 JKL 1;
	Goto ready_loop;


	Reload:
		TNT1 A 0 A_StopSound(4);
		TNT1 A 0 A_JumpIfInventory("nails",120,"ready_loop");
		TNT1 A 0 A_JumpIfInventory("pb_clip",1,1);
	Goto NoAmmo;
		TNT1 A 0 {
			A_SetCrosshair(5);
			A_PlaySound("8HAINAMO", 0);
		}
		N3N0 ABCDEFG 1 A_SetRoll(roll-0.2);	
		N3N0 HI 1;
		N3N0 JKLMNOPQ 1 A_SetRoll(roll-0.1);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect4", 0);
		N3N0 RSTUVWXY 1 A_SetRoll(roll+0.1);
		N3N0 Z 1;
		N3N1 ABCDE 1 A_SetRoll(roll+0.2);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect8", 0);
		N3N1 FG 1 A_SetRoll(roll+0.2);
		N3N1 H 1;
		N3N1 IJKLMNOPQRST 1 A_SetRoll(roll+0.2);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect3", 0);
		N3N1 UVWX 1 A_SetRoll(roll-0.4);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect6", 0);
		N3N1 YZ 1 A_SetRoll(roll-0.4);
		N3N2 ABCDEFGHIJKLM 1 A_SetRoll(roll-0.3);
		N3N2 NOPQRSTUVWXYZ 1 A_SetRoll(roll+0.3);
		N3N3 ABCDEF 1 A_SetRoll(roll-0.1);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect4", 0);
		N3N3 GHIJKL 1 A_SetRoll(roll+0.1);
		TNT1 A 0 A_PlaySound("weapons/nailgun/inspect7", 0);
		N3N3 MNOPQRSTU 1;
		tnt1 a 0 {invoker.reload_weapon_magazine("nails", "pb_clip"); }
	Goto ready_loop;


























	Deselect:
		tnt1 a 0
		{
			A_StopSound(6);
			A_StopSound(4);
			A_PlaySound("weapons/changing", 1);
		}
		NLS4 DCBA 1;
		TNT1 A 0 A_Lower(80);
	Wait;



	WeaponSpecial:
		TNT1 A 0 A_StopSound(6);
		Goto ready_loop;
		
		
		
	ReadyUnloaded:
		TNT1 AAAAAAAAAAAAAAAA 0;
		NLG4 E 1 A_weaponready();
		Goto ReadyUnloaded+11;
		

		
		
	NoAmmo:
		NLG4 E 10 A_PlaySound("weapons/empty");
	Goto Ready_loop;
		
		
		//NailGun Fire

	
	
	
		TNT1 A 0 A_JumpIfInventory("nails",2,2);
	Goto Reload;
		TNT1 A 0 A_PlaySound("Weapons/NailMGFire",4);
		NLF4 A 1 BRIGHT A_Fireprojectile("MGNail", 0, 0, -2, 0, 0, 0);
		TNT1 A 0 A_Jump(256, 2);
		NLF4 A 1 BRIGHT A_Fireprojectile("HotMGNail", 0, 0, -2, 0, 0, 0);
		TNT1 A 0
		{
			A_Fireprojectile("YellowFlareSpawn",0,0,-3,0);
			A_Fireprojectile("ShakeYourAss", 0, 0, 0, 0);
			A_Fireprojectile("Alerter", 0, 0, 0, 0);
			A_Takeinventory("nails",1);
			A_Fireprojectile("GunFireSmoke", 0, 0, -2, 1, 0, 0);
			A_SetAngle(frandom(0.56, 0.58) + Angle);
			A_SetPitch(pitch - 0.30);
		}
		NLF4 B 2 BRIGHT  A_ZoomFactor(0.99);
		NLG4 A 1  A_ZoomFactor(0.98);
		TNT1 A 0 A_PlaySound("Weapons/NailMGFire",5);
		
		NLF4 C 1 BRIGHT A_Fireprojectile("MGNail", 0, 0, 2, 0, 0, 0);
		TNT1 A 0 A_Jump(256, 2);
		NLF4 C 1 BRIGHT A_Fireprojectile("HotMGNail", 0, 0, 2, 0, 0, 0);
		TNT1 A 0;
		
		TNT1 A 0 A_Fireprojectile("YellowFlareSpawn",0,0,3,0);
		TNT1 A 0 A_Fireprojectile("ShakeYourAss", 0, 0, 0, 0);
		TNT1 A 0 A_Takeinventory("nails",1);
		TNT1 A 0 A_Fireprojectile("GunFireSmoke", 0, 0, 2, 1, 0, 0);
		TNT1 A 0 A_SetAngle(frandom(0.56, 0.58) + Angle);
		TNT1 A 0 A_SetPitch(pitch - 0.30);
		NLF4 D 2 BRIGHT;
		TNT1 A 0 A_ZoomFactor(0.99);
		NLG4 A 1 A_Refire("Hold2");
		TNT1 A 0 A_PlaySound("DIBSTOP",3);
		TNT1 A 0 A_ZoomFactor(1.0);
	Goto ready_loop;
	

		
		////////////////////////////////////////Unloading	
		
	AlreadyUnloaded:
		Goto Ready+6;
		
	Unload:
		NLG4 A 1 A_WeaponReady;
		TNT1 A 0 A_ZoomFactor(1.0);
		TNT1 A 0 A_JumpIfInventory("nails",1,3);
		Goto NoAmmo;
		TNT1 AAA 0;
		NLS4 DC 2;
		NLR4 ABCDEFGHII 1;
		TNT1 A 0 A_Playsound("CBOXPKUP", 3);
		NLR4 JJKKLMNOPQ 1;
		TNT1 A 0 A_Fireprojectile("EmptyASGDrum",-5,0,8,-4);
		NLR4 R 12;
		//HMAR TUVWX 2
	RemoveBullets:
		TNT1 AAAA 0;
		TNT1 A 0 A_JumpIfInventory("nails",1,3);
		Goto FinishUnload;
		TNT1 AAAAAA 0;
		TNT1 A 0 A_Takeinventory("nails",1);
		TNT1 A 0 A_Giveinventory("pb_clip",1);
	Goto RemoveBullets;
		
	FInishUnload:
		NLG4 E 1;
		TNT1 A 0 A_PlaySound("DryFire");
		Goto ReadyUnloaded+6;
		
		//////////////////////////////////////////Unloading
		
	FlashKicking:
		NLS4 DCBA 1;
		NLS4 E 6;
		NLS4 ABCD 1;
		NLG4 AAAA 1;
		Stop;
		
	FlashAirKicking:
		NLS4 DCBA 1;
		NLS4 E 6;
		NLS4 ABCD 1;
		NLG4 AAAA 1;
		Stop;
		
	FlashSlideKicking:
		NLS4 DC 2;
		NLS4 BAAEEEEEEAA 2 ;
		Stop;
		
		
	FlashSlideKickingStop:
		NLS4 BBCCD 1;
		NLG4 A 1;
		Stop;
		
	FlashPunching:
		NLS4 DCBA 1;
		NLS4 E 6;
		NLS4 ABCD 1;
		NLG4 AAAA 1;
		Stop;
		
	}
}

CLASS nails : Ammo { 
	Default {
	
	Inventory.Amount 0;
	Inventory.MaxAmount 120;
	Ammo.BackpackAmount 0;
	Ammo.BackpackMaxAmount 120;
	Inventory.Icon "HMGNA0";
	}
}


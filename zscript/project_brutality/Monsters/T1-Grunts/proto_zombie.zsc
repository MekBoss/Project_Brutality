class proto_zombieman_class : pb_monster_base
{
//exactly what it says
int ammo_amount, max_magazine_size;

property ammo_amount : ammo_amount;
property max_magazine_size : max_magazine_size;

int awareness;

default
{
	Height 54; //44+18
	pb_monster_base.headshot_multiplier 3;
	pb_monster_base.head_starting_position 48;
	pb_monster_base.legs_height_max 10;
	
	proto_zombieman_class.ammo_amount 0;
	proto_zombieman_class.max_magazine_size 0;
}

void pb_check_reloading(statelabel state_name = null)
{
	if(self.ammo_amount <= 0) {self.setstatelabel(state_name);}
}

states
{
	Death.Blackhole:
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_NoBlocking();
		TNT1 A 0 A_PlaySound("redburn",6,1,1);
		TNT1 AAAAAAAAAAA 0 A_SpawnItemEx("PurpleTrailSparks", 0, 0, 27, 0, 0, 0, 0, 128);
		ID52 ABCDEFGHIJ 4 A_SpawnItemEx("PurpleTrailSparks", 0, 0, 0, 6, 0, 0, 0, 128);
		TNT1 A 0 A_StopSound(2);
	stop;
}


}




















class monsters_hand_grenade : pb_projectile_base
{
states
{
	spawn:
		tnt1 a 1 {console.printf("enemy grenade dont work for now");}
	stop;
}

}

class MonsterRiotTracer : pb_projectile_base
{
states
{
	spawn:
		tnt1 a 10 {console.printf("plug for MonsterRiotTracer spawned");}
	stop;
}

}

class FallingHeight : inventory {}
class IsDown : inventory {}
class Enraged : inventory {}
class NoZombieGrenade : inventory {}
class SKZombieman : inventory {}
class TypeZombieMan : inventory {}
class ZombiemanAmmo : inventory {default{inventory.maxamount 100;} }
class SKHelmetZombie1 : inventory {}
class EnemyMemory : inventory {default{inventory.maxamount 100;} }
class ZombieManGrenadeCount : inventory {default{inventory.maxamount 100;} }
Actor Pumping : Inventory
{
Inventory.MaxAmount 1
}

Actor HasSlugs : Inventory
{
Inventory.MaxAmount 1
}

Actor HasDragonBreath : Inventory
{
Inventory.MaxAmount 1
}

Actor DragonBreathUpgrade : Inventory
{
Inventory.MaxAmount 1
}

ACTOR IsCocking : Inventory
{
Inventory.MaxAmount 1
}

Actor ShotgunWasEmpty : Inventory
{
inventory.maxamount 1
}

Actor PBPumpShotgunWasEmpty : Inventory
{
inventory.maxamount 1
}

Actor PBPumpShotgunHasUnloaded: Inventory
{
Inventory.maxamount 1
}

Actor DragonBreathShellsUpgrade: Custominventory
{
//$Category Ammunition
	Game Doom
	SpawnID 9320
	Height 24
	//-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	+COUNTITEM
	Inventory.Pickupsound "misc/shellbox_PickUp"
	Inventory.PickupMessage "You got the Dragon's Breath Shell Upgrade!!!"
	States
	{
	Spawn:
		DHEL ABCDEDCB 2 BRIGHT Light("WeaponUpgradeSpawner")
		Loop
	
    Pickup:
	  TNT1 AA 0
	  {
	   A_GiveInventory("DragonBreathUpgrade", 1);
	   A_GiveInventory("NewShell", 20);
	  }
      Stop
	}
}

Actor DragonBreath
{
	Projectile
	+RANDOMIZE
+FORCEXYBILLBOARD
+RIPPER
+NOEXTREMEDEATH
damage 5
radius 1
height 1
speed 40
renderstyle ADD
alpha 0.9
scale .15
    DamageType Fire
	SeeSound "Afrit/Hellfire"
    Decal "SmallerScorch"
states
	{
	Spawn:
	TNT1 A 0 A_Playsound("Afrit/Hellfire")
	TNT1 A 0 A_Explode(21, 66, 0)
	TNT1 AAAA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	EXPL A 0 A_SpawnItemEx ("ExplosionParticleSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	EXPL AAAAAAAAAAA 0 A_CustomMissile ("ShotgunParticles", 6, 0, random (0, 360), 2, random (0, 90))//ShotgunParticles
	TNT1 A 0 A_Jump(76, 2, 3)
	TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece1", random (-15, 15), random (-15, 15))
	TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece2", random (-35, 35), random (-35, 35))
	TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece3", random (-45, 45), random (-45, 35))
	TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (0, 360))
    TNT1 A 0 A_SpawnItemEx ("RicoChet",0,0,-5,0,0,0,0,SXF_NOCHECKPOSITION,0)
	Stop
Death:
    Stop
XDeath:
TNT1 A 0
Stop
	}
}

ACTOR DragonsBreathTracer: FastProjectile
{
	Projectile
	+RANDOMIZE
+FORCEXYBILLBOARD
+DONTSPLASH
+NOEXTREMEDEATH
Damagetype Shotgun
Damage 7
PoisonDamageType Fire
PoisonDamage 7
+ADDITIVEPOISONDURATION
radius 2
height 2
speed 80
Gravity 0.4
renderstyle ADD
alpha 0.95
scale 0.45
    Decal "SmallerScorch"
states
	{
	Spawn:
		DBAC A 3 BRIGHT
		TNT1 A 0 A_SpawnItemEx("ShotgunParticles", random(8,-8), random(8,-8), random(8,-8), 0, 0, 0, 0, 128, 0)
		TNT1 A 0 A_SpawnItemEx("ExplosionParticleVerySlow", random(8,-8), random(8,-8), random(19,-19), 0, 0, 0, 0, 128, 0)
		Loop
Death:
XDeath:
	TNT1 A 0 
	{
	A_Explode(5, 30, 0);
	A_Playsound("ricochet/hit");
    A_SpawnItemEx ("DragonBreath",0,0,1,0,0,0,0,SXF_NOCHECKPOSITION,0);
	}
    Stop
	}
}

/*---------------------------------------------------------------------------

   12 Gauge Pump Shotgun

-----------------------------------------------------------------------------*/

ACTOR Shot_Gun : PB_Weapon Replaces Shotgun
{
	SpawnID 9300
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	+FLOORCLIP
	+DONTGIB
	Game Doom
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 4
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "NewShell"
	Weapon.AmmoType2 "ShotgunAmmo"
	Inventory.PickupMessage "You got the Pump Shotgun! (Slot 3)"
    Inventory.PickupSound "SHOTPICK"
	Obituary "%o sucked %k's Shotgun"
    AttackSound "None"
	Tag "Shotgun"
    +WEAPON.NOALERT
    +WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	Scale 1.15
	States
	{
	
	NoAmmo:
		TNT1 A 0
		{
		A_PlaySound("weapons/empty");
		A_TakeInventory("Zoomed", 1);
		A_ZoomFactor(1.0);
		A_TakeInventory("ADSmode", 1);
		A_TakeInventory("Reloading", 1);
		}
		Goto Ready3
		
	Ready:
		TNT1 AA 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_JumpIfInventory("Shot_Mag",1,"Select") 
		SHSS ABCD 1
        TNT1 A 0 A_PlaySound("weapons/sgmvpump")
	Ready3:
	    TNT1 A 0
		SHTG A 1	
			{
			    if (CountInv("HasSlugs") >= 1 ) { A_SetWeaponSprite("SHTS"); }
				if (CountInv("HasDragonBreath") >= 1 ) { A_SetWeaponSprite("SHTD"); }
				A_SetCrosshair(0);
				return A_DoPBWeaponAction;
			}
		Loop
			 
	Ready2:
	    TNT1 A 0
		SHT8 A 1 		
			{
				if (CountInv("HasSlugs") >= 1 ) { A_SetWeaponSprite("SHT6"); }
				if (CountInv("HasDragonBreath") >= 1 ) { A_SetWeaponSprite("SHT4"); }
				return A_DoPBWeaponAction;
			}
		Loop
				
	WeaponSpecial:
		TNT1 AAAAA 0
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SwitchToDragonBreath")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath", 1, "SwitchToBuckshot")
		TNT1 A 0 
		{
		A_Print("Slug Shells Loaded");
		A_Takeinventory("GoWeaponSpecialAbility",3);
        A_GiveInventory("HasSlugs");
		}
		Goto AlternateWeaponSpecialAnimationSwitchToSlugs
		
	SwitchToDragonBreath:
		TNT1 AAAAA 0
		TNT1 A 0 A_JumpIfInventory("DragonBreathUpgrade", 1, 1)
		Goto SwitchToBuckshot
		TNT1 AA 0
		{ 
		A_Print("Dragon's Breath Shells Loaded");
		A_Takeinventory("GoWeaponSpecialAbility",3); 
		A_Takeinventory("HasSlugs", 1); 
		A_GiveInventory("HasDragonBreath");
		}
		Goto AlternateWeaponSpecialAnimationSwitchToDB
				
	SwitchToBuckshot:
		TNT1 AAAAA 0
		TNT1 A 0 
		{
		A_Print("Buckshot Shells Loaded");
		A_Takeinventory("GoWeaponSpecialAbility",1);
		A_Takeinventory("HasSlugs", 1);
		A_Takeinventory("HasDragonBreath",1);
		}
		Goto AlternateWeaponSpecialAnimationSwitchToBuckshot
	
  AlternateWeaponSpecialAnimationSwitchToSlugs:
	TNT1 A 0
	SHZA A 1 
	SHTZ ZYXTSRQPONMLK 1 
	SHTZ A 1
  SlugAltEquip:
	TNT1 A 0
	SHZA BCDEFGHIJKLM 1
	SHTS A 1
	Goto Ready3
  AlternateWeaponSpecialAnimationSwitchToDB:
	TNT1 A 0
	SHZA MLK 1
	SHTZ X 1
	SHZA IHGFEDB 1
	SHTZ A 1
  DBAltEquip:
    TNT1 A 0
	SHZA NOPQRSTUVWXY 1
	SHTD A 1
	Goto Ready3
  AlternateWeaponSpecialAnimationSwitchToBuckshot:
    TNT1 A 0
	SHZA YXW 1
	SHTZ X 1
	SHZA UTSRQPON 1
	SHTZ A 1
  ReequipBuckShot:
    TNT1 A 0
	SHTZ KLMNOPQRSTWXYZ 1
	SHTG A 1
	Goto Ready3
	
	Deselect:
		TNT1 A 0
		 {
		 A_Takeinventory("Unloading",1);
		 A_TakeInventory("Zoomed",1);
         A_ZoomFactor(1.0);
		 A_TakeInventory("ADSmode",1);
		 } 
        SHSS DCBA 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
		
	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 ACS_NamedExecuteAlways("ToggleShotgunUpgraded",0) //For people who want this weapon to replace another
		TNT1 A 0 
		{
		A_SelectWeapon("Shot_Mag");
		A_Takeinventory("Unloading",1);
		A_TakeInventory("RifleSelected",1);
		A_TakeInventory("CarbineSelected",1);
		A_TakeInventory("FistsSelected",1);
		A_TakeInventory("SawSelected",1);
		A_TakeInventory("SledgeSelected",1);
		A_TakeInventory("HandgunSelected",1);
		A_TakeInventory("DualHandgunSelected",1);
		A_TakeInventory("RevolverSelected",1);
		A_GiveInventory("ShotgunSelected",1);
		A_TakeInventory("SSGSelected",1);
		A_TakeInventory("ASGSelected",1);
		A_TakeInventory("QSGSelected",1);
		A_TakeInventory("MinigunSelected",1);
		A_TakeInventory("NewChaingunSelected",1);	
	    A_TakeInventory("RocketLauncherSelected",1);
		A_TakeInventory("GrenadeLauncherSelected",1);
		A_TakeInventory("SGLSelected",1);
		A_TakeInventory("PlasmaGunSelected",1);
		A_TakeInventory("M2Selected",1);	
		A_TakeInventory("FreezerSelected",1);
		A_TakeInventory("RailGunSelected",1);
		A_TakeInventory("BFGSelected",1);
		A_TakeInventory("BFGBeamSelected",1);
		A_TakeInventory("BHCSelected",1);
		A_TakeInventory("RevenantLauncherSelected",1);
	    A_TakeInventory("FlameCannonSelected",1);
		A_TakeInventory("HellRifleSelected",1);
		A_TakeInventory("LandMineSelected",1);
		A_TakeInventory("UACSMGSelected",1);
		A_TakeInventory("SubMachineGunSelected",1);
		A_TakeInventory("LostSoulSelected",1);
		A_TakeInventory("HasBarrel",1);
		A_TakeInventory("HasBurningBarrel",1);
		}
		TNT1 A 0 A_Raise
		Wait
	   
    Fire:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("Zoomed", 1, "Fire2")
        TNT1 A 0 A_JumpIfInventory("ShotgunAmmo", 1, 1)
        Goto Reload
		TNT1 A 0 
		{
		A_TakeInventory("ShotgunAmmo", 1);
		A_AlertMonsters;
		A_FireCustomMissile("YellowFlareSpawn", 0, 0, 0, 0);
		A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0);
		}
		TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SlugFire")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath", 1, "DragonFire")
		TNT1 A 0 A_PlaySound("weapons/sg", 5)
		TNT1 AAAA 0 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		//TNT1 AAAAAA 0 A_FireCustomMissile("Tracer", Random(3, 3), 0, -1, Random(1, 1))
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0)
		SHTF AB 1 BRIGHT
		TNT1 A 0  
		{
		 A_FireBullets(3.65, 1.85,9,16,"ShotgunPuff",FBF_NORANDOM,8192,"Tracer",-2);////////////////////////////////////// Project Brutality Pump Shotgun
		 A_ZoomFactor(0.97);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		TNT1 A 0 
		{
		 A_ZoomFactor(0.98);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		SHTF C 1
		{
		 A_ZoomFactor(0.99);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		SHTF D 1
		{
		 A_ZoomFactor(1);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		Goto Pump1
	
	SlugFire:
		TNT1 A 0 A_PlaySound("SlugShot", 5)
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		//TNT1 A 0 A_FireCustomMissile("Tracer")
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0)
        SHTF AB 1 BRIGHT
		TNT1 A 0 
		{
		A_FireBullets(1.5, 0.5, 1, 144, "ShotgunPuff",FBF_NORANDOM,8192,"Tracer",-1);
		A_ZoomFactor(0.97);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		TNT1 A 0 
		{
		 A_ZoomFactor(0.98);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		SHTF C 1
		{
		 A_ZoomFactor(0.99);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		SHTF D 1
		{
		 A_ZoomFactor(1);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		Goto Pump1
	
	DragonFire:
		TNT1 AAAAA 0 A_FireCustomMissile("Tracer", Random(-5, 5), 0, -1, Random(-5, 5))
		TNT1 AAAAA 0 A_FireCustomMissile("DragonsBreathTracer", Random(-5, 5), 0, -1, Random(-5, 5))
		TNT1 A 0 A_PlaySound("DRBTFIRE", 5)
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0)
		SHTF AB 1 BRIGHT
		TNT1 A 0 
		{
		A_ZoomFactor(0.97);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		TNT1 A 0 
		{
		 A_ZoomFactor(0.98);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-1);
				A_SetAngle(angle-1);
				}
			else {
				A_SetPitch(pitch-2);
				A_SetAngle(angle-2);
				}
		 }
		SHTF C 1
		{
		 A_ZoomFactor(0.99);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		SHTF D 1
		{
		 A_ZoomFactor(1);
		 if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch+1);
				A_SetAngle(angle+1);
				}
			else {
				A_SetPitch(pitch+2);
				A_SetAngle(angle+2);
				}
		 }
		Goto Pump1
				
	Pump1:
	    TNT1 A 0 A_GiveInventory("IsCocking", 1)
		SHTG BCDEFG 1 
		 {
		  if (CountInv("Kicking") == 1) { return state("DoKick"); }
		  if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
		  return state("");
		 }
	P1Begin:
		SHTG HI 1
		 {
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHTD");} 
		 return state("");
		 }
	P1B:
	    SHTG J 1 A_PlaySound("weapons/sgpump", 1)
		TNT1 A 0
		 {
		 If(CountInv("HasSlugs") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,-4,-4);
		 return state("P1C");}        
		 If(CountInv("HasDragonBreath") >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,-4,-4);
		 return state("P1C");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,-4,-4);
		 return state("");
		 }
	P1C:	 
		SHTG KLM 1 
		SHTG MLK 1 
		SHTG J 1 A_PlaySound("weapons/sgpump", 1)
		SHTG IH 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHTD");} 
		 return state("");
		 }
		SHTG GFEDCB 1
		{
		  if (CountInv("Kicking") == 1) { return state("DoKick"); }
		  if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
		  return state("");
		 }
	P1End:	
        SHTG A 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHTD");}
		 A_WeaponReady(WRF_ALLOWRELOAD);
		 A_ReFire;
		 return state("");
		 }
		Goto Ready3
				
	Fire2:
        TNT1 A 0 A_TakeInventory("Reloading", 1)
        TNT1 A 0 A_JumpIfInventory("ShotgunAmmo", 1, 1)
        Goto Reload
        TNT1 A 0 
		{
		A_AlertMonsters;
		A_FireCustomMissile("YellowFlareSpawn", 0, 0, 0, 0);
		}
		TNT1 A 0 A_TakeInventory("ShotgunAmmo", 1)
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath", 1, "DragonFire2")
		TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SlugFire2")
        TNT1 A 0 A_PlaySound("weapons/sg", 5)
		TNT1 A 0 A_FireBullets(3.25, 1.35, 9, 8, "ShotgunPuff")
		TNT1 AAAAA 0 A_FireCustomMissile("Tracer", Random(-5, 5), 0, -1, Random(-5, 5))
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0)
		TNT1 A 0 A_SetPitch(-10.0 + pitch)
        SHT8 F 2 BRIGHT A_SetPitch(+2.5 + pitch)
		SHT8 GHI 1 A_SetPitch(+2.5 + pitch)
		Goto AltFirePump1
			
	SlugFire2:
		TNT1 A 0 A_PlaySound("SlugShot", 5)
		SHTG A 0 A_FireBullets(1.1, 0.25, 1, 67, "ShotgunPuff",0,0,"none",-2)
		SHTG A 0 A_FireCustomMissile("Tracer")
		TNT1 AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0)
		TNT1 A 0 A_SetPitch(-11.0 + pitch)
		SHT6 F 2 BRIGHT A_SetPitch(+2.5 + pitch)
		SHT6 GHI 1 A_SetPitch(+2.5 + pitch)
		Goto AltFirePump1

	DragonFire2:
        TNT1 A 0 A_PlaySound("DRBTFIRE", 5)
        TNT1 A 0
		TNT1 A 0 A_FireCustomMissile("YellowFlareSpawn", 0, 0, 0, 0)
		TNT1 AAAAA 0 A_FireCustomMissile("DragonsBreathTracer", Random(-5, 5), 0, -1, Random(-5, 5))
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		TNT1 AAAAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17))
		TNT1 AA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0)
        TNT1 A 0 A_SetPitch(-8.0 + pitch)
		SHT4 F 2 BRIGHT A_SetPitch(+2.0 + pitch)
		SHT4 GHI 1 A_SetPitch(+2.0 + pitch)
	
	AltFirePump1:
	    TNT1 A 0 A_PlaySound("weapons/sgmvpump")
		SHT8 JKLMNOPP 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		 }
		TNT1 A 0
		{
		 If(CountInv("HasSlugs") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,-4,-4);
		 return state("AFP1E");}        
		 If(CountInv("HasDragonBreath") >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,-4,-4);
		 return state("AFP1E");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,-4,-4);
		 return state("");
		 }
	AFP1E:	 
		TNT1 A 0 A_PlaySound("weapons/sgpump")
		SHT8 ONMLKJ 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		 }
		SHT8 A 5
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 A_WeaponReady(WRF_ALLOWRELOAD);
		 A_ReFire;
		 return state("");
		 }
		 Goto Ready2
							
	AltFire:
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_JumpIfInventory("Zoomed",1,8)
		TNT1 A 0 A_GiveInventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.2)
		TNT1 A 0 A_SetCrosshair(5)
		TNT1 A 0 A_GiveInventory("ADSmode",1)
        SHT8 E 2
		SHT8 DK 1
        Goto Ready2
        TNT1 AAAAAAAAAAAAA 0
        SHT8 KD 1
		SHT8 E 2
		TNT1 A 0 A_TakeInventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_SetCrosshair(0)
		TNT1 A 0 A_TakeInventory("ADSmode",1)
        Goto Ready3
	
	/*Pump2: // Old 7+1 Pump, Replaced with an 8+1 shell insert. Never Used.
		TNT1 A 0 A_GiveInventory ("Pumping", 1)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
	    TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		SHTG I 1 A_PlaySound("weapons/sgmvpump", 1)
	    SHTG JKLMLKJI 1
		SHTG I 1 A_PlaySound("weapons/sgpump", 1)
		SHTG FEDCB 1 A_JumpIfInventory("Kicking", 1, "DoKick")
		TNT1 A 0 A_Takeinventory("PBPumpShotgunWasEmpty",1)
		Goto ReadyToFireAgain*/
   
		
	ReadyToFireAgain:	
   //SHTG A 6 <-- Old frame
        SHTG A 1 Offset(10,36) // <-- New frames
        SHTG A 1 Offset(9,40) //
        SHTG A 1 Offset(4,40) //
        SHTG A 1 Offset(0,32) //
        SHTG A 0 A_Refire
        SHTG A 0 
		Goto Ready3
		
		
	ReloadWithNoAmmoLeft:
    Reload:
	    TNT1 A 0
		{
		A_TakeInventory("Reloading", 1);
	    A_Takeinventory("Zoomed",1);
        A_ZoomFactor(1.0);
		}
		SHTG A 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHTD");}
		 A_WeaponReady;
		 return state("");
		 }
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",9,"OkToFire")
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally")
		TNT1 A 0 A_GiveInventory("PBPumpShotgunWasEmpty", 1)
	ReloadNormally:	
		TNT1 A 0 A_JumpIfInventory("NewShell",1,1)
        Goto NoAmmo
        TNT1 A 0
		SHTG B 1 
		TNT1 A 0 A_GiveInventory ("Pumping", 1)
		SHTG CDE 1
	ReloadInsertShell:
		TNT1 A 0 A_GiveInventory ("Pumping", 1)
    ShellChecker:
		TNT1 A 0 A_JumpIfInventory("NewShell",1,1)
        Goto ReloadFinished
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",9,"ReloadFinished")
        TNT1 A 0 
		{
		A_Giveinventory("ShotgunAmmo",1);
		A_Takeinventory("NewShell",1);
		}
		SSHR A 1
		SSHR BC 1
		{
		 If(CountInv("HasSlugs") >=1 )        
		 {A_SetWeaponSprite("SHTS");}
		 //return state("");
		 If(CountInv("HasDragonBreath") >=1 )        
		 {A_SetWeaponSprite("SHTD");}
		 return state("");
		 }
		SSHR D 1 A_PlaySound("insertshell")	
		SSHR EFGHIJ 1 A_WeaponReady(WRF_NOBOB)
		SSHR A 0 A_Refire
        TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		Goto ShellChecker
	
	ReloadFinished:
		TNT1 A 0 A_JumpIfInventory("PBPumpShotgunWasEmpty", 1, "SideLoadShellChecker")
		SHTG FEDCBA 1 A_WeaponReady
		TNT1 A 0 A_Takeinventory("Reloading",1)
		TNT1 A 0 A_Refire
		Goto Ready3
		
	SideLoadShellChecker:
        TNT1 A 0
		TNT1 A 0 A_Takeinventory("PBPumpShotgunWasEmpty",1)
	SideLoadShellInsert:
		SSHR A 1
		SSHQ CDE 2 
		SSHQ F 1  A_WeaponReady(WRF_NOBOB)
		TNT1 A 0 A_JumpIfInventory("HasSlugs",1,"SlugSideLoadShell")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath",1,"DragonSideLoadShell") 
		SSHQ GH 2
		
	EndOfLSI:
		SSHQ I 1 A_PlaySound("insertshell") 
		SSHQ JK 1 A_WeaponReady(WRF_NOBOB)
		SSHR A 0 A_Refire
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
		SHTG FEDCBA 1 A_WeaponReady
		TNT1 A 0 A_Takeinventory("Reloading",1)
		TNT1 A 0 A_Refire
		Goto Ready3
	
	SlugSideLoadShell:
		SSHQ LM 2 
		Goto EndofLSI
	
	DragonSideLoadShell:
		SSHQ NO 2
		Goto EndofLSI
		
	//////////////////////////////////////
		
	OkToFire:
		SHTG A 1 A_WeaponReady
		Goto Ready3
	
	// Replaced. Currently Not Used.
	/*FakeReload:
	    TNT1 A 0 
		TNT1 A 0 A_TakeInventory("Zoomed", 1)
        TNT1 A 0 A_ZoomFactor(1.0)
		SHTG A 1 A_WeaponReady
        TNT1 AAAA 0
		SHTG B 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		TNT1 A 0 A_GiveInventory("IsCocking", 1)
		SHTG CDEF 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		TNT1 AAAAAAAA 0
        TNT1 AAAAA 0
		TNT1 A 0 A_GiveInventory("IsCocking", 1)
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SlugsFakeReload")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath",1,"DragonsbreathFakeReload")
		SSHR ABCDEF 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		SSHR G 1 A_PlaySound("insertshell")
    EndOfFakeReload:
		SSHR A 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
        TNT1 A 0 A_JumpIfInventory("Kicking", 1, "DoKick")
		TNT1 AAAAA 0
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		SHTG GGGGGGGGGGGGGG 0
		SHTG I 1 A_PlaySound("weapons/sgmvpump", 1)
		SHTG JKLMLKJI 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
        SHTG I 1 A_PlaySound("weapons/sgpump", 1)
		SHTG FEDCB 1 A_JumpIfInventory("Kicking", 1, "DoKick")
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 AAAAAAAAAAAAAAAAAAAA 0
		Goto Ready+23
	
	SlugsFakeReload:
		SSHR A 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
        SSHS BCD 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		SSHR EFG 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		Goto EndOfFakeReload
		
	DragonsBreathFakeReload:
		SSHR A 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
        SSHD BCD 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		SSHR EFG 1 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "WeaponSpecial")
		Goto EndOfFakeReload*/
		
	Unload:
		SHTG A 1
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_GiveInventory("PBPumpShotgunWasEmpty", 1)
        TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
        Goto OkToFire
        TNT1 AAA 0
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_GiveInventory ("Pumping", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		SHTG ABCDEFG 1
		
	RemoveBullets:
		TNT1 AAAA 0
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,3)
		Goto FinishUnload
        TNT1 AAAAAA 0
		TNT1 A 0 A_Takeinventory("ShotgunAmmo",1)
		TNT1 A 0 A_Giveinventory("NewShell",1)
		
		TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SlugUnload")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath",1,"DBUnload")
		SHTG I 1 A_PlaySound("weapons/sgmvpump", 1)
	ActuallyUnload:
		SHTG JKLM 1
		SHTG MLKJ 1
		TNT1 A 0 A_JumpIfInventory("HasSlugs", 1, "SlugUnload")
		TNT1 A 0 A_JumpIfInventory("HasDragonBreath",1,"DBUnload")
        SHTG I 1 A_PlaySound("weapons/sgpump", 2)
	ActuallyUnload2:
		SHTG GFED 1 A_JumpIfInventory("Kicking", 1, "DoKick")
	    TNT1 A 0 A_Giveinventory("PBPumpShotgunWasEmpty",1)
		Goto RemoveBullets
	
	SlugUnload:
	SHTG O 1 A_PlaySound("weapons/sgmvpump", 1)
	Goto ActuallyUnload
	
	SlugUnload2:
	SHTG O 1 A_PlaySound("weapons/sgmvpump", 1)
	Goto ActuallyUnload2
	
	DBUnload:
	SHTG Q 1 A_PlaySound("weapons/sgmvpump", 2)
	Goto ActuallyUnload
	
	DBUnload2:
	SHTG Q 1 A_PlaySound("weapons/sgmvpump", 2)
	Goto ActuallyUnload2
	
	FInishUnload:
		SHTG EDCBA 1
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto OkToFire	

	Spawn:
		SHTC A -1
		Stop
	
    FlashKicking:
		//TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded", 1, 2)
		SHTG B 1 
		SHTG C 1 
		SHTG D 1 
		SHTG E 1 
		SHTG F 1
		SHTG G 6
		SHTG F 1
		SHTG E 1 
		SHTG D 1 
		SHTG C 1 
		SHTG B 1 
		Stop
		
	FlashAirKicking:
		//TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded", 1, 2)
		SHTG B 1 
		SHTG C 1 
		SHTG D 1 
		SHTG E 1 
		SHTG F 1
		SHTG G 6
		SHTG F 1
		SHTG E 1 
		SHTG D 1 
		SHTG C 1 
		SHTG B 1
		Stop	
		
	FlashSlideKicking:
		//TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded", 1, 2)
		SHTG BC 2 
		SHTG DEEFGGGFFEE 2  
		Stop

	FlashSlideKickingStop:
		//TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded", 1, 2)
		SHTG EDCBA 1 
		SHTG A 1 
		Stop	
		
	FlashPunching:
		//TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded", 1, 2)
		SHTG B 1 
		SHTG C 1 
		SHTG D 1 
		SHTG E 1 
		SHTG F 1
		SHTG G 6
		SHTG F 1
		SHTG E 1 
		SHTG D 1 
		SHTG C 1 
		SHTG B 1 
		Stop
	}
}

ACTOR ShotgunAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 9
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 9
   Inventory.Icon "SHTCA1"
}